<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/23/2016 2:19:29 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="W7PC01XQ1T"
  DTS:CreatorName="ANGLICARE-SA\jshen"
  DTS:DTSID="{ECF38CC6-9772-4F56-ACF7-0DCE3F656457}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3002.101"
  DTS:LocaleID="3081"
  DTS:ObjectName="Conform_Temp - DEVNew_UTest"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="193"
  DTS:VersionGUID="{B9E733F2-E607-4ED0-BC49-689253A5B477}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[devsql-1\whouse.DWHB.asadwh]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{2E39C034-06C9-4755-865D-D0FF171F623F}"
      DTS:ObjectName="devsql-1\whouse.DWHB.asadwh">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=devsql-1\whouse;Initial Catalog=DWHB;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CC778559-AFC2-4E39-86B1-0A038805AE25}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="change_reason_code_new">
      <DTS:VariableValue
        DTS:DataType="8">N</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0736B3E2-BEA5-4EBA-A1FD-8780AD5644E1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="change_reason_code_update">
      <DTS:VariableValue
        DTS:DataType="8">U</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C2F58614-85CD-41F6-90D7-781635E5216D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="change_reason_description_new">
      <DTS:VariableValue
        DTS:DataType="8">NEW</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DB3B6D54-EA3A-4975-B50A-190BF9E2A991}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="change_reason_description_update">
      <DTS:VariableValue
        DTS:DataType="8">UPDATE</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{41139C87-B237-484B-83E4-42428C5E4081}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="current_row_indicator">
      <DTS:VariableValue
        DTS:DataType="8">Y</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4AB6B661-5539-467A-B374-C6AAA8631922}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="GETDATE()"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="row_effective_date">
      <DTS:VariableValue
        DTS:DataType="7">6/6/2018 2:33:12 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{978C630C-E7B8-4632-990E-84E3FC355498}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="GETDATE()"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="row_expiration_date">
      <DTS:VariableValue
        DTS:DataType="7">6/6/2018 2:33:12 PM</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{D8B79F06-06D9-40E0-AF64-E038CBD98E0C}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - employee_temp"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{6D97726E-D622-4DB8-B7E5-C652239832BC}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="SC - employee_temp">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - employee_temp\EST - populate employee_temp table"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{A71AA5D2-E3E8-4DAD-A5CA-3770FF621271}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EST - populate employee_temp table"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2E39C034-06C9-4755-865D-D0FF171F623F}"
                  SQLTask:SqlStatementSource="&#xA;--truncate table: temproray use need to chnage to using variable to just get yesterday's data&#xA;truncate table conform.employee_temp;&#xA;&#xA;/*&#xA;&#xA;--get all id_number, position&#xA;--remove duplicate position&#xA;--primary position&#xA;insert into conform.employee_temp(id_number, position_code,primary_position_flag,empl_cond_grade,empl_cond_level,job_pos_title)&#xA; select distinct tt.id_number,tt.position_code,'P', tt.empl_cond_grade,tt.empl_cond_level,tt.job_pos_title&#xA;from &#xA;(&#xA;select t1.id_number,t1.position_code,t1.EFFECTIVE_DATE,t1.empl_cond_grade,t1.empl_cond_level,t1.job_pos_title&#xA;from extract.HRHMN_EMPL_JOB_POS as t1&#xA;inner join&#xA;(&#xA;select id_number,max(EFFECTIVE_DATE) as EFFECTIVE_DATE&#xA;from extract.HRHMN_EMPL_JOB_POS&#xA;where POSITION_TYPE_IND='P'&#xA;group by id_number&#xA;) as t2&#xA;on t1.id_number =t2.id_number and t1.EFFECTIVE_DATE=t2.EFFECTIVE_DATE&#xA;and  t1.POSITION_TYPE_IND='P'&#xA;where t1.end_date='1900-01-01 00:00:00.000'  or (t1.end_date&lt;&gt;'1900-01-01 00:00:00.000' and t1.end_date&gt;getdate())&#xA;) as tt&#xA;&#xA;&#xA;--second position&#xA;insert into conform.employee_temp(id_number, position_code,primary_position_flag,empl_cond_grade,empl_cond_level,job_pos_title)&#xA;select distinct tt.id_number,tt.position_code,'S', tt.empl_cond_grade,tt.empl_cond_level,tt.job_pos_title&#xA;from &#xA;(&#xA;select t1.id_number,t1.position_code,t1.EFFECTIVE_DATE,t1.empl_cond_grade,t1.empl_cond_level,t1.job_pos_title&#xA;from extract.HRHMN_EMPL_JOB_POS as t1&#xA;inner join&#xA;(&#xA;select id_number,max(EFFECTIVE_DATE) as EFFECTIVE_DATE&#xA;from extract.HRHMN_EMPL_JOB_POS&#xA;where POSITION_TYPE_IND='S'&#xA;group by id_number&#xA;) as t2&#xA;on t1.id_number =t2.id_number and t1.EFFECTIVE_DATE=t2.EFFECTIVE_DATE&#xA;and  t1.POSITION_TYPE_IND='S'&#xA;where t1.end_date='1900-01-01 00:00:00.000'  or (t1.end_date&lt;&gt;'1900-01-01 00:00:00.000' and t1.end_date&gt;getdate())&#xA;) as tt&#xA;&#xA;&#xA;&#xA;--acting position&#xA;insert into conform.employee_temp(id_number, position_code,primary_position_flag,empl_cond_grade,empl_cond_level,job_pos_title)&#xA;select distinct tt.id_number,tt.position_code,'A', tt.empl_cond_grade,tt.empl_cond_level,tt.job_pos_title&#xA;from &#xA;(&#xA;select t1.id_number,t1.position_code,t1.EFFECTIVE_DATE,t1.empl_cond_grade,t1.empl_cond_level,t1.job_pos_title&#xA;from extract.HRHMN_EMPL_JOB_POS as t1&#xA;inner join&#xA;(&#xA;select id_number,max(EFFECTIVE_DATE) as EFFECTIVE_DATE&#xA;from extract.HRHMN_EMPL_JOB_POS&#xA;where POSITION_TYPE_IND='A'&#xA;group by id_number&#xA;) as t2&#xA;on t1.id_number =t2.id_number and t1.EFFECTIVE_DATE=t2.EFFECTIVE_DATE&#xA;and  t1.POSITION_TYPE_IND='A'&#xA;where t1.end_date='1900-01-01 00:00:00.000'  or (t1.end_date&lt;&gt;'1900-01-01 00:00:00.000' and t1.end_date&gt;getdate())&#xA;) as tt&#xA;&#xA;*/&#xA;&#xA;insert into conform.employee_temp(id_number, position_code,primary_position_flag,empl_cond_grade,empl_cond_level,job_pos_title)&#xA; select distinct tt.id_number,tt.position_code,tt.position_type_ind, tt.empl_cond_grade,tt.empl_cond_level,tt.job_pos_title&#xA;from &#xA;(&#xA;select t1.id_number,t1.position_code,t1.EFFECTIVE_DATE,t1.empl_cond_grade,t1.empl_cond_level,t1.job_pos_title,t1.position_type_ind&#xA;from extract.HRHMN_EMPL_JOB_POS as t1&#xA;inner join&#xA;(&#xA;select id_number,max(EFFECTIVE_DATE) as EFFECTIVE_DATE&#xA;from extract.HRHMN_EMPL_JOB_POS&#xA;where effective_date&lt;=getdate()&#xA;group by id_number&#xA;) as t2&#xA;on t1.id_number =t2.id_number and t1.EFFECTIVE_DATE=t2.EFFECTIVE_DATE&#xA;where t1.end_date='1900-01-01 00:00:00.000'  or (t1.end_date&lt;&gt;'1900-01-01 00:00:00.000' and t1.end_date&gt;getdate())&#xA;) as tt&#xA;&#xA;&#xA;--pupulate data&#xA;   update tg1&#xA;  set tg1.program_code=ttt.Grandparent, &#xA;&#x9;--  tg1.primary_position_flag=ttt.position_type_ind,&#xA;&#x9;  tg1.position_start_date=ttt.effective_date,&#xA;&#x9;  tg1.termination_date=ttt.END_DATE&#xA;  from conform.employee_temp as tg1&#xA;  inner join&#xA;&#xA;  (&#xA;  -- most of employee&#xA;  select &#xA;  t4.ID_NUMBER,  &#xA;  t1.HIERARCHY_CODE, &#xA;  t1.HIERARCHY_TYPE, &#xA;  t1.CURRENT_LEVEL, &#xA;  t2.HIERARCHY_DESCR, &#xA;  t1.PARENT_NODE, &#xA;  t1.PARENT_TYPE, &#xA;  t3.PARENT_NODE 'Grandparent', &#xA;  t3.PARENT_TYPE 'Grandparent type'  ,&#xA;  t4.position_type_ind, &#xA;  t4.END_DATE,  &#xA;  min(t4.effective_date) as effective_date,&#xA;  max(t4.vers) as vers&#xA;  from extract.HRSYS_HIERARCH_ITM t1&#xA;  ,extract.HRSYS_HIERARCH_CTL t2&#xA;  ,extract.HRSYS_HIERARCH_ITM t3&#xA;  ,extract.HRHMN_EMPL_JOB_POS t4&#xA;  where t1.HIERARCHY_CODE = t2.HIERARCHY_CODE &#x9; COLLATE DATABASE_DEFAULT &#xA;  and t1.PARENT_NODE = t3.HIERARCHY_CODE&#x9;  COLLATE DATABASE_DEFAULT &#xA;  and t1.CURRENT_LEVEL = 7&#xA;  and t1.HIERARCHY_TYPE = 'POSITION'&#xA;  and t3.PARENT_TYPE = 'ORGUNIT'&#xA;  and t1.HIERARCHY_CODE = t4.POSITION_CODE&#x9;&#x9;  COLLATE DATABASE_DEFAULT &#xA;  group by &#x9;  &#xA;  t4.ID_NUMBER,  &#xA;  t1.HIERARCHY_CODE, &#xA;  t1.HIERARCHY_TYPE, &#xA;  t1.CURRENT_LEVEL, &#xA;  t2.HIERARCHY_DESCR, &#xA;  t1.PARENT_NODE, &#xA;  t1.PARENT_TYPE, &#xA;  t3.PARENT_NODE, &#xA;  t3.PARENT_TYPE  ,&#xA;  t4.position_type_ind,&#xA;  t4.END_DATE &#xA;&#xA;  union&#xA;&#xA;  -- managers&#xA;  select &#xA;  t4.ID_NUMBER,  &#xA;  t1.HIERARCHY_CODE, &#xA;  t1.HIERARCHY_TYPE, &#xA;  t1.CURRENT_LEVEL, &#xA;  t2.HIERARCHY_DESCR, &#xA;  t1.PARENT_NODE, &#xA;  t1.PARENT_TYPE, &#xA;  t3.PARENT_NODE 'Grandparent', &#xA;  t3.PARENT_TYPE 'Grandparent type'  ,&#xA;  t4.position_type_ind, &#xA;  t4.END_DATE,  &#xA;  min(t4.effective_date) as effective_date,&#xA;  max(t4.vers) as vers&#xA;  from extract.HRSYS_HIERARCH_ITM t1&#xA;  ,extract.HRSYS_HIERARCH_CTL t2&#xA;  ,extract.HRSYS_HIERARCH_ITM t3&#xA;  ,extract.HRHMN_EMPL_JOB_POS t4&#xA;  where t1.HIERARCHY_CODE = t2.HIERARCHY_CODE &#x9;    COLLATE DATABASE_DEFAULT &#xA;  and t1.PARENT_NODE = t3.HIERARCHY_CODE&#x9;&#x9;  COLLATE DATABASE_DEFAULT &#xA;   and t1.CURRENT_LEVEL in (1,3,4,5,8,6)&#xA;  and t2.HIERARCHY_TYPE='POSITION'&#xA;  and t3.PARENT_TYPE = 'POSITION'&#xA;  and t1.HIERARCHY_CODE = t4.POSITION_CODE&#x9;&#x9;  COLLATE DATABASE_DEFAULT &#xA;  group by &#x9;  &#xA;  t4.ID_NUMBER,  &#xA;  t1.HIERARCHY_CODE, &#xA;  t1.HIERARCHY_TYPE, &#xA;  t1.CURRENT_LEVEL, &#xA;  t2.HIERARCHY_DESCR, &#xA;  t1.PARENT_NODE, &#xA;  t1.PARENT_TYPE, &#xA;  t3.PARENT_NODE, &#xA;  t3.PARENT_TYPE  ,&#xA;  t4.position_type_ind,&#xA;  t4.END_DATE &#xA;  &#xA;UNION&#xA;  --General managers&#xA;   select &#xA;  t4.ID_NUMBER,  &#xA;  t1.HIERARCHY_CODE, &#xA;  t1.HIERARCHY_TYPE, &#xA;  t1.CURRENT_LEVEL, &#xA;  t2.HIERARCHY_DESCR, &#xA;  t1.PARENT_NODE, &#xA;  t1.PARENT_TYPE, &#xA;  t3.PARENT_NODE 'Grandparent', &#xA;  t3.PARENT_TYPE 'Grandparent type'  ,&#xA;  t4.position_type_ind, &#xA;  t4.END_DATE,  &#xA;  min(t4.effective_date) as effective_date,&#xA;  max(t4.vers) as vers&#xA;  from extract.HRHMN_EMPL_JOB_POS t4&#xA;  left join  extract.HRSYS_HIERARCH_ITM t1 on t1.HIERARCHY_CODE = t4.POSITION_CODE&#x9;    COLLATE DATABASE_DEFAULT &#xA;  left join extract.HRSYS_HIERARCH_CTL t2 on  t1.HIERARCHY_CODE = t2.HIERARCHY_CODE &#x9; COLLATE DATABASE_DEFAULT &#xA;  left join extract.HRSYS_HIERARCH_ITM t3 on  t1.PARENT_NODE = t3.HIERARCHY_CODE&#x9;  COLLATE DATABASE_DEFAULT &#xA;    where  t1.CURRENT_LEVEL in (2)&#xA;  AND t2.HIERARCHY_TYPE='POSITION'&#xA;  and t3.PARENT_TYPE = 'ORGUNIT'&#xA;  AND t1.PARENT_TYPE='POSITION'&#xA;&#xA;  group by &#x9;  &#xA;  t4.ID_NUMBER,  &#xA;  t1.HIERARCHY_CODE, &#xA;  t1.HIERARCHY_TYPE, &#xA;  t1.CURRENT_LEVEL, &#xA;  t2.HIERARCHY_DESCR, &#xA;  t1.PARENT_NODE, &#xA;  t1.PARENT_TYPE, &#xA;  t3.PARENT_NODE, &#xA;  t3.PARENT_TYPE  ,&#xA;  t4.position_type_ind,&#xA;  t4.END_DATE &#xA;&#xA;&#xA;union&#xA;  -- some employees&#xA;  select &#xA;  t4.ID_NUMBER,  &#xA;  t1.HIERARCHY_CODE, &#xA;  t1.HIERARCHY_TYPE, &#xA;  t1.CURRENT_LEVEL, &#xA;  t2.HIERARCHY_DESCR, &#xA;  t1.PARENT_NODE, &#xA;  t1.PARENT_TYPE, &#xA;  t3.PARENT_NODE 'Grandparent', &#xA;  t3.PARENT_TYPE 'Grandparent type'  ,&#xA;  t4.position_type_ind, &#xA;  t4.END_DATE,  &#xA;  min(t4.effective_date) as effective_date,&#xA;  max(t4.vers) as vers&#xA;  from   extract.HRHMN_EMPL_JOB_POS as  t4&#xA;  left join extract.HRSYS_HIERARCH_ITM as  t1 on t1.HIERARCHY_CODE = t4.POSITION_CODE&#x9;&#x9; COLLATE DATABASE_DEFAULT &#xA;  left join extract.HRSYS_HIERARCH_CTL as t2 on t1.HIERARCHY_CODE = t2.HIERARCHY_CODE &#x9;    COLLATE DATABASE_DEFAULT &#xA;  left join extract.HRSYS_HIERARCH_ITM as t3 on t1.PARENT_NODE = t3.HIERARCHY_CODE&#x9;&#x9;   COLLATE DATABASE_DEFAULT &#xA; where  t1.CURRENT_LEVEL = 7&#xA;  and t1.HIERARCHY_TYPE = 'POSITION'&#xA;  and t3.PARENT_TYPE = 'Position'&#xA;&#xA; and t4.id_number not in &#xA; (select distinct  t4.ID_NUMBER&#xA;  from   extract.HRHMN_EMPL_JOB_POS as  t4&#xA;  left join extract.HRSYS_HIERARCH_ITM as  t1 on t1.HIERARCHY_CODE = t4.POSITION_CODE&#x9;    COLLATE DATABASE_DEFAULT &#xA;  left join extract.HRSYS_HIERARCH_CTL as t2 on t1.HIERARCHY_CODE = t2.HIERARCHY_CODE &#x9;   COLLATE DATABASE_DEFAULT &#xA;  left join extract.HRSYS_HIERARCH_ITM as t3 on t1.PARENT_NODE = t3.HIERARCHY_CODE&#x9;&#x9;   COLLATE DATABASE_DEFAULT &#xA; where  t1.CURRENT_LEVEL = 7&#xA;  and t1.HIERARCHY_TYPE = 'POSITION'&#xA;  and t3.PARENT_TYPE = 'ORGUNIT'&#xA; )&#xA;&#xA;  group by &#x9;  &#xA;  t4.ID_NUMBER,  &#xA;  t1.HIERARCHY_CODE, &#xA;  t1.HIERARCHY_TYPE, &#xA;  t1.CURRENT_LEVEL, &#xA;  t2.HIERARCHY_DESCR, &#xA;  t1.PARENT_NODE, &#xA;  t1.PARENT_TYPE, &#xA;  t3.PARENT_NODE, &#xA;  t3.PARENT_TYPE  ,&#xA;  t4.position_type_ind,&#xA;  t4.END_DATE &#xA;&#xA;union&#xA;  &#xA;  -- some managers&#xA;  select &#xA;  t4.ID_NUMBER,  &#xA;  t1.HIERARCHY_CODE, &#xA;  t1.HIERARCHY_TYPE, &#xA;  t1.CURRENT_LEVEL, &#xA;  t2.HIERARCHY_DESCR, &#xA;  t1.PARENT_NODE, &#xA;  t1.PARENT_TYPE, &#xA;  t3.PARENT_NODE 'Grandparent', &#xA;  t3.PARENT_TYPE 'Grandparent type'  ,&#xA;  t4.position_type_ind, &#xA;  t4.END_DATE,&#xA;  min(t4.effective_date) as effective_date,&#xA;max(t4.vers) as vers&#xA;  from extract.HRHMN_EMPL_JOB_POS t4&#xA;  left join  extract.HRSYS_HIERARCH_ITM t1 on t1.HIERARCHY_CODE = t4.POSITION_CODE&#x9;&#x9;  COLLATE DATABASE_DEFAULT &#xA;  left join extract.HRSYS_HIERARCH_CTL t2 on  t1.HIERARCHY_CODE = t2.HIERARCHY_CODE &#x9;  COLLATE DATABASE_DEFAULT &#xA;  left join extract.HRSYS_HIERARCH_ITM t3 on  t1.PARENT_NODE = t3.HIERARCHY_CODE&#x9;&#x9;  COLLATE DATABASE_DEFAULT &#xA;  &#xA;    where  t1.CURRENT_LEVEL in (1,3,4,5,8,6)&#xA;  AND t2.HIERARCHY_TYPE='POSITION'&#xA;  and t3.PARENT_TYPE = 'ORGUNIT'&#xA;  and t4.id_number not in (&#xA;&#xA;     select &#xA; distinct  t4.ID_NUMBER  &#xA;&#xA;  from extract.HRHMN_EMPL_JOB_POS t4&#xA;  left join  extract.HRSYS_HIERARCH_ITM t1 on t1.HIERARCHY_CODE = t4.POSITION_CODE&#x9;&#x9; COLLATE DATABASE_DEFAULT &#xA;  left join extract.HRSYS_HIERARCH_CTL t2 on  t1.HIERARCHY_CODE = t2.HIERARCHY_CODE &#x9; COLLATE DATABASE_DEFAULT &#xA;  left join extract.HRSYS_HIERARCH_ITM t3 on  t1.PARENT_NODE = t3.HIERARCHY_CODE&#x9;&#x9;  COLLATE DATABASE_DEFAULT &#xA;    where  t1.CURRENT_LEVEL in (1,3,4,5,8,6)&#xA;  AND t2.HIERARCHY_TYPE='POSITION'&#xA;  and t3.PARENT_TYPE = 'POSITION'&#xA;&#xA;)&#xA;&#xA;  group by &#x9;  &#xA;  t4.ID_NUMBER,  &#xA;  t1.HIERARCHY_CODE, &#xA;  t1.HIERARCHY_TYPE, &#xA;  t1.CURRENT_LEVEL, &#xA;  t2.HIERARCHY_DESCR, &#xA;  t1.PARENT_NODE, &#xA;  t1.PARENT_TYPE, &#xA;  t3.PARENT_NODE, &#xA;  t3.PARENT_TYPE  ,&#xA;  t4.position_type_ind,&#xA;  t4.END_DATE &#xA;&#xA;&#xA;&#xA;) as ttt&#xA;&#xA;on tg1.id_number=ttt.id_number &#xA; and     tg1.position_code=ttt.HIERARCHY_CODE COLLATE DATABASE_DEFAULT &#xA;&#xA;&#xA;---update position-start-date, termination_date, primary_position_flag&#xA;/*&#xA;update t1&#xA;set t1.position_start_date =t2.effective_date&#xA;from conform.employee_temp as t1&#xA;inner join  extract.HRHMN_EMPL_JOB_POS as t2&#xA;on t1.id_number=t2.id_number &#xA;and t1.position_code=t2.position_code  COLLATE DATABASE_DEFAULT&#xA;where t1.position_start_date is null &#xA;&#xA;update t1&#xA;set t1.termination_date =t2.END_DATE&#xA;from conform.employee_temp as t1&#xA;inner join  extract.HRHMN_EMPL_JOB_POS as t2&#xA;on t1.id_number=t2.id_number &#xA;and t1.position_code=t2.position_code  COLLATE DATABASE_DEFAULT&#xA;where t1.termination_date is null &#xA;*/&#xA;&#xA;&#xA;------------------------------------------------------changed below at 16/03/2017---------------------------------------------------------------------------------------&#xA;update t1&#xA;set t1.position_start_date =t2.effective_date&#xA;from conform.employee_temp as t1&#xA;inner join  &#xA;(select id_number,position_code,min(effective_date) as &#x9; effective_date&#xA;from  extract.HRHMN_EMPL_JOB_POS&#xA;group by  id_number,position_code)&#xA; as t2 on t1.id_number=t2.id_number &#x9;   and t1.position_code=t2.position_code  COLLATE DATABASE_DEFAULT&#xA;&#xA;update t1&#xA;set t1.termination_date =t2.END_DATE&#xA;from conform.employee_temp as t1&#xA;inner join  &#xA;(select f1.id_number,f1.position_code,f1.end_date ,f1.effective_date&#xA;from  extract.HRHMN_EMPL_JOB_POS as f1&#xA;inner join&#xA;(&#xA;select id_number,position_code,max(effective_date) as &#x9; effective_date&#xA;from  extract.HRHMN_EMPL_JOB_POS&#xA;group by  id_number,position_code&#xA;) as f2&#xA;on f1.id_number =f2.id_number &#xA;and f1.position_code=f2.position_code&#xA;and f1.effective_date=f2.effective_date&#xA;) as t2&#xA;on t1.id_number=t2.id_number &#xA;and t1.position_code=t2.position_code  COLLATE DATABASE_DEFAULT&#xA;&#xA;------------------------------------------------------changed above at 16/03/2017---------------------------------------------------------------------------------------&#xA;&#xA;&#xA;&#xA;--update position_key&#xA; update conform.employee_temp&#xA; set conform.employee_temp.position_key = d1.position_key&#xA; from&#xA; conform.employee_temp as t1&#xA; inner join conform.position_dim d1&#xA; on t1.position_code = d1.position_code  &#xA;and t1.job_pos_title=d1.position_name&#xA;---and t1.[empl_cond_grade] = d1.grade&#xA; ---and t1.[empl_cond_level]=d1.level&#xA; and d1.current_row_indicator='Y'&#xA;&#xA;&#xA;--added at 19/04/2017 to fix some position_key issue especially one position_code has more than one position_key in position_dim&#xA;update kk&#xA;set kk.position_key=gg.position_key &#xA;from conform.employee_temp as kk&#x9;   &#xA;&#xA;inner join&#xA;&#xA;(&#xA;&#xA;   select &#xA;       ff.*,&#xA;&#x9;   d1.position_key&#xA;     from &#xA;&#x9;  (  select t1.id_number,&#xA;&#x9;&#x9; t1.position_code,&#xA;&#x9;&#x9; t1.job_pos_title,&#xA;&#x9;&#x9; t1.empl_cond_award,&#xA;&#x9;&#x9; t1.empl_cond_grade,&#xA;&#x9;&#x9; t1.empl_cond_level&#xA;&#x9;&#x9;from extract.HRHMN_EMPL_JOB_POS as t1&#xA;&#x9;&#x9;inner join&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;select id_number,position_code,max(effective_date) as effective_date&#xA;&#x9;&#x9;from extract.HRHMN_EMPL_JOB_POS&#xA;&#x9;&#x9;group by id_number,position_code&#xA;&#x9;&#x9;) as t2&#xA;&#x9;&#x9;on t1.id_number=t2.id_number&#xA;&#x9;&#x9;and t1.position_code=t2.position_code&#xA;&#x9;&#x9;and t1.effective_date = t2.effective_date&#xA;&#x9;&#x9;&#x9;) as ff&#xA;&#x9;&#x9;inner join conform.position_dim as d1&#xA;&#x9;&#x9;on ff.position_code=d1.position_code&#xA;&#x9;&#x9;and ff.job_pos_title=d1.position_name&#xA;&#x9;&#x9;and ff.empl_cond_award=d1.condition&#xA;&#x9;&#x9;and ff.empl_cond_grade=d1.grade&#xA;&#x9;&#x9;and ff.empl_cond_level=d1.level&#xA;&#x9;&#x9;and d1.current_row_indicator='Y'&#xA;&#xA; ) as  gg&#xA; on kk.id_number =gg.id_number &#xA; and kk.position_code =gg.position_code&#xA; and kk.position_key&lt;&gt;gg.position_key&#xA; and kk.position_code in &#xA;  (&#x9;select distinct gg.position_code as position_code&#xA; from (&#xA; select position_code, count(*) as scount&#xA; from conform.position_dim&#xA; where current_row_indicator='Y'&#xA; group by position_code having count(*)&gt;1 ) as gg&#xA; )&#xA;&#xA;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#xA;&#xA;&#xA;  -- update hired date&#xA;  update conform.employee_temp&#xA;  set conform.employee_temp.hired_date = t2.date_hired&#x9;,conform.employee_temp.probation_end_date=t2.PROBATN_PERIOD_END&#xA;  from&#xA;   conform.employee_temp as t1&#xA;  inner join [extract].[HRHMN_EMPL_JOB_CTL] as t2&#xA;  on t1.id_number = t2.id_number&#xA;&#xA;&#xA;&#xA; -- deal with null keys&#xA;  update conform.employee_temp &#xA;  set conform.employee_temp.position_key = (select d1.position_key from conform.position_dim d1 where d1.position_name = 'No Position' and current_row_indicator='Y')&#xA;  where conform.employee_temp.position_key is null &#xA;&#xA;  --get employee_key&#xA; update&#x9;t1&#xA; set t1.employee_key =t2.employee_key&#xA; from  conform.employee_temp  as t1&#xA; inner join conform.employee_dim&#x9;as t2&#xA; on    t1.id_number=t2.id_number &#xA; where t2.current_row_indicator='Y'&#xA;&#xA;&#xA;-------------------------------update program_key--------------------------------------------------------------------------------------------------------------------------&#xA;--update program_code from job_pos table&#xA;  update t2&#xA;  set t2.program_code=t3.program_code&#xA;  from conform.employee_temp as t2&#xA;  inner join&#xA;  (&#xA;  SELECT distinct t1.id_number ,d1.program_code,t1.position_code&#xA;  FROM [DWHB].[extract].[HRHMN_EMPL_JOB_POS]  as t1&#xA;  inner join conform.program_dim as d1&#xA;  on t1.DEPARTMENT_CODE=d1.program_code COLLATE DATABASE_DEFAULT  and d1.current_row_indicator='Y') as t3&#xA;  on t2.id_number=t3.ID_NUMBER&#xA;  and t2.position_code=t3.position_code&#xA;&#xA;--update sub_program_code -&gt; program_code&#xA;  update t1&#xA;  set t1.program_code=t2.program_code&#xA;  from conform.employee_temp as t1&#xA;  inner join  conform.sub_program_temp as t2&#xA;  on t1.program_code=t2.sub_program_code&#xA;&#xA;&#xA;&#xA;   --update program_key&#xA;  update t1&#xA;  set t1.program_key=t2.program_key,t1.service_stream_code=t2.service_stream_code&#xA;  from conform.employee_temp as t1&#xA;  inner join   conform.program_temp as t2&#xA;  on t1.program_code=t2.program_code&#xA;&#xA;&#xA;&#xA;----------------update servive_stream key----------------------------------------------------------------------------------------------------------------------------&#xA;   update t2&#xA;  set t2.service_stream_code=t3.service_stream_code&#xA;  from conform.employee_temp as t2&#xA;  inner join&#xA;  (&#xA; &#xA;  SELECT distinct t1.id_number ,d1.service_stream_code,t1.position_code&#xA;  FROM [DWHB].[extract].[HRHMN_EMPL_JOB_POS]  as t1&#xA;  inner join conform.service_stream_dim as d1&#xA;  on t1.DEPARTMENT_CODE=d1.service_stream_code COLLATE DATABASE_DEFAULT  and d1.current_row_indicator='Y') as t3&#xA;  on t2.id_number=t3.ID_NUMBER&#xA;  and t2.position_code=t3.position_code&#xA;&#xA;    update t1&#xA;  set t1.portfolio_code=t2.portfolio_code  ,t1.service_stream_key=t2.service_stream_key&#xA;  from conform.employee_temp as t1&#xA;  inner join   conform.service_stream_temp as t2&#xA;  on t1.service_stream_code=t2.service_stream_code&#xA;&#xA;&#xA;&#xA;   -- org code&#xA;   update t1&#xA;  set t1.portfolio_key=t2.portfolio_key,t1.organisation_code=t2.organisation_code&#xA;  from conform.employee_temp as t1&#xA;  inner join   conform.portfolio_temp as t2&#xA;  on t1.portfolio_code=t2.portfolio_code&#xA;&#xA;  update  conform.employee_temp&#xA;  set organisation_code=1&#xA;&#xA;&#xA;  --org _key&#xA;   update t1&#xA;  set t1.organisation_key =t2.organisation_key&#xA;  from conform.employee_temp as t1&#xA;  inner join   conform.organisation_dim as t2&#xA;  on t1.organisation_code=t2.organisation_code&#xA;  where t2.current_row_indicator='Y'&#xA;&#xA;&#xA;&#xA;&#xA;&#xA; ------------------ based on job_position table. department to update -portfolio_code, service_stream, program-----------&#xA;--portfolio_key&#xA; update t2&#xA;  set t2.portfolio_code=t3.portfolio_code, t2.portfolio_key=t3.portfolio_key&#xA;  from conform.employee_temp as t2&#xA;  inner join&#xA;  (&#xA; &#xA; SELECT distinct t1.id_number ,d1.portfolio_code, d1.portfolio_key, t1.position_code&#xA;  FROM [DWHB].[extract].[HRHMN_EMPL_JOB_POS]  as t1&#xA;  inner join conform.portfolio_dim as d1&#xA;  on t1.DEPARTMENT_CODE=d1.portfolio_code COLLATE DATABASE_DEFAULT   and d1.current_row_indicator='Y') as t3&#xA;  on t2.id_number=t3.ID_NUMBER&#xA; and t2.position_code=t3.position_code&#xA;&#xA;--service_stream_key&#xA;  update t2&#xA;  set t2.service_stream_code=t3.service_stream_code, t2.service_stream_key=t3.service_stream_key&#xA;  from conform.employee_temp as t2&#xA;  inner join&#xA;  (&#xA; &#xA; SELECT distinct t1.id_number ,d1.service_stream_code, d1.service_stream_key,  t1.position_code&#xA;  FROM [DWHB].[extract].[HRHMN_EMPL_JOB_POS]  as t1&#xA;  inner join conform.service_stream_dim as d1&#xA;  on t1.DEPARTMENT_CODE=d1.service_stream_code COLLATE DATABASE_DEFAULT   and d1.current_row_indicator='Y') as t3&#xA;  on t2.id_number=t3.ID_NUMBER&#xA; and t2.position_code=t3.position_code&#xA;&#xA;--program_key&#xA;  update t2&#xA;  set t2.program_code=t3.program_code, t2.program_key=t3.program_key&#xA;  from conform.employee_temp as t2&#xA;  inner join&#xA;  (&#xA; &#xA; SELECT distinct t1.id_number ,d1.program_code, d1.program_key ,   t1.position_code&#xA;  FROM [DWHB].[extract].[HRHMN_EMPL_JOB_POS]  as t1&#xA;  inner join conform.program_dim as d1&#xA;  on t1.DEPARTMENT_CODE=d1.program_code COLLATE DATABASE_DEFAULT   and d1.current_row_indicator='Y') as t3&#xA;  on t2.id_number=t3.ID_NUMBER&#xA;  and t2.position_code=t3.position_code&#xA;&#xA;--------------some special cases --maybe need to remove later--------------------------------------------------------------------------------------------------------&#xA;---- program: 10051 - Autism Services&#xA;--update conform.employee_temp &#xA;--set portfolio_key=4, service_stream_key=4, service_stream_code=10049,portfolio_code=10042&#xA;--where program_code=10051&#xA;&#xA;---program: 10089 - pay roll team&#xA;--update conform.employee_temp &#xA;--set portfolio_code=10101,portfolio_key=10, program_code=10089,program_key=40&#xA;--where program_code=10089&#xA;&#xA;&#xA;&#xA; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;--- fix some issues&#xA;  update t1&#xA;  set t1.portfolio_key=t2.portfolio_key&#xA;  from conform.employee_temp as t1&#xA;  inner join conform.portfolio_temp as t2&#xA;  on t1.portfolio_code=t2.portfolio_code&#xA;  and t1.portfolio_key&lt;&gt;t2.portfolio_key&#xA;&#xA;&#xA;   update t1&#xA;  set t1.program_key=t2.program_key&#xA;  from conform.employee_temp as t1&#xA;  inner join conform.program_temp as t2&#xA;  on t1.program_code=t2.program_code&#xA;  and t1.program_key&lt;&gt;t2.program_key&#xA;&#xA;&#xA;--update employee_key for termiante employee&#xA;update  t1&#xA;set t1.employee_key =  t2.employee_key&#xA;from  conform.employee_temp&#x9;   as t1&#xA;inner join &#xA;( select distinct id_number, max(employee_key) as employee_key&#xA; from conform.employee_dim &#x9;&#xA; where id_number in (select id_number from &#x9;[extract].[HRHMN_EMPLTERM_DTL])&#xA; group by  id_number&#xA; ) &#xA; as t2&#xA; on t1.id_number =t2.id_number&#xA;&#xA;/*&#xA;---update employee_key is null&#xA;update  conform.employee_temp&#xA;set employee_key = (select employee_key  from conform.employee_dim &#x9;where id_number=9999999)&#xA;where employee_key is null&#xA;*/&#xA;&#xA;&#xA;--delete employee whose employee_key is null&#xA;delete from  conform.employee_temp&#xA;where employee_key is null&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - employee_temp\EST - populate No Program No SS No Portfilio No Org"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{1A7D944E-EE40-4448-B15B-E10039716636}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EST - populate No Program No SS No Portfilio No Org"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2E39C034-06C9-4755-865D-D0FF171F623F}"
                  SQLTask:SqlStatementSource=" -- no program&#xA;  update  conform.employee_temp&#xA;  set program_key=(select program_key from conform.program_dim where current_row_indicator='Y' and program_name='No Program')&#xA;  where program_key is null;&#xA;  -- no service stream&#xA;  update  conform.employee_temp&#xA;  set service_stream_key=(select service_stream_key from conform.service_stream_dim where current_row_indicator='Y' and service_stream_name='No Service Stream')&#xA;  where service_stream_key is null;&#xA;  -- no portfolio&#xA;   update  conform.employee_temp&#xA;  set portfolio_key=(select portfolio_key from conform.portfolio_dim where current_row_indicator='Y' and portfolio_name='No Portfolio')&#xA;  where portfolio_key is null;&#xA;  --no organisation&#xA;   update  conform.employee_temp&#xA;  set organisation_key=(select organisation_key from conform.organisation_dim where current_row_indicator='Y' and organisation_name='No Organisation')&#xA;  where organisation_key is null;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - employee_temp.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{BDD6D668-0403-4A30-82C4-38CF9947F91D}"
              DTS:From="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - employee_temp\EST - populate employee_temp table"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - employee_temp\EST - populate No Program No SS No Portfilio No Org"
              DTS:Value="2" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - portfolio_temp"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{8EE44C01-C276-44AE-B8D5-F0BD5BADE9EE}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="SC - portfolio_temp">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - portfolio_temp\EST - populate portfolio temp table"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{75A4D3AF-97CC-4FFF-809A-BCEFE1B1EEB9}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EST - populate portfolio temp table"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2E39C034-06C9-4755-865D-D0FF171F623F}"
                  SQLTask:SqlStatementSource="truncate table  conform.portfolio_temp &#xA;&#xA;  insert into conform.portfolio_temp  &#xA;  select distinct &#xA;          t1.portfolio_key,&#xA;         t2.HIERARCHY_CODE,&#xA;&#x9;&#x9; t2.PARENT_NODE&#xA;&#xA;  from conform.portfolio_dim as t1&#xA;  inner join   &#xA;  ( select t1.HIERARCHY_CODE, t1.HIERARCHY_TYPE, t1.CURRENT_LEVEL, t2.HIERARCHY_DESCR, t1.PARENT_NODE&#xA;  from extract.HRSYS_HIERARCH_ITM t1&#xA;  ,extract.HRSYS_HIERARCH_CTL t2&#xA;  where t1.HIERARCHY_TYPE = 'ORGUNIT'&#xA;  and t1.CURRENT_LEVEL = 2&#xA;  and t1.HIERARCHY_CODE = t2.HIERARCHY_CODE COLLATE DATABASE_DEFAULT ) as t2&#xA;  on t1.portfolio_code=t2.HIERARCHY_CODE  COLLATE DATABASE_DEFAULT&#xA;  where t1.current_row_indicator='Y'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - program_temp"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{87DFFE77-6949-4B0D-9097-8806877787EF}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="SC - program_temp">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - program_temp\EST - populate program_temp table"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{E8A876B0-D58D-4D2E-BB70-BF4A6B6A1B43}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EST - populate program_temp table"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2E39C034-06C9-4755-865D-D0FF171F623F}"
                  SQLTask:SqlStatementSource="  -- truncate table&#xA;   truncate table conform.program_temp2  ;&#xA;&#xA;   --populate &#xA;   insert into conform.program_temp  &#xA;  select distinct t1.program_key,&#xA;         t2.HIERARCHY_CODE,&#xA;&#x9;&#x9; t2.Service_stream_code&#xA;&#xA;  from conform.program_dim as t1&#xA;  inner join   &#xA;  ( select t1.HIERARCHY_CODE, t1.HIERARCHY_TYPE, t1.CURRENT_LEVEL, t2.HIERARCHY_DESCR, t1.PARENT_NODE Service_stream_code, t3.HIERARCHY_DESCR Service_stream_Descr&#xA;  from extract.HRSYS_HIERARCH_ITM t1&#xA;  ,extract.HRSYS_HIERARCH_CTL t2&#xA;  ,extract.HRSYS_HIERARCH_CTL t3&#xA;  where t1.HIERARCHY_TYPE = 'ORGUNIT'&#xA;  and t1.CURRENT_LEVEL = 4&#xA;  and t1.HIERARCHY_CODE = t2.HIERARCHY_CODE COLLATE DATABASE_DEFAULT&#xA;  and t1.PARENT_NODE = t3.HIERARCHY_CODE  COLLATE DATABASE_DEFAULT ) as t2&#xA;  on t1.program_code=t2.HIERARCHY_CODE  COLLATE DATABASE_DEFAULT&#xA;  where t1.current_row_indicator='Y'&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - service_stream_temp"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{E20FF737-F367-440C-9B29-FC89F36A96B5}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="SC - service_stream_temp">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - service_stream_temp\EST - populate service_stream_temp table"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{8FAC3A7C-169A-47BC-B6C9-B1EA91101869}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EST - populate service_stream_temp table"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2E39C034-06C9-4755-865D-D0FF171F623F}"
                  SQLTask:SqlStatementSource=" truncate table  conform.service_stream_temp &#x9;&#xA;&#xA;  insert into conform.service_stream_temp  &#xA;  select distinct t1.service_stream_key,&#xA;         t2.HIERARCHY_CODE,&#xA;&#x9;&#x9; t2.Portfolio_code&#xA;&#xA;  from conform.service_stream_dim as t1&#xA;  inner join   &#xA;  ( select t1.HIERARCHY_CODE, t1.HIERARCHY_TYPE, t1.CURRENT_LEVEL, t2.HIERARCHY_DESCR, t1.PARENT_NODE Portfolio_code, t3.HIERARCHY_DESCR Portfolio_Descr&#xA;  from extract.HRSYS_HIERARCH_ITM t1&#xA;  ,extract.HRSYS_HIERARCH_CTL t2&#xA;  ,extract.HRSYS_HIERARCH_CTL t3&#xA;  where t1.HIERARCHY_TYPE = 'ORGUNIT'&#xA;  and t1.CURRENT_LEVEL = 3&#xA;  and t1.HIERARCHY_CODE = t2.HIERARCHY_CODE COLLATE DATABASE_DEFAULT&#xA;  and t1.PARENT_NODE = t3.HIERARCHY_CODE COLLATE DATABASE_DEFAULT ) as t2&#xA;  on t1.service_stream_code=t2.HIERARCHY_CODE  COLLATE DATABASE_DEFAULT&#xA;  where t1.current_row_indicator='Y'&#xA;&#xA;&#xA;--temporary added becasue org issue by JS at 10/02/2017&#xA;delete from conform.service_stream_temp where service_stream_code =10071 and portfolio_code= '10042'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - sub_program_temp"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{E4851F41-2A84-4299-8CA2-40E41DB26571}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="SC - sub_program_temp">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - sub_program_temp\EST - populate sub_program_temp table"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{59694983-3B61-4C65-B6AA-79A710A41516}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EST - populate sub_program_temp table"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{2E39C034-06C9-4755-865D-D0FF171F623F}"
                  SQLTask:SqlStatementSource="-- truncate&#xA; truncate table conform.sub_program_temp&#xA;&#xA; -- populate&#xA;   insert into conform.sub_program_temp  &#xA;  select distinct t1.program_key,&#xA;         t2.HIERARCHY_CODE,&#xA;&#x9;&#x9; t2.Program_code&#xA;&#xA;  from conform.program_dim as t1&#xA;  inner join   &#xA;  (select t1.HIERARCHY_CODE, t1.HIERARCHY_TYPE, t1.CURRENT_LEVEL, t2.HIERARCHY_DESCR, t1.PARENT_NODE Program_code, t3.HIERARCHY_DESCR Program_Descr&#xA;  from extract.HRSYS_HIERARCH_ITM t1&#xA;  ,extract.HRSYS_HIERARCH_CTL t2&#xA;  ,extract.HRSYS_HIERARCH_CTL t3&#xA;  where t1.HIERARCHY_TYPE = 'ORGUNIT'&#xA;  and t1.CURRENT_LEVEL = 5&#xA;  and t1.HIERARCHY_CODE = t2.HIERARCHY_CODE COLLATE DATABASE_DEFAULT&#xA;  and t1.PARENT_NODE = t3.HIERARCHY_CODE COLLATE DATABASE_DEFAULT   ) as t2&#xA;  on t1.program_code=t2.HIERARCHY_CODE  COLLATE DATABASE_DEFAULT&#xA;  where t1.current_row_indicator='Y'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{C7AC83DF-2CF9-4F76-93C9-C90FEA3C8382}"
          DTS:From="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - portfolio_temp"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - service_stream_temp"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{0771BA85-0B5B-43F0-932F-D25D64E661B0}"
          DTS:From="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - service_stream_temp"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - program_temp"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{47FF24D7-3E13-4B52-87C6-6F6F386C23CD}"
          DTS:From="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - program_temp"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - sub_program_temp"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{57B837D8-7FBE-4265-A638-220A7E334FDC}"
          DTS:From="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - sub_program_temp"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - employee_temp"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{93F79A86-B974-46B3-A258-68CD9DCC7B57}"
      DTS:EventID="1701257339"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{2AB84123-F3BE-401F-A047-470102A48A5A}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="535,42"
          Id="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - employee_temp\EST - populate employee_temp table"
          TopLeft="25,17" />
        <NodeLayout
          Size="535,42"
          Id="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - employee_temp\EST - populate No Program No SS No Portfilio No Org"
          TopLeft="25,84" />
        <EdgeLayout
          Id="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - employee_temp.PrecedenceConstraints[Constraint]"
          TopLeft="292.5,59">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,2.9453125,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="607,162"
          Size="607,205"
          Id="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - employee_temp"
          TopLeft="396,244" />
        <NodeLayout
          Size="247,42"
          Id="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - portfolio_temp\EST - populate portfolio temp table"
          TopLeft="26,25" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="278,122"
          Size="278,165"
          Id="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - portfolio_temp"
          TopLeft="28,24" />
        <NodeLayout
          Size="250,42"
          Id="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - program_temp\EST - populate program_temp table"
          TopLeft="26,25" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="312,122"
          Size="312,165"
          Id="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - program_temp"
          TopLeft="693,33" />
        <NodeLayout
          Size="281,42"
          Id="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - service_stream_temp\EST - populate service_stream_temp table"
          TopLeft="26,25" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="312,122"
          Size="312,165"
          Id="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - service_stream_temp"
          TopLeft="341,27" />
        <NodeLayout
          Size="272,42"
          Id="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - sub_program_temp\EST - populate sub_program_temp table"
          TopLeft="26,25" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="312,160"
          Size="312,203"
          Id="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE\SC - sub_program_temp"
          TopLeft="34,242" />
        <EdgeLayout
          Id="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE.PrecedenceConstraints[Constraint]"
          TopLeft="289,108">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52,0"
              Start="0,0"
              End="44.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="44.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="131.195546875,-17.5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE.PrecedenceConstraints[Constraint 1]"
          TopLeft="653,112.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="40,0"
              Start="0,0"
              End="32.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="32.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-1.49213640945748,1,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE.PrecedenceConstraints[Constraint 2]"
          TopLeft="849,198">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-659,44"
              Start="0,0"
              End="-659,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18"
                    Point2="0,22"
                    Point3="-4,22" />
                  <mssgle:LineSegment
                    End="-655,22" />
                  <mssgle:CubicBezierSegment
                    Point1="-655,22"
                    Point2="-659,22"
                    Point3="-659,26" />
                  <mssgle:LineSegment
                    End="-659,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-198.804453125,-17.609375,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE.PrecedenceConstraints[Constraint 3]"
          TopLeft="346,345">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="50,0"
              Start="0,0"
              End="42.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="42.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-4.054453125,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1179,528"
          Size="1179,571"
          Id="Package\SC - Organisation tables and Employee_Temp table -- later need to change to just get data for yesterday using VARIABLE"
          TopLeft="18,33" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>