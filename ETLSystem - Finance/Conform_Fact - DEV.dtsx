<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/23/2016 2:19:29 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="W7PC01XQ1T"
  DTS:CreatorName="ANGLICARE-SA\jshen"
  DTS:DTSID="{6DB2316E-CE42-4B09-8609-FE52BF1A9A9D}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2164.0"
  DTS:LocaleID="3081"
  DTS:ObjectName="Conform_Fact - DEV"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="747"
  DTS:VersionGUID="{556FC260-E19C-4E27-8CCD-BF9ABF371E76}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DWHB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
      DTS:ObjectName="DWHB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=devsql-1\whouse;Initial Catalog=DWHB;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CC74842B-34A0-4B10-A6AD-BC23AD8039AD}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="anniversary_date_key">
      <DTS:VariableValue
        DTS:DataType="3">9999999</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8C96DFF2-D4F0-4A0B-8E56-96B6C6E96DF5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="change_reason_code_new">
      <DTS:VariableValue
        DTS:DataType="8">N</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{367595F9-7886-4944-964F-93BCD4C4D23D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="change_reason_code_update">
      <DTS:VariableValue
        DTS:DataType="8">U</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F0942BB2-A557-42EB-A246-E2647CC06B8E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="change_reason_description_new">
      <DTS:VariableValue
        DTS:DataType="8">NEW</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5F963C1F-DFC6-4C14-B462-56654CF8E014}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="change_reason_description_update">
      <DTS:VariableValue
        DTS:DataType="8">UPDATE</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A3BF0FB3-A228-476E-82F5-BCF184AF55C2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="current_row_indicator">
      <DTS:VariableValue
        DTS:DataType="8">Y</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{85397108-740B-48F7-8217-B9643EA7C126}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="GETDATE()"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="etl_start_date">
      <DTS:VariableValue
        DTS:DataType="7">11/29/2017 1:15:13 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F0E172DC-A7CB-4EE0-9578-EA330BB74667}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="manager_pos_key">
      <DTS:VariableValue
        DTS:DataType="3">1694</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CCAE94E7-7B0B-4DAB-BC21-2DE23D965D34}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="manger_key">
      <DTS:VariableValue
        DTS:DataType="3">1780</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E92992E9-5DD3-42B9-BC33-2E531B0B5145}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="new_position_flag">
      <DTS:VariableValue
        DTS:DataType="8">Y</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4C1D89BD-73AE-4455-A1D1-F466789D712E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="position_vacant_date_key">
      <DTS:VariableValue
        DTS:DataType="3">9999999</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1BA5A3E8-2B2C-45E5-B1DD-DF02E7543A84}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="GETDATE()"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="row_effective_date">
      <DTS:VariableValue
        DTS:DataType="7">11/29/2017 1:15:13 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3CC1B8BD-D845-4EBA-B055-DC77257F0D23}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="GETDATE()"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="row_expiration_date">
      <DTS:VariableValue
        DTS:DataType="7">11/29/2017 1:15:13 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{562512CA-AE66-4665-B126-F47B8CD33899}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="survery_completed">
      <DTS:VariableValue
        DTS:DataType="8">NO</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Sequence Container - Fact Tables"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{EC7FBD86-B585-42D4-96AB-F010995189E8}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container - Fact Tables">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{8EA6259A-8927-4D20-95F1-D4A36ABB04BC}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="SD1 - DEBTOR_FACT">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT\EST - Write Job Finish info"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{E278CD8B-392F-42AC-8C06-7F5826D06B45}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EST - Write Job Finish info"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="INSERT INTO [management].ETL_PROCESS_FACT&#xA;SELECT  &#xA;(SELECT DATE_KEY FROM management.DATE_DIM WHERE CONVERT(DATE,FULL_DATE)=CONVERT(DATE,GETDATE()) )&#xA;,(SELECT batch_key FROM management.BATCH_DIM WHERE BATCH_TYPE='batch')&#xA;, T2.TABLE_KEY&#xA;,2&#xA;,GETDATE() ,&#xA;4,&#xA;'Finish updating FACT table'&#xA;FROM  management.TABLE_DIM T2&#xA;WHERE T2.[SCHEMA]+'.'+T2.TABLE_NAME='conform_finance.debtor_fact'&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT\EST - Write Job Start info"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{849B4079-7551-42BE-8A69-5047EF668F59}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EST - Write Job Start info"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="INSERT INTO [management].ETL_PROCESS_FACT&#xA;SELECT  &#xA;(SELECT DATE_KEY FROM management.DATE_DIM WHERE CONVERT(DATE,FULL_DATE)=CONVERT(DATE,GETDATE()) )&#xA;,(SELECT batch_key FROM management.BATCH_DIM WHERE BATCH_TYPE='batch')&#xA;, T2.TABLE_KEY&#xA;,1&#xA;,GETDATE() ,&#xA;4,&#xA;'Start to update FACT table'&#xA;FROM  management.TABLE_DIM T2&#xA;WHERE T2.[SCHEMA]+'.'+T2.TABLE_NAME='conform_finance.debtor_fact'&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT\Get new records and update columns"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{7F3C4961-1708-4AC1-96B3-765A08A91CA8}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get new records and update columns"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="&#xA;&#xA;   --temp table &#xA;   declare @debtorglmap TABLE&#xA;   (&#xA;   ldg_name varchar(20),&#xA;   accnbri varchar(20),&#xA;   doc_ref1 varchar(20),&#xA;   amt1 decimal(14,2),&#xA;   cost_ldg_name varchar(20),&#xA;   cost_accnbri varchar(20),&#xA;   cost_amt1 decimal(14,2),&#xA;   cost_centre_key int&#x9;   &#xA;   ) ;&#xA;&#xA;   insert into &#x9;@debtorglmap&#xA;     select &#xA;    r1.*,&#xA;&#x9;cost.ldg_name as cost_ldg_name,&#xA;&#x9;cost.ACCNBRI as cost_accnbri&#x9;,&#xA;&#x9;cost.AMT1 as cost_amt1 &#x9;,&#xA;&#x9;isnull(d1.cost_centre_key,&#x9;  (select cost_centre_key from conform_finance.cost_centre_dim where  ldg_name='No Cost' and current_row_indicator='Y' ) )&#xA;&#x9; &#xA;  from &#xA;  (&#xA;    select ldg_name,ACCNBRI,doc_ref1,amt1 &#xA;   from  extract.glf_ldg_acc_trans&#xA;   where ldg_name='R1'  and  len(doc_ref1)&gt;0&#xA;   ) as r1&#xA;   inner join&#xA;   (&#xA;   select ldg_name,ACCNBRI,doc_ref1,amt1 &#xA;   from  extract.glf_ldg_acc_trans&#xA;   where ldg_name like '%ACT' and len(ACCNBRI)=15 and  len(doc_ref1)&gt;0&#xA;   ) as cost&#xA;   on r1.DOC_REF1=cost.DOC_REF1&#x9;  COLLATE DATABASE_DEFAULT     and abs(r1.AMT1)=abs(cost.AMT1)&#xA;   left join conform_finance.cost_centre_dim as d1 on cost.ldg_name=d1.ldg_name  COLLATE DATABASE_DEFAULT  and cost.ACCNBRI= d1.accnbri COLLATE DATABASE_DEFAULT  &#x9;and d1.current_row_indicator='Y'&#xA;   &#xA;&#xA;   truncate table conform_finance.debtor_fact;&#xA;&#xA;  insert into conform_finance.debtor_fact&#xA;  select &#xA;  d1.account_key,&#xA;   isnull(f1.cost_centre_key, (select cost_centre_key from conform_finance.cost_centre_dim where  ldg_name='No Cost' and current_row_indicator='Y' ) ),&#xA;  (select portfolio_key from conform_finance.portfolio_dim where portfolio_name like 'No Portfolio%' and &#x9;   current_row_indicator='Y' ),&#xA;  (select service_stream_key from conform_finance.service_stream_dim where service_stream_name like 'No Service%' and &#x9;   current_row_indicator='Y' ),&#xA;  (select program_key from conform_finance.program_dim where program_name like 'No Prog%' and &#x9;   current_row_indicator='Y' ),&#xA;  ISNULL(d5.accounting_period_key,(select accounting_period_key from conform_finance.accounting_period_dim  where fiscal_year like 'No Period%' and current_row_indicator='Y' )&#x9;) ,&#xA;  d2.date_key,&#xA;  d3.date_key,&#xA;  d4.ledger_key,&#xA;  t1.DOC_REF1,&#xA;  t1.AMT1  ,&#xA;  t1.DUE_DATEI,&#xA;  t1.NARR1,&#xA;  t1.NARR2,&#xA;  t1.NARR3,&#xA; t1.doc_type,&#xA;  case &#x9;&#xA;  when DUE_DATEI &lt;&gt; '1900-01-01 00:00:00.000'  then   Datediff(day,t1.due_datei,getdate())&#xA;  else 0&#xA;  end,&#xA;t1.alloc_amt1,&#xA;0&#xA;  from extract.glf_ldg_acc_trans   as t1&#xA;  inner join conform_finance.account_dim as d1 on t1.ACCNBRI=d1.account_number  COLLATE DATABASE_DEFAULT  and d1.chart_name='ARCHART' and d1.current_row_indicator='Y'&#xA;  inner join conform_finance.date_dim as d2 on t1.DOC_DATEI1=d2.full_date&#xA;  inner join conform_finance.date_dim as d3 on t1.PDATEI=d3.full_date&#xA;  inner join conform_finance.ledger_dim as d4 on t1.ldg_name =d4.name  COLLATE DATABASE_DEFAULT  and d4.current_row_indicator='Y'&#xA;  left join conform_finance.accounting_period_dim as d5 on t1.PERIOD=d5.period_no and convert(date,t1.DOC_DATEI1)=convert(date,d5.full_date)&#xA;  left join&#x9; @debtorglmap as f1 on t1.ACCNBRI=f1.ACCNBRI  COLLATE DATABASE_DEFAULT  and t1.DOC_REF1=f1.DOC_REF1   COLLATE DATABASE_DEFAULT &#xA;  where t1.ldg_name ='R1'&#xA;&#xA;&#xA;update conform_finance.debtor_fact&#xA;set outstanding_amt = alloc_amt1- amount&#xA;where doc_type ='ARINV';&#xA;&#xA;-----------------------------------------------------update org_structure-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;--Step1: based on program_key.&#xA;--update program_key&#xA;&#xA;  update t1&#xA;  set &#x9;t1.program_key=t3.program_key&#xA;  from conform_finance.debtor_fact as t1&#xA;  inner join   conform_finance.account_dim as d1 on t1.account_key=d1.account_key and d1.chart_name='ARCHART' and d1.current_row_indicator='Y'&#xA;  inner join    extract.GLF_CHART_ACCT as t2 on d1.account_number=t2.ACCNBRI and t2.CHART_NAME='ARCHART'&#xA;  inner join conform_finance.program_mapping as t3 on t2.SELN_TYPE2_CODE = t3.value1 and t3.program_key is not null&#xA;&#xA;&#xA;--update service_stream and porfolio_key&#xA;&#xA;  update f1&#xA;  set &#x9;f1.service_stream_key=d2.service_stream_key&#x9;&#xA;        --,f1.portfolio_key=d3.portfolio_key&#xA;  from conform_finance.debtor_fact as f1&#xA;  inner join conform_finance.program_dim as d1 on f1.program_key=d1.program_key and d1.current_row_indicator='Y' and f1.program_key&lt;&gt; (select program_key from conform_finance.program_dim where program_name like 'No Prog%' and &#x9;   current_row_indicator='Y')&#xA;  inner join &#xA;    ( --get all org based on names&#xA;&#x9;&#x9;select distinct t1.program_code,&#xA;&#x9;&#x9;t1.service_stream_code,&#xA;&#x9;&#x9;t2.portfolio_code , &#xA;&#x9;&#x9;d1.program_name  ,&#xA;&#x9;&#x9;d2.service_stream_name ,&#xA;&#x9;&#x9;--d3.portfolio_name ,&#xA;&#x9;&#x9;d1.program_key,&#xA;&#x9;&#x9;d2.service_stream_key&#xA;&#x9;&#x9;--,d3.portfolio_key&#xA;&#x9;&#x9;from conform.program_temp  as t1&#xA;&#x9;&#x9;inner join conform.service_stream_temp as t2   on t1.service_stream_code=t2.service_stream_code&#xA;&#x9;&#x9;inner join conform.program_dim as d1 on t1.program_code=d1.program_code and d1.current_row_indicator='Y'&#xA;&#x9;&#x9;inner join conform.service_stream_dim as d2 on t1.service_stream_code=d2.service_stream_code and d1.current_row_indicator='Y'&#xA;&#x9;&#x9;--inner join conform.portfolio_dim as d3 on t2.portfolio_code=d3.portfolio_code and d1.current_row_indicator='Y'&#xA;    )&#x9;as f2&#xA;&#x9;on d1.program_name=f2.program_name&#xA;&#x9;inner join conform_finance.service_stream_dim as d2 on f2.service_stream_code=d2.service_stream_code   and d2.current_row_indicator='Y'&#xA;&#x9;--inner join conform_finance.portfolio_dim as d3 on f2.portfolio_name=d3.portfolio_name and d3.current_row_indicator='Y'&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT\Truncate table"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{5AB5ABB7-9067-4D4B-87C4-0144D581E923}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate table"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="truncate table  conform_finance.debtor_fact" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{81819812-CD0E-4548-9F35-BF7124F756C0}"
              DTS:From="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT\EST - Write Job Start info"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT\Truncate table" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{2B28722D-0B49-4504-A642-E50630A8F1DC}"
              DTS:From="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT\Truncate table"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT\Get new records and update columns" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{0BF07C75-3E87-4477-B54D-C8EB4B3625C8}"
              DTS:From="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT\Get new records and update columns"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT\EST - Write Job Finish info" />
          </DTS:PrecedenceConstraints>
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{8868727B-4220-46B2-BC7B-41448AA244A0}"
              DTS:EventID="244"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{84240020-6C38-4484-B7F3-35216A964D7F}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{f1c0cb4b-f786-4ae7-bc92-d7a362a9e4fa}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="SD1 - EXPENSE_FACT">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT\EST - Write Job Finish info"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{bbd74161-1cd6-477a-9855-4c28b9341741}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EST - Write Job Finish info"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="INSERT INTO [management].ETL_PROCESS_FACT&#xA;SELECT  &#xA;(SELECT DATE_KEY FROM management.DATE_DIM WHERE CONVERT(DATE,FULL_DATE)=CONVERT(DATE,GETDATE()) )&#xA;,(SELECT batch_key FROM management.BATCH_DIM WHERE BATCH_TYPE='batch')&#xA;, T2.TABLE_KEY&#xA;,2&#xA;,GETDATE() ,&#xA;4,&#xA;'Finish updating FACT table'&#xA;FROM  management.TABLE_DIM T2&#xA;WHERE T2.[SCHEMA]+'.'+T2.TABLE_NAME='conform_finance.expense_fact'&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT\EST - Write Job Start info"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{f4804e35-ef6a-4140-b75a-71c1b3cdae35}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EST - Write Job Start info"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="INSERT INTO [management].ETL_PROCESS_FACT&#xA;SELECT  &#xA;(SELECT DATE_KEY FROM management.DATE_DIM WHERE CONVERT(DATE,FULL_DATE)=CONVERT(DATE,GETDATE()) )&#xA;,(SELECT batch_key FROM management.BATCH_DIM WHERE BATCH_TYPE='batch')&#xA;, T2.TABLE_KEY&#xA;,1&#xA;,GETDATE() ,&#xA;4,&#xA;'Start to update FACT table'&#xA;FROM  management.TABLE_DIM T2&#xA;WHERE T2.[SCHEMA]+'.'+T2.TABLE_NAME='conform_finance.expense_fact'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT\Get new records and update columns"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{1164f90c-846f-4985-aefa-edae8caf84e7}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get new records and update columns"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="/*--------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;                            Purpose: ETL for expense_fact&#xA;Developer: Frank Wang&#xA;Version: V1.0 20/09/2017 Created by Frank Wang&#xA;Note:&#xA;Source table: extract.[expense_transaction]&#xA;Need to map key from conform to conform_finance as they use different primary key.&#xA;---------------------------------------------------------------------------------------------------------------------------------------------------------------------*/&#xA;SET XACT_ABORT, NOCOUNT ON;&#xA;BEGIN TRANSACTION;&#xA;   use dwhb;&#xA;&#xA;&#xA;   -- temp table&#xA;    declare @t_expense TABLE&#xA;   (&#xA;&#x9;[Transaction_no] [varchar](10) NULL,&#xA;&#x9;[Transaction_date_key] [int] NULL,&#xA;&#x9;[Merchant_Name] [varchar](50) NULL,&#xA;&#x9;[Employee_Email] [varchar](50) NULL,&#xA;&#x9;[Employee_key] [int] NULL,&#xA;&#x9;[Portfolio_key] [int] NULL,&#xA;&#x9;[Service_stream_key] [int] NULL,&#xA;&#x9;[Program_key] [int] NULL,&#xA;&#x9;[Manager_key] [int] NULL,&#xA;&#x9;[Card_Infomation] [varchar](50) NULL,&#xA;&#x9;[Amount] [decimal](10, 2) NULL,&#xA;&#x9;[Net_Amount] [decimal](10, 2) NULL,&#xA;&#x9;[Tax_Amount] [decimal](10, 2) NULL,&#xA;&#x9;[GST] [varchar](10) NULL,&#xA;&#x9;[Description] [varchar](200) NULL,&#xA;&#x9;[Activity code] [varchar](50) NULL,&#xA;&#x9;[Expense_Type] [varchar](50) NULL,&#xA;&#x9;[Line_desription] [varchar](100) NULL,&#xA;&#x9;[Entity] [varchar](10) NULL,&#xA;&#x9;[Costing] [varchar](10) NULL,&#xA;&#x9;[Activity] [varchar](10) NULL,&#xA;&#x9;[Natural] [varchar](10) NULL,&#xA;&#x9;[Staus] [varchar](20) NULL   &#xA;   );&#xA;&#xA;   insert into  @t_expense&#xA;select &#xA;  TRY_CONVERT(varchar(10),et.Transaction_no) AS Transaction_no,&#xA;  dd.date_key as transaction_date_key,&#xA;  et.[Merchant Name],&#xA;  et.[card_holder_email],&#xA;  d.employee_key,&#xA;  f.portfolio_key,&#xA;  f.service_stream_key,&#xA;  f.program_key,&#xA; -- f.position_key,&#xA;  f.manager_key,&#xA;  et.Card_No,&#xA;  TRY_CONVERT([decimal](10, 2),et.amount) AS Amount,&#xA;  TRY_CONVERT([decimal](10, 2),et.Net_Amount) AS Net_Amount,&#xA;  TRY_CONVERT([decimal](10, 2),et.Tax_Amount) AS Tax_Amount,&#xA;  TRY_CONVERT(varchar(10),et.GST) AS GST,&#xA;  left(et.[Description],200),&#xA;  et.[Activity code],&#xA;  et.[Expense Type],&#xA;  et.[Line desription],&#xA;  TRY_CONVERT(varchar(10),et.Entity) AS Entity,&#xA;  TRY_CONVERT(varchar(10),et.Costing) AS Costing,&#xA;  TRY_CONVERT(varchar(10), et.Activity) AS Activity,&#xA;  TRY_CONVERT(varchar(10),et.Natural) AS Natural,&#xA;   'Uncoded' AS [Status]&#xA;  from extract.expense_transaction et inner join conform.employee_dim d &#xA;  on et.employee_Costing = d.id_number and d.current_row_indicator = 'Y'&#xA;  inner join  conform.employee_position_fact f on d.employee_key = f.employee_key&#xA;  left join conform_finance.date_dim dd on et.Transaction_Date = CONVERT(VARCHAR(8), dd.full_date, 112)&#xA;&#xA; --update status &#xA; -- If costing information is NULL then Uncoded else Waiting for approval&#xA; update  @t_expense&#xA; set Staus = 'Waiting for approval'&#xA; where len(ltrim(rtrim(costing)))&gt;0;&#xA;&#xA; --update keys:&#xA;--&#x9;[Program_key],&#xA;&#xA;WITH  t_program_map (fp_key,p_key)&#xA;AS  &#xA;(select fp.program_key as fp_key, p.program_key as p_key &#xA;from conform_finance.program_dim fp inner join conform.program_dim p on fp.program_code = p.program_code&#xA;and fp.current_row_indicator = 'y' and p.current_row_indicator = 'y')&#xA;UPDATE t&#xA;SET t.program_key = t_program_map.fp_key&#xA;FROM @t_expense AS t inner join t_program_map&#xA;on t.program_key = t_program_map.p_key;&#xA;&#xA; --update keys:&#xA;--[Portfolio_key],&#xA;WITH  t_portfolio_map (fp_key,p_key)&#xA;AS  &#xA;(select fp.portfolio_key as fp_key, p.portfolio_key as p_key &#xA;from conform_finance.portfolio_dim fp inner join conform.portfolio_dim p on fp.portfolio_code = p.portfolio_code&#xA;and fp.current_row_indicator = 'y' and p.current_row_indicator = 'y')&#xA;UPDATE t&#xA;SET t.portfolio_key = t_portfolio_map.fp_key&#xA;FROM @t_expense AS t inner join t_portfolio_map&#xA;on t.portfolio_key = t_portfolio_map.p_key;&#xA;&#xA; --update keys:&#xA;--[Service_stream_key],&#xA;WITH  t_Service_stream_map (fp_key,p_key)&#xA;AS  &#xA;(select fp.Service_stream_key as fp_key, p.Service_stream_key as p_key &#xA;from conform_finance.Service_stream_dim fp inner join conform.Service_stream_dim p on fp.Service_stream_code = p.Service_stream_code&#xA;and fp.current_row_indicator = 'y' and p.current_row_indicator = 'y')&#xA;UPDATE t&#xA;SET t.Service_stream_key = t_Service_stream_map.fp_key&#xA;FROM @t_expense AS t inner join t_Service_stream_map&#xA;on t.Service_stream_key = t_Service_stream_map.p_key;&#xA;&#xA; --update keys:&#xA;--[employee_key],&#xA;WITH  t_employee_map (fp_key,p_key)&#xA;AS  &#xA;(select fp.employee_key as fp_key, p.employee_key as p_key &#xA;from conform_finance.employee_dim fp inner join conform.employee_dim p on fp.id_number = p.id_number&#xA;and fp.current_row_indicator = 'y' and p.current_row_indicator = 'y')&#xA;UPDATE t&#xA;SET t.employee_key = t_employee_map.fp_key&#xA;FROM @t_expense AS t inner join t_employee_map&#xA;on t.employee_key = t_employee_map.p_key;&#xA;&#xA; --update keys:&#xA;--[manager_key],&#xA;WITH  t_employee_map (fp_key,p_key)&#xA;AS  &#xA;(select fp.employee_key as fp_key, p.employee_key as p_key &#xA;from conform_finance.employee_dim fp inner join conform.employee_dim p on fp.id_number = p.id_number&#xA;and fp.current_row_indicator = 'y' and p.current_row_indicator = 'y')&#xA;UPDATE t&#xA;SET t.manager_key = t_employee_map.fp_key&#xA;FROM @t_expense AS t inner join t_employee_map&#xA;on t.manager_key = t_employee_map.p_key;&#xA;&#xA;&#xA;--truncate fact table&#xA;truncate table conform_finance.expense_fact&#xA;&#xA;--Insert result to destination&#xA; insert into conform_finance.expense_fact&#xA; (&#xA;[Transaction_no],&#xA;&#x9;[Transaction_date_key],&#xA;&#x9;[Merchant_Name] ,&#xA;&#x9;[Employee_Email],&#xA;&#x9;[Employee_key],&#xA;&#x9;[Portfolio_key],&#xA;&#x9;[Service_stream_key],&#xA;&#x9;[Program_key],&#xA;&#x9;[Manager_key],&#xA;&#x9;[Card_Infomation] ,&#xA;&#x9;[Amount] ,&#xA;&#x9;[Net_Amount] ,&#xA;&#x9;[Tax_Amount] ,&#xA;&#x9;[GST] ,&#xA;&#x9;[Description],&#xA;&#x9;[Activity code] ,&#xA;&#x9;[Expense_Type] ,&#xA;&#x9;[Line_desription] ,&#xA;&#x9;[Entity],&#xA;&#x9;[Costing] ,&#xA;&#x9;[Activity] ,&#xA;&#x9;[Natural] ,&#xA;&#x9;[Staus] &#xA;     )&#xA;select &#xA;[Transaction_no],&#xA;&#x9;[Transaction_date_key],&#xA;&#x9;[Merchant_Name] ,&#xA;&#x9;[Employee_Email],&#xA;&#x9;[Employee_key],&#xA;&#x9;[Portfolio_key],&#xA;&#x9;[Service_stream_key],&#xA;&#x9;[Program_key],&#xA;&#x9;[Manager_key],&#xA;&#x9;[Card_Infomation] ,&#xA;&#x9;[Amount] ,&#xA;&#x9;[Net_Amount] ,&#xA;&#x9;[Tax_Amount] ,&#xA;&#x9;[GST] ,&#xA;&#x9;[Description],&#xA;&#x9;[Activity code] ,&#xA;&#x9;[Expense_Type] ,&#xA;&#x9;[Line_desription] ,&#xA;&#x9;[Entity],&#xA;&#x9;[Costing] ,&#xA;&#x9;[Activity] ,&#xA;&#x9;[Natural] ,&#xA;&#x9;[Staus] &#xA; from @t_expense;&#xA;&#xA; COMMIT TRANSACTION;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT\Truncate table"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{8d483211-78c7-4e3c-9da6-b08d64bf84fd}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate table"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource=" truncate table conform_finance.expense_fact" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{9a3df13e-8276-4649-9996-7e142ee7b13a}"
              DTS:From="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT\EST - Write Job Start info"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT\Truncate table" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{7d916b0d-60d8-4e27-ba47-60ae33d772ad}"
              DTS:From="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT\Truncate table"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT\Get new records and update columns" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{06d1e22e-3180-420b-80d6-e6e122945c78}"
              DTS:From="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT\Get new records and update columns"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT\EST - Write Job Finish info" />
          </DTS:PrecedenceConstraints>
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{904ca959-b184-4caa-a2ac-6ed475f4f733}"
              DTS:EventID="244"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{15d8cf98-ddb9-4028-9a35-6256913d6be3}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - Fact Tables\SD1 - KPI_FACT"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{ec48c605-7a18-4196-bc76-9121bfd136b9}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="SD1 - KPI_FACT">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - KPI_FACT\EST - Write Job Finish info"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{cdd1d7e4-1e5b-4baa-bb2a-f9e022e1d0d7}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EST - Write Job Finish info"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="INSERT INTO [management].ETL_PROCESS_FACT&#xA;SELECT  &#xA;(SELECT DATE_KEY FROM management.DATE_DIM WHERE CONVERT(DATE,FULL_DATE)=CONVERT(DATE,GETDATE()) )&#xA;,(SELECT batch_key FROM management.BATCH_DIM WHERE BATCH_TYPE='batch')&#xA;, T2.TABLE_KEY&#xA;,2&#xA;,GETDATE() ,&#xA;4,&#xA;'Finish updating FACT table'&#xA;FROM  management.TABLE_DIM T2&#xA;WHERE T2.[SCHEMA]+'.'+T2.TABLE_NAME='conform_finance.KPI_fact'&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - KPI_FACT\EST - Write Job Start info"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{0a182037-dd04-45d3-b37e-6695d4d75b91}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EST - Write Job Start info"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="INSERT INTO [management].ETL_PROCESS_FACT&#xA;SELECT  &#xA;(SELECT DATE_KEY FROM management.DATE_DIM WHERE CONVERT(DATE,FULL_DATE)=CONVERT(DATE,GETDATE()) )&#xA;,(SELECT batch_key FROM management.BATCH_DIM WHERE BATCH_TYPE='batch')&#xA;, T2.TABLE_KEY&#xA;,1&#xA;,GETDATE() ,&#xA;4,&#xA;'Start to update FACT table'&#xA;FROM  management.TABLE_DIM T2&#xA;WHERE T2.[SCHEMA]+'.'+T2.TABLE_NAME='conform_finance.KPI_FACT'&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - KPI_FACT\Get new records and update columns"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{4de82e98-e6b9-44ea-99ea-fc55c38d8173}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get new records and update columns"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="/*--------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;                                     Purpose: calculate finance KPIS&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Developer: Jerry Shen&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Version: V1.0 07/08/2017 Created by Jerry Shen&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Note:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    1. put Recommended values in table &#x9;conform_finance.finance_variable_dim&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;2. need to think about @v_date: if date is 20, then run data for previous month.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;3. for 2017/06: &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   3.1 using all values from Kerry's report because of manual adjutment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   3.2 for Profit and Loss Statement: Interest cover - Surpluse using value 9284.21516&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;4. need to be very careful when at the end of financial year &#xA;&#xA;---------------------------------------------------------------------------------------------------------------------------------------------------------------------*/&#xA;use dwhb;&#xA;&#xA;&#xA;&#xA;--------------------------------------------------Part1: define variable&#x9; ----------------------------------------------------------------------------------------&#xA;--kpi_report_date&#xA;if ((select right(convert(varchar,convert(date,getdate())),2)) ='20')&#xA;begin&#xA;--get first day of previous month.&#xA;declare @v_date datetime =(SELECT DATEADD(mm, DATEDIFF(mm, 0, GETDATE()) - 1, 0));&#xA;--financial_month_no&#xA;declare @v_fymont_no int = (select financial_month_no from conform_finance.date_dim where full_date =@v_date) &#xA;--financial_month_no_last&#xA;declare @v_fymont_last_no varchar(50);&#xA;&#xA;&#xA;--because 2017/06 data is manual changed we have to change the value instead from database&#xA;--fixed value for 201706&#xA;declare @surplus_201706 decimal(10,4);&#xA;set @surplus_201706=(select variable_value from conform_finance.finance_variable_dim where report_name ='KPI_Fact' and variable_name ='surplus_201706' and validate_flag='Y' );&#xA;&#xA;declare @interestondebt_201706 decimal(10,4);&#xA;set @interestondebt_201706=(select variable_value from conform_finance.finance_variable_dim where report_name ='KPI_Fact' and variable_name ='interestondebt_201706' and validate_flag='Y' );&#xA;&#xA;  &#xA;&#xA;&#x9;   &#xA;&#x9;     &#xA;--entity no&#xA;declare @endity varchar(20) ='10';&#xA;--ledger_name for actual&#xA;declare @ldger_name_actual varchar(20);&#xA;  set  @ldger_name_actual =   right((select financial_year from conform_finance.date_dim where full_date =@v_date),2)+'GL_ACT';&#x9; &#xA;declare @ldger_name_actual_last varchar(20)= right((select financial_year from conform_finance.date_dim where full_date =DATEADD(YEAR, -1, @v_date)),2)+'GL_ACT';&#x9; ;&#x9;  ------------------calculate profit and loss becaue of 12 month rolling.&#xA;--ledger_name for budget&#xA;declare @ldger_name_budget varchar(20)= right((select financial_year from conform_finance.date_dim where full_date =@v_date),2)+'GL_BUD';&#x9; &#xA;--Recommended values&#xA;declare @RV_BDE decimal(6,4)   ; --Balancesheet Debt to Equity&#xA;set @RV_BDE=(select variable_value from conform_finance.finance_variable_dim where report_name ='KPI_Fact' and variable_name ='BalancesheetDebttoEquity' and validate_flag='Y' );&#xA;declare @RV_PLSIC decimal(6,4) ;  --Profit and Loss Statement: Interest cover&#xA;set @RV_PLSIC=(select variable_value from conform_finance.finance_variable_dim where report_name ='KPI_Fact' and variable_name ='ProfitandLossStatementInterestcover' and validate_flag='Y' );&#xA;declare @RV_EBITDA decimal(6,4) ;  --EBITDA : Turnover&#xA;set @RV_EBITDA=(select variable_value from conform_finance.finance_variable_dim where report_name ='KPI_Fact' and variable_name ='EBITDATurnover' and validate_flag='Y' );&#xA;declare @RV_CRAFRB decimal(6,4) ; --Balance sheet: Current Ratio adjusted for Resident Bonds &#x9;&#xA;set @RV_CRAFRB=(select variable_value from conform_finance.finance_variable_dim where report_name ='KPI_Fact' and variable_name ='BalancesheetCurrentRatioadjustedforResident Bonds' and validate_flag='Y' );&#xA;declare @RV_EBITDA_BUDGET decimal(6,4) ;  --EBITDA : Budget&#xA;set @RV_EBITDA_BUDGET=(select variable_value from conform_finance.finance_variable_dim where report_name ='KPI_Fact' and variable_name ='EBITDABudge' and validate_flag='Y' );&#xA;&#xA;&#xA;&#xA;--delete existing data for same period&#xA;delete from  [conform_finance].kpi_fact&#xA;where date_key = (select date_key from conform_finance.date_dim where full_date =@v_date);&#xA;&#xA;------------Part2: start to populate KPI data for this period&#xA;--------------------------------------KPI1.Balancesheet Debt to Equity ------------------------------------------------------------------------------------&#xA;&#xA; insert into   [conform_finance].kpi_fact&#xA; select &#xA; 'Balancesheet Debt to Equity',&#xA;(select date_key from conform_finance.date_dim where full_date =@v_date),&#xA;'Debt',&#x9;&#x9;&#xA;(select sum( convert(decimal(20,2),amount))/1000 * (-1) from &#x9;  extract.GLF_Period_Balance_forKPI&#xA;where Entity in (@endity)  and  ledger_name =@ldger_name_actual&#xA;and period &lt;=@v_fymont_no&#xA;and account_group ='NCL'&#xA;and Account_Sub_Group='NCLFACIL'),&#xA;'Equity',&#xA;(&#xA;--reserversL&#xA;select&#xA;(&#xA;select sum( convert(decimal(20,2),amount))/1000 * (-1) from &#x9;  extract.GLF_Period_Balance_forKPI&#xA;where Entity in (@endity)  and  ledger_name =@ldger_name_actual&#xA;and period &lt;=@v_fymont_no&#xA;and account_group ='EQU'&#xA;)&#xA;-&#xA;(select sum( convert(decimal(20,2),amount))/1000 * (-1) from &#x9;  extract.GLF_Period_Balance_forKPI&#xA;where Entity in (@endity)  and  ledger_name =@ldger_name_actual&#xA;and period &lt;=@v_fymont_no&#xA;and Account_Sub_Group ='EQRE'&#xA;)&#xA;+  &#xA;&#xA;--Retained Surplus &#xA;(&#xA;select &#xA;&#xA;(select sum( convert(decimal(20,2),amount))/1000 *(-1)  from &#x9;  extract.GLF_Period_Balance_forKPI&#xA;where Entity in (@endity)  and  ledger_name =@ldger_name_actual&#xA;and period &lt;=@v_fymont_no&#xA;and Account_Sub_Group ='EQRE'&#xA;and account_group ='EQU'&#xA;)&#xA;+&#xA;(&#xA;select sum( convert(decimal(20,2),isnull(amount,0)))/1000*(-1) from &#x9;  extract.GLF_Period_Balance_forKPI&#xA;where Entity in (@endity)  and  ledger_name =@ldger_name_actual&#xA;and period &lt;=@v_fymont_no&#xA;and right(account_type,1) in (4,6)&#xA;&#xA;)&#xA;&#xA;)&#xA;),&#xA;null,&#xA;null,&#xA;null,&#xA;null,&#xA;'Result',&#xA;0.00,&#xA;null,&#xA;null,&#xA;'Recommended Maximum',&#xA;@RV_BDE,&#xA;null,&#xA;null;&#xA;&#xA;--update result&#xA;update &#x9;[conform_finance].kpi_fact&#xA;set kpi_result_1_value =kpi_indicator_1_value / kpi_indicator_2_value&#xA;where kpi_name ='Balancesheet Debt to Equity'&#xA;and date_key =(select date_key from conform_finance.date_dim where full_date =@v_date) ;&#xA;&#xA;--------------------------------------KPI2.Balance sheet: Current Ratio adjusted for Resident Bonds--------------------------------------------&#xA;insert into   [conform_finance].kpi_fact&#xA; select &#xA; 'Balance sheet: Current Ratio adjusted for Resident Bonds',&#xA;(select date_key from conform_finance.date_dim where full_date =@v_date),&#xA;'Current Assets',&#x9;&#x9;&#xA;(select sum( convert(decimal(20,2),amount))/1000 from &#x9;  extract.GLF_Period_Balance_forKPI&#xA;where Entity in (@endity)  and  ledger_name =@ldger_name_actual&#xA;and period &lt;=@v_fymont_no&#xA;and account_group ='CA'),&#xA;'Current Liabilities',&#xA;(select sum( convert(decimal(20,2),amount))/1000*(-1) from &#x9;  extract.GLF_Period_Balance_forKPI&#xA;where Entity in (@endity)  and  ledger_name =@ldger_name_actual&#xA;and period &lt;=@v_fymont_no&#xA;and account_group in ('CL')),&#xA;'Resident Bonds',&#xA;(select sum( convert(decimal(20,2),amount))/1000 from &#x9;  extract.GLF_Period_Balance_forKPI&#xA;where Entity in (@endity)  and  ledger_name =@ldger_name_actual&#xA;and period &lt;=@v_fymont_no&#xA;and account_group ='CA' and Account_Sub_Group in ('CABOND','CAACBOND')),&#xA;null,&#xA;null,&#xA;'Result',&#xA;0.00,&#xA;null,&#xA;null,&#xA;'Recommended Minimum',&#xA;@RV_CRAFRB,&#xA;null,&#xA;null;&#xA;&#xA;--update result&#xA;update &#x9;[conform_finance].kpi_fact&#xA;set kpi_result_1_value =kpi_indicator_1_value / kpi_indicator_2_value&#xA;where kpi_name ='Balance sheet: Current Ratio adjusted for Resident Bonds'&#xA;and date_key =(select date_key from conform_finance.date_dim where full_date =@v_date) ;&#xA;&#xA;&#xA;-----------------------------------KPI3:EBITDA : Budget----------------------------------------------------------------------------------------&#xA; insert into   [conform_finance].kpi_fact&#xA; select &#xA; 'EBITDA : Budget',&#xA; (select date_key from conform_finance.date_dim where full_date =@v_date),&#xA;'EBITDA Actual ',&#xA;(&#xA;select &#xA;&#xA;(&#xA;&#xA; select sum( convert(decimal(16,2),amount))/1000  from &#x9;  extract.GLF_Period_Balance_forKPI&#xA;where Entity in (@endity)  and  ledger_name =@ldger_name_actual&#xA;and period &lt;=@v_fymont_no&#xA;and Management_Report_L2  in ('DEPEXP','INTEXP')&#xA;and account_type in (4,6)&#xA;)&#xA;&#xA;+&#xA;(&#xA; select sum( convert(decimal(16,2),amount))/1000 *(-1) from &#x9;  extract.GLF_Period_Balance_forKPI&#xA;where Entity in (@endity)  and  ledger_name =@ldger_name_actual&#xA;and period &lt;=@v_fymont_no&#xA;and Management_Report_L2  in&#xA;(&#xA;'GOVFUND',&#xA;'RESCLFEE',&#xA;'ACACCINC',&#xA;'RENTRECD',&#xA;'OTHINC',&#xA;'LUNXFUND',&#xA;'SWGIF',&#xA;'SWGCST',&#xA;'SWGHK',&#xA;'SWGCTRNG',&#xA;'ONCOSTS',&#x9;&#xA;'CLNTEXP',&#xA;'FOODBEV',&#xA;'HKPNGEXP',&#xA;'MEDEXP',&#xA;'PURTRST',&#x9;&#xA;'OTHOCEXP',&#xA;'REPMNTRP', &#xA;'ADOFFEXP',&#xA;'FUNDEXP',&#xA;'OTHSTEXP',&#xA;'PRFINEXP',&#xA;'TRVMVH' ,&#xA;'DEPEXP',&#xA;'DISPFA',&#xA;'INTEXP',&#xA;'OHDRECH',&#xA; 'RETENINC',&#xA;'CAPINC',&#xA;'INVINC'   ,&#xA;'NA'&#xA;&#xA;)&#xA;and account_type in (4,6)&#xA;&#xA;&#xA;)  )&#xA;&#xA;,&#xA;'EBITDA Budget',&#xA;&#xA;(&#xA;select &#xA;&#xA;(&#xA;&#xA; select sum( convert(decimal(16,2),amount))/1000  from &#x9;  extract.GLF_Period_Balance_forKPI&#xA;where Entity in (@endity)  and  ledger_name =@ldger_name_budget&#xA;and period &lt;=@v_fymont_no&#xA;and Management_Report_L2  in ('DEPEXP','INTEXP')&#xA;and account_type in (4,6)&#xA;)&#xA;&#xA;+&#xA;(&#xA; select sum( convert(decimal(16,2),amount))/1000 *(-1) from &#x9;  extract.GLF_Period_Balance_forKPI&#xA;where Entity in (@endity)  and  ledger_name =@ldger_name_budget&#xA;and period &lt;=@v_fymont_no&#xA;and Management_Report_L2  in&#xA;(&#xA;'GOVFUND',&#xA;'RESCLFEE',&#xA;'ACACCINC',&#xA;'RENTRECD',&#xA;'OTHINC',&#xA;'LUNXFUND',&#xA;'SWGIF',&#xA;'SWGCST',&#xA;'SWGHK',&#xA;'SWGCTRNG',&#xA;'ONCOSTS',&#x9;&#xA;'CLNTEXP',&#xA;'FOODBEV',&#xA;'HKPNGEXP',&#xA;'MEDEXP',&#xA;'PURTRST',&#x9;&#xA;'OTHOCEXP',&#xA;'REPMNTRP', &#xA;'ADOFFEXP',&#xA;'FUNDEXP',&#xA;'OTHSTEXP',&#xA;'PRFINEXP',&#xA;'TRVMVH' ,&#xA;'DEPEXP',&#xA;'DISPFA',&#xA;'INTEXP',&#xA;'OHDRECH',&#xA; 'RETENINC',&#xA;'CAPINC',&#xA;'INVINC'   ,&#xA;'NA'&#xA;&#xA;)&#xA;and account_type in (4,6)&#xA;&#xA;&#xA;)  )&#xA; ,&#xA;null,&#xA;null,&#xA;null,&#xA;null,&#xA;'Result',&#xA;0.00,&#xA;null,&#xA;null,&#xA;'Recommended Minimum',&#xA;@RV_EBITDA_BUDGET,&#xA;null,&#xA;null;&#xA;&#xA;----------------------------------------KPI4: EBITDA : Turnover-------------------------------------------------------------------------------&#xA; insert into   [conform_finance].kpi_fact&#xA; select &#xA; 'EBITDA : Turnover',&#xA; (select date_key from conform_finance.date_dim where full_date =@v_date),&#xA;'EBITDA',&#xA; (&#xA;select &#xA;&#xA;(&#xA;&#xA; select sum( convert(decimal(16,2),amount))/1000  from &#x9;  extract.GLF_Period_Balance_forKPI&#xA;where Entity in (@endity)  and  ledger_name =@ldger_name_actual&#xA;and period =@v_fymont_no&#xA;and Management_Report_L2  in ('DEPEXP','INTEXP')&#xA;and account_type in (4,6)&#xA;)&#xA;&#xA;+&#xA;(&#xA; select sum( convert(decimal(16,2),amount))/1000 *(-1) from &#x9;  extract.GLF_Period_Balance_forKPI&#xA;where Entity in (@endity)  and  ledger_name =@ldger_name_actual&#xA;and period =@v_fymont_no&#xA;and Management_Report_L2  in&#xA;(&#xA;'GOVFUND',&#xA;'RESCLFEE',&#xA;'ACACCINC',&#xA;'RENTRECD',&#xA;'OTHINC',&#xA;'LUNXFUND',&#xA;'SWGIF',&#xA;'SWGCST',&#xA;'SWGHK',&#xA;'SWGCTRNG',&#xA;'ONCOSTS',&#x9;&#xA;'CLNTEXP',&#xA;'FOODBEV',&#xA;'HKPNGEXP',&#xA;'MEDEXP',&#xA;'PURTRST',&#x9;&#xA;'OTHOCEXP',&#xA;'REPMNTRP', &#xA;'ADOFFEXP',&#xA;'FUNDEXP',&#xA;'OTHSTEXP',&#xA;'PRFINEXP',&#xA;'TRVMVH' ,&#xA;'DEPEXP',&#xA;'DISPFA',&#xA;'INTEXP',&#xA;'OHDRECH',&#xA; 'RETENINC',&#xA;'CAPINC',&#xA;'INVINC'   ,&#xA;'NA'&#xA;&#xA;)&#xA;and account_type in (4,6)&#xA;&#xA;&#xA;)  &#xA;&#xA;)  ,&#xA;'Turnover',&#xA;&#xA;(&#xA;&#xA; select sum( convert(decimal(16,2),amount))/1000*(-1)  from &#x9;  extract.GLF_Period_Balance_forKPI&#xA;where Entity in (@endity)  and  ledger_name =@ldger_name_actual&#xA;and period =@v_fymont_no&#xA;and Management_Report_L2  in ('GOVFUND','RESCLFEE','ACACCINC','RENTRECD','OTHINC','LUNXFUND')&#xA;and account_type in (4,6)&#xA;) &#xA;,&#xA;null,&#xA;null,&#xA;null,&#xA;null,&#xA;'Result',&#xA;0.00,&#xA;null,&#xA;null,&#xA;'Recommended Minimum',&#xA;@RV_EBITDA,&#xA;null,&#xA;null;&#xA;&#xA;&#xA;--update result&#xA;update &#x9;[conform_finance].kpi_fact&#xA;set kpi_result_1_value =kpi_indicator_1_value / kpi_indicator_2_value&#xA;where kpi_name ='EBITDA : Turnover'&#xA;and date_key =(select date_key from conform_finance.date_dim where full_date =@v_date) ;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;--------------------------------------KPI5.Profit and Loss Statement: Interest cover ------------------------------------------------------------------------------------&#xA;&#xA; insert into   [conform_finance].kpi_fact&#xA; select &#xA; 'Profit and Loss Statement: Interest cover',&#xA;(select date_key from conform_finance.date_dim where full_date =@v_date),&#xA;'Surplus',&#x9;&#xA;(&#x9;&#xA;select&#xA;(&#xA;select sum( convert(decimal(20,2),amount)/1000)*(-1) &#xA;from  extract.GLF_Period_Balance_forKPI&#xA;where ledger_name  =@ldger_name_actual&#xA;and Entity  in (@endity) &#xA;and Period&lt;=@v_fymont_no&#xA;and Account_Type in (4,6)&#xA;)&#xA;&#xA;+&#xA;(&#xA;&#xA;select isnull(sum( convert(decimal(20,2),amount)/1000)*(-1) ,0.00) &#xA;from  extract.GLF_Period_Balance_forKPI&#xA;where ledger_name =@ldger_name_actual_last&#xA;and Entity  in (@endity) &#xA;--and Period in (@v_fymont_last_no)&#xA;--and Period in (11,10,9,8,7,6,5,4,3,2)&#xA;and period &gt;= (@v_fymont_no+1) &#xA;and period&lt; 12&#xA;and Account_Type in (4,6)&#xA;)&#xA;+&#xA;(&#xA;case @v_fymont_no&#xA;when 12 then 0&#xA;else (select  @surplus_201706)&#xA;end)&#xA;),&#x9;  &#xA;'Interest on Debt',&#xA;(select &#x9;&#xA;(select sum( convert(decimal(20,2),amount)/1000) &#xA;from  extract.GLF_Period_Balance_forKPI&#xA;where ledger_name  =@ldger_name_actual&#x9;&#xA;and Entity  in (@endity) &#xA;and Period&lt;=@v_fymont_no&#xA;and right(account_number,5)  in('60640','60650','60655','60656','60657')&#xA;)&#xA;+&#xA;(&#xA;&#xA;select isnull(sum( convert(decimal(20,2),amount)/1000) ,0.00)&#xA;from  extract.GLF_Period_Balance_forKPI&#xA;where ledger_name =@ldger_name_actual_last&#x9;&#xA;and Entity  in (@endity) &#xA;--and Period in (@v_fymont_last_no)&#xA;--and Period in (11,10,9,8,7,6,5,4,3,2)&#xA;and period &gt;= (@v_fymont_no+1) &#xA;and period&lt; 12&#xA;and right(account_number,5)  in('60640','60650','60655','60656','60657')&#xA;)&#xA;+&#xA;(&#xA;case @v_fymont_no&#xA;when 12 then 0&#xA;else (select  @interestondebt_201706)&#xA;end)&#xA; ),&#x9; &#xA;null,&#xA;null,&#xA;null,&#xA;null,&#xA;'Result',&#xA;0.00,&#xA;null,&#xA;null,&#xA;'Recommended Minimum',&#xA;@RV_PLSIC,&#xA;null,&#xA;null;&#xA;&#xA;--update result&#xA;update &#x9;[conform_finance].kpi_fact&#xA;set kpi_result_1_value =kpi_indicator_1_value / kpi_indicator_2_value&#xA;where kpi_name ='Profit and Loss Statement: Interest cover'&#xA;and date_key =(select date_key from conform_finance.date_dim where full_date =@v_date) ;&#xA;&#xA;&#xA;&#xA;&#xA;--------------------------------insert NULL values for the following month added by JS at 20/10/2017-----------------------------&#xA;--KPI: EBITDA : Budget / EBITDA : Turnover / Profit and Loss Statement: Interest cover&#xA;declare @exit_max_month int;&#xA;declare @exit_financial_year varchar(10);&#xA;&#xA;set @exit_max_month =&#xA;  (select max(d1.financial_month_no)&#xA;   from conform_finance.date_dim as d1&#xA;   inner join conform_finance.kpi_fact as f1&#xA;    on d1.date_key = f1.date_key&#xA;&#x9;and f1.kpi_name in ('Profit and Loss Statement: Interest cover')&#xA;&#x9;and f1.date_key = (select max(date_key) from conform_finance.kpi_fact where kpi_name in ('Profit and Loss Statement: Interest cover') )&#xA;&#x9;);&#xA;&#xA;set @exit_max_month=@exit_max_month+1;&#xA;&#xA;set @exit_financial_year= (select distinct d1.financial_year&#xA;   from conform_finance.date_dim as d1&#xA;   inner join conform_finance.kpi_fact as f1&#xA;    on d1.date_key = f1.date_key&#xA;&#x9;and f1.kpi_name in ('Profit and Loss Statement: Interest cover')&#xA;&#x9;and f1.date_key = (select max(date_key) from conform_finance.kpi_fact where kpi_name in ('Profit and Loss Statement: Interest cover'))&#xA;&#x9;);&#xA;&#xA;--print @exit_max_month&#xA;--print @exit_financial_year&#xA;&#xA;WHILE @exit_max_month &lt;=12 &#xA;BEGIN&#xA;&#xA; ----------------KPI: EBITDA : Budget-----------------------------------------------------&#xA;   delete from conform_finance.kpi_fact&#xA;   where kpi_name ='EBITDA : Budget'&#xA;   and date_key = (select max(date_key) from conform_finance.date_dim where financial_month_no=@exit_max_month and financial_year=@exit_financial_year);&#xA;&#xA;   insert into conform_finance.kpi_fact&#xA;   (kpi_name,&#xA;   date_key,&#xA;   kpi_indicator_1_name,&#xA;   kpi_indicator_2_name,&#xA;   kpi_result_1_name,&#xA;   kpi_recom_1_name,&#xA;   kpi_recom_1_value)&#xA;   select &#xA;   'EBITDA : Budget',&#xA;    max(date_key),&#xA;&#x9;'EBITDA Actual ',&#xA;&#x9;'EBITDA Budget',&#xA;&#x9;'Result',&#xA;&#x9;'Recommended Minimum',&#xA;&#x9;0.00&#xA;   from conform_finance.date_dim&#xA;   where financial_month_no=@exit_max_month&#xA;   and  financial_year=@exit_financial_year;&#xA;&#xA; --   ----------------KPI: EBITDA : Turnover-----------------------------------------------------&#xA;   delete from conform_finance.kpi_fact&#xA;   where kpi_name ='EBITDA : Turnover'&#xA;   and date_key = (select max(date_key) from conform_finance.date_dim where financial_month_no=@exit_max_month  and  financial_year=@exit_financial_year);&#xA;&#xA;   insert into conform_finance.kpi_fact&#xA;   (kpi_name,&#xA;   date_key,&#xA;    kpi_indicator_1_name,&#xA;   kpi_indicator_2_name,&#xA;   kpi_result_1_name,&#xA;   kpi_recom_1_name,&#xA;   kpi_recom_1_value)&#xA;   select &#xA;   'EBITDA : Turnover',&#xA;    max(date_key),&#xA;&#x9;'EBITDA',&#xA;&#x9;'Turnover',&#xA;&#x9;'Result',&#xA;&#x9;'Recommended Minimum',&#xA;&#x9;0.03&#xA;   from conform_finance.date_dim&#xA;   where financial_month_no=@exit_max_month&#xA;   and  financial_year=@exit_financial_year;&#xA; &#xA;&#xA; -- ----------------KPI: EBITDA : Turnover-----------------------------------------------------&#xA;   delete from conform_finance.kpi_fact&#xA;   where kpi_name ='Profit and Loss Statement: Interest cover'&#xA;   and date_key = (select max(date_key) from conform_finance.date_dim where financial_month_no=@exit_max_month and  financial_year=@exit_financial_year);&#xA;&#xA;   insert into conform_finance.kpi_fact&#xA;   (kpi_name,&#xA;   date_key,&#xA;   kpi_indicator_1_name,&#xA;   kpi_indicator_2_name,&#xA;   kpi_result_1_name,&#xA;   kpi_recom_1_name,&#xA;   kpi_recom_1_value)&#xA;   select &#xA;   'Profit and Loss Statement: Interest cover',&#xA;    max(date_key),&#xA;&#x9;'Surplus',&#xA;&#x9;'Interest on Debt',&#xA;&#x9;'Result',&#xA;&#x9;'Recommended Minimum',&#xA;&#x9;3.00&#xA;   from conform_finance.date_dim&#xA;   where financial_month_no=@exit_max_month&#xA;   and  financial_year=@exit_financial_year;&#xA;&#xA; --- continue for other months&#xA; SET @exit_max_month=@exit_max_month+1&#xA;&#xA;&#xA;END&#xA;&#xA;&#xA;&#xA; -------------------------------insert into dwhf_finance kpi_fact table-------------------------------------------------------------------------&#xA; truncate table  dwhf_finance.finance.kpi_fact;&#xA; insert into  dwhf_finance.finance.kpi_fact&#xA; select * &#xA; from [conform_finance].kpi_fact;&#xA;&#xA;end;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - KPI_FACT.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{679CAA4A-6321-4DB8-8065-6C5EC8F7F0A4}"
              DTS:From="Package\Sequence Container - Fact Tables\SD1 - KPI_FACT\EST - Write Job Start info"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container - Fact Tables\SD1 - KPI_FACT\Get new records and update columns" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - KPI_FACT.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{c808a9c4-244e-4036-bae9-4f148338bbe9}"
              DTS:From="Package\Sequence Container - Fact Tables\SD1 - KPI_FACT\Get new records and update columns"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Sequence Container - Fact Tables\SD1 - KPI_FACT\EST - Write Job Finish info" />
          </DTS:PrecedenceConstraints>
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - KPI_FACT.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{462f70db-8feb-44f8-bbcb-88457a48c56d}"
              DTS:EventID="244"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{7aab03fb-e87d-4fe0-ae7e-d3f4f2a5687c}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - Fact Tables\SD1 - Kypera_Tenancy_Balance_Fact"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{34958c72-9235-4ca8-b9cd-20b18cc931a5}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="SD1 - Kypera_Tenancy_Balance_Fact">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - Kypera_Tenancy_Balance_Fact\EST - Write Job Finish info"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{93e88a5c-8f43-4d94-b1b4-8fb389f81df1}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EST - Write Job Finish info"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="&#xA;INSERT INTO [management].ETL_PROCESS_FACT&#xA;SELECT  &#xA;(SELECT DATE_KEY FROM management.DATE_DIM WHERE CONVERT(DATE,FULL_DATE)=CONVERT(DATE,GETDATE()) )&#xA;,(SELECT batch_key FROM management.BATCH_DIM WHERE BATCH_TYPE='batch')&#xA;, T2.TABLE_KEY&#xA;,2&#xA;,GETDATE() ,&#xA;4,&#xA;'Finish updating FACT table'&#xA;FROM  management.TABLE_DIM T2&#xA;WHERE T2.[SCHEMA]+'.'+T2.TABLE_NAME='conform_finance.kypera_tenancy_balance_fact'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - Kypera_Tenancy_Balance_Fact\EST - Write Job Start info"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{4378d390-149f-44a2-8e10-22ad519c32f7}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EST - Write Job Start info"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="INSERT INTO [management].ETL_PROCESS_FACT&#xA;SELECT  &#xA;(SELECT DATE_KEY FROM management.DATE_DIM WHERE CONVERT(DATE,FULL_DATE)=CONVERT(DATE,GETDATE()) )&#xA;,(SELECT batch_key FROM management.BATCH_DIM WHERE BATCH_TYPE='batch')&#xA;, T2.TABLE_KEY&#xA;,1&#xA;,GETDATE() ,&#xA;4,&#xA;'Start to update FACT table'&#xA;FROM  management.TABLE_DIM T2&#xA;WHERE T2.[SCHEMA]+'.'+T2.TABLE_NAME='conform_finance.kypera_tenancy_balance_fact'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - Kypera_Tenancy_Balance_Fact\Get new records and update columns"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{b48add00-e8d6-4eba-b4c6-8c2318180b92}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get new records and update columns"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="use DWHB&#xA;&#xA;/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;                                     Purpose: populate Kypera_Tenancy_Balance_Fact&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Developer: Jerry Shen&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Version: V1.0 25/10/2017 Created by Jerry Shen&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Note:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Entity: LAW  / Scheme: Laura and Alfred West Community Housing&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Entity: ASA / Scheme:  not in ('Regional Housing')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;For arrears current arrears - we need to filter on property tree for ASAH and LAWCH only (not including AC Care as they are not on board yet), &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then use the advance filter for effective days greater than or equal to 0 days (for arrears) and less than or equal to  0 days for credit.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;For former – same property tree filter, but advance filter on greater than 0 for arrears and less than zero for credit.&#xA;&#xA;&#xA;&#xA;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/&#xA;--get date_key&#xA;declare @datekey int = (select date_key from conform_finance.date_dim where convert(date,full_date)= convert(date,getdate()-1));&#xA;&#xA;--delete existing data for @datekey&#xA;delete from conform_finance.Kypera_Tenancy_Balance_Fact where BK_day_key =@datekey;&#xA;&#xA;--populate new data&#xA;insert into conform_finance.Kypera_Tenancy_Balance_Fact&#xA;SELECT&#xA;  a.id AS TenancyID,&#xA;  case a.CurrentOccupancy&#xA;  when '1' then 'Current'&#xA;  else 'Former'&#xA;  end as Status ,&#xA;  a.Salutation AS Salutaion,&#xA;  f.Address1Line AS Address,&#xA;  a.unit AS PropertyID,&#xA;  convert(varchar,a.StartDate,103) as StartDate,&#xA;  convert(varchar,a.EndDate,103) as EndDate,&#xA;  su.FullName AS HousingOfficer,&#xA;  e.code AS Entity,&#xA;  d.Name AS Scheme,&#xA;  ISNULL(j.ActualRentBalance, 0) AS RentBalance,&#xA;  ISNULL(j.ActualNonRentBalance, 0) AS OtherChargesBalance,&#xA;  ISNULL(j.ActualTotalBalance, 0) AS Balance,&#xA;  ISNULL(j.EffectiveRentDaysInArrears,0) as EffectiveRentDaysInArrears,&#xA;  ISNULL(j.EffectiveTotalDaysInArrears,0) as EffectiveTotalDaysInArrears,&#xA;  case &#xA;  when a.CurrentOccupancy=1 and j.EffectiveRentDaysInArrears&gt;=0 then 'Arrears'&#xA;  when a.CurrentOccupancy=1 and j.EffectiveRentDaysInArrears&lt;0 then 'Credit'&#xA;  when a.CurrentOccupancy=0 and j.EffectiveRentDaysInArrears&gt;=0 then 'Arrears'&#xA;  when a.CurrentOccupancy=0 and j.EffectiveRentDaysInArrears&lt;0 then 'Credit'&#xA;  end as CreditORArrears,&#xA;  @datekey&#xA;&#xA;FROM&#xA;--use test database and have to add anglicare.&#xA;extract_kypera.Occupancies_Occupancy AS a with (NOLOCK)&#xA;&#xA;-- Property info at Block Unit Level&#xA;INNER JOIN extract_kypera.PropertyStructure_BlockUnit AS b&#xA;  ON a.Unit = b.Unit&#xA;  AND a.Company = '1'&#xA;&#xA;--Block Level&#xA;INNER JOIN extract_kypera.PropertyStructure_Block AS c&#xA;  ON b.block = c.Code&#xA;&#xA;--District Level&#xA;INNER JOIN extract_kypera.PropertyStructure_District AS e&#xA;  ON c.District = e.Code&#xA;&#xA;--Scheme Level&#xA;INNER JOIN extract_kypera.PropertyStructure_scheme AS d&#xA;  ON c.Scheme = d.Code&#xA;&#xA;--Property Unit Level&#xA;INNER JOIN extract_kypera.PropertyStructure_Unit AS f&#xA;  ON a.Unit = f.ID&#xA;&#xA;--For rent balance, other charges balance, total, arrears&#xA;LEFT JOIN extract_kypera.Occupancies_RentCalculation_Arrears_EffectiveBalances AS j&#xA;  ON a.id = j.occupancy&#xA;&#xA;--For Housing Officer&#xA;LEFT JOIN extract_kypera.Security_User AS su ON su.[User] = f.HousingOfficer&#xA;&#xA;where &#xA;&#xA; ((e.code='ASA' and d.Name not in ('Regional Housing')) or (e.code='LAW' and d.Name in ('Laura and Alfred West Community Housing')));&#xA;&#xA;&#xA; --delivery to front table&#xA; truncate table  dwhf_finance.finance.[Kypera_Tenancy_Balance_Fact];&#xA;&#xA; insert into  dwhf_finance.finance.[Kypera_Tenancy_Balance_Fact]&#xA; select * from conform_finance.Kypera_Tenancy_Balance_Fact;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - Kypera_Tenancy_Balance_Fact.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{F75A0B04-E3F5-457C-ACA2-39F253D3D523}"
              DTS:From="Package\Sequence Container - Fact Tables\SD1 - Kypera_Tenancy_Balance_Fact\EST - Write Job Start info"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container - Fact Tables\SD1 - Kypera_Tenancy_Balance_Fact\Get new records and update columns" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - Kypera_Tenancy_Balance_Fact.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{7d7e51ba-907e-47f1-8bfb-a13fa30518a6}"
              DTS:From="Package\Sequence Container - Fact Tables\SD1 - Kypera_Tenancy_Balance_Fact\Get new records and update columns"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Sequence Container - Fact Tables\SD1 - Kypera_Tenancy_Balance_Fact\EST - Write Job Finish info" />
          </DTS:PrecedenceConstraints>
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - Kypera_Tenancy_Balance_Fact.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{981b3ffe-8dce-49ff-b00a-0e852fa9e1b2}"
              DTS:EventID="244"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{4e2e8e09-94c9-4c57-8429-6c60709a359b}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:Disabled="True"
          DTS:DTSID="{65ce6689-b1e8-403f-9cd1-6694bbe03fd3}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="SD1 - LSL_FACT">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT\EST - Write Job Finish info"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{896f189d-14de-43ab-8cca-de7e8f8d9560}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EST - Write Job Finish info"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="INSERT INTO [management].ETL_PROCESS_FACT&#xA;SELECT  &#xA;(SELECT DATE_KEY FROM management.DATE_DIM WHERE CONVERT(DATE,FULL_DATE)=CONVERT(DATE,GETDATE()) )&#xA;,(SELECT batch_key FROM management.BATCH_DIM WHERE BATCH_TYPE='batch')&#xA;, T2.TABLE_KEY&#xA;,2&#xA;,GETDATE() ,&#xA;4,&#xA;'Finish updating FACT table'&#xA;FROM  management.TABLE_DIM T2&#xA;WHERE T2.[SCHEMA]+'.'+T2.TABLE_NAME='conform_finance.KPI_fact'&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT\EST - Write Job Start info"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{fa958f91-3fcb-4042-b5b1-e437794f00a2}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EST - Write Job Start info"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="INSERT INTO [management].ETL_PROCESS_FACT&#xA;SELECT  &#xA;(SELECT DATE_KEY FROM management.DATE_DIM WHERE CONVERT(DATE,FULL_DATE)=CONVERT(DATE,GETDATE()) )&#xA;,(SELECT batch_key FROM management.BATCH_DIM WHERE BATCH_TYPE='batch')&#xA;, T2.TABLE_KEY&#xA;,1&#xA;,GETDATE() ,&#xA;4,&#xA;'Start to update FACT table'&#xA;FROM  management.TABLE_DIM T2&#xA;WHERE T2.[SCHEMA]+'.'+T2.TABLE_NAME='conform_finance.KPI_FACT'&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT\LSL_fact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{92a5692d-888e-414c-9d02-600ae58a7308}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="LSL_fact"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="/*----------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;                                     Purpose: calculate finance LSL&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Developer: Jerry Shen&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Version: V1.0 17/08/2017 Created by Jerry Shen&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Note:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    1. need to chekc Probability%??&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  update &#x9; conform_finance.lsl_fact &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; set Probability=&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  case Years_Rounded_Down&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when 6 then &#x9;0.87&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when 5 then &#x9;0.5&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when 4 then &#x9;0.12&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when 3 then &#x9;0.12&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when 2 then &#x9;0.12&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when 1 then &#x9;0.12&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when 0 then 0.12&#xA;&#x9;&#x9;     &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  else 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  end;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;2. report run monthly -- set up to run it at first day of month for previous month&#xA;--------------------------------------------------------------------------------------------------------------------------------------------------------------*/&#xA;use dwhb;&#xA;&#xA;----------------------------Part1: Set up variables-----------------------------------------------------------------------------------------------------------&#xA;&#xA;--report date: run every month at the first day&#xA;--exampple: if today is 2017-08-01, then ETL will run date for July 2017&#xA;--Logic to check whether the ETL needs to run or not&#xA;--If first day of month, then run the ETL&#xA;if ((select right(convert(varchar,convert(date,getdate())),2)) ='01')&#xA;begin&#xA;declare @v_date datetime =getdate()-1 ;&#xA;&#xA;--Get valiable values from conform_finance.finance_variable_dim&#xA;declare @v_Super   decimal(6,4) ;&#xA;set @v_Super=(select variable_value from conform_finance.finance_variable_dim where report_name ='LSL_Fact' and variable_name ='super_rate' and validate_flag='Y' );&#xA;declare @v_Ave_WC_Rate decimal(6,4) ;&#xA;set @v_Ave_WC_Rate=(select variable_value from conform_finance.finance_variable_dim where report_name ='LSL_Fact' and variable_name ='ave_wc_rate' and validate_flag='Y' );&#xA;declare @v_LY_Ave_Workcover_rate decimal(6,4) ;&#xA;set @v_LY_Ave_Workcover_rate=(select variable_value from conform_finance.finance_variable_dim where report_name ='LSL_Fact' and variable_name ='ly_ave_wc_rate' and validate_flag='Y' );&#xA;declare @v_casual_factor decimal(6,4) ;&#xA;set @v_casual_factor=(select variable_value from conform_finance.finance_variable_dim where report_name ='LSL_Fact' and variable_name ='casual_factor' and validate_flag='Y' );&#xA;&#xA;/*&#xA;Inflation Rate&#x9;&#x9;&#xA;Years of Service&#x9;Rate of Increase per year&#x9;Mulitplication Rate&#xA;6&#x9;2%&#x9;1.02&#xA;5&#x9;2%&#x9;1.0404&#xA;4&#x9;2%&#x9;1.061208&#xA;3&#x9;2%&#x9;1.08243216&#xA;2&#x9;2%&#x9;1.104080803&#xA;1&#x9;2%&#x9;1.126162419&#xA;&#xA;&#xA;Discount rate for NPV&#x9;&#x9;&#xA;Years&#x9;Rate&#x9;Factor&#xA;1&#x9;2.36&#x9;0.976959&#xA;2&#x9;2.59&#x9;0.950204&#xA;3&#x9;2.83&#x9;0.919727&#xA;4&#x9;3.06&#x9;0.886307&#xA;5&#x9;3.28&#x9;0.851&#xA;6&#x9;3.47&#x9;0.814773&#xA;7&#x9;3.64&#x9;0.778395&#x9;&#x9;&#xA;*/&#xA;&#xA;&#xA;----------------------------Part2: calucation for LSL_Fact----------------------------------------------------------------------------------------------------&#xA;&#xA;&#xA;--delete existing data for calculate_date.&#xA;delete from conform_finance.lsl_fact&#xA;where calcualte_date_key = (select date_key from conform_finance.date_dim where full_date =@v_date)&#x9; ;&#xA;&#xA;--declare temp table to get employee_primary_position&#xA;declare @t_primary_position TABLE&#xA;(&#xA;id_number int,&#xA;portfolio varchar(10),&#xA;servicestream varchar(10),&#xA;program varchar(10),&#xA;pri_position_code varchar(10)  ,&#xA;pri_position_key int&#xA;)&#x9;  ;&#xA;&#xA;insert into @t_primary_position&#xA;select&#xA;t6.id_number,&#xA;t2.portfolio_code,&#xA;t3.service_stream_code,&#xA;t4.program_code,&#xA;t5.position_code  ,&#xA;null&#xA;from conform.employee_position_fact as t1&#xA;inner join conform.portfolio_dim as t2 on t1.portfolio_key =t2. portfolio_key and t2.current_row_indicator='Y'&#xA;inner join conform.service_stream_dim as t3 on t1.service_stream_key =t3. service_stream_key and t3.current_row_indicator='Y'&#xA;inner join conform.program_dim as t4 on t1.program_key =t4. program_key and t4.current_row_indicator='Y'&#xA;inner join conform.position_dim as t5 on t1.position_key = t5.position_key and &#x9; t5.current_row_indicator='Y'&#xA;inner join &#x9;conform.employee_dim as t6 on t1.employee_key = t6.employee_key and t6.current_row_indicator='Y'&#xA;inner join conform.date_dim as t7 on t1.position_start_date_key=t7.date_key and t7.full_date&lt;=@v_date&#xA;where  t1.primary_position_flag='p'&#xA;&#xA;--update position_key using conform_finance.position_dim&#xA;update t1&#xA;set t1.pri_position_key=t2.position_key&#xA;from @t_primary_position as t1&#xA;inner join &#x9; conform_finance.position_dim  as t2 on t1.pri_position_code=t2.position_code and t2.current_row_indicator='Y'&#xA;&#xA;&#xA;&#xA;--populate employee&#x9;basic information and primary position data&#xA;insert into conform_finance.lsl_fact&#xA;(&#xA;calcualte_date_key,&#xA; employee_key ,&#xA;portfolio_key ,&#xA;service_stream_key ,&#xA;program_key&#x9;   ,&#xA;primary_position_key &#xA;&#xA;)&#xA;select &#xA;(select date_key from conform.date_dim where full_date =@v_date),&#xA;t6.employee_key ,&#xA;t2.portfolio_key,&#xA;t3.service_stream_key,&#xA;t4.program_key&#x9; ,&#xA;t1.pri_position_key&#xA;from @t_primary_position as t1&#xA;inner join conform_finance.portfolio_dim as t2 on t1.portfolio=t2.portfolio_code and t2.current_row_indicator='Y'&#xA;inner join conform_finance.service_stream_dim as t3 on t1.servicestream=t3.service_stream_code and t2.current_row_indicator='Y'&#xA;inner join conform_finance.program_dim as t4 on t1.program=t4.program_code and t3.current_row_indicator='Y'&#xA;inner join &#x9;  conform_finance.employee_dim as t6 on t1.id_number =t6.id_number and t6.current_row_indicator='Y'&#xA;&#xA;--select * from conform_finance.lsl_fact &#xA;&#xA;-- populate&#x9;Primary_Work_Location&#xA;&#xA;update i1&#xA;set i1.Primary_Work_Location=i3.WORK_LOCATION2 &#xA;from  conform_finance.lsl_fact as i1&#xA;inner join conform_finance.employee_dim as i2 on i1.employee_key = i2.employee_key&#x9; and i2.current_row_indicator='Y'&#xA;inner join &#xA;(  select &#xA;g1.*,&#xA;g2.code_descr as work_location2&#x9;&#x9;  &#xA;from&#xA;(&#xA;select t1.id_number,t1.position_code,t1.work_location  ,t1.WORK_GROUP  ,t1.DEPARTMENT_CODE&#xA;from extract.hrhmn_empl_job_pos as t1&#xA;inner join&#xA; (select id_number, position_code,max(EFFECTIVE_DATE) as EFFECTIVE_DATE&#xA;  from &#x9;extract.hrhmn_empl_job_pos where POSITION_TYPE_IND='P'&#x9;and id_number not in (select id_number from extract.hrhmn_emplterm_dtl)&#x9;&#x9;  and end_date ='1900-01-01 00:00:00.000'&#xA;  group by id_number, position_code   )&#xA;as t2&#xA;on t1.id_number =t2.id_number &#xA;and t1.POSITION_CODE=t2.POSITION_CODE&#xA;and t1.EFFECTIVE_DATE=t2.EFFECTIVE_DATE&#x9;&#xA;where t1.POSITION_TYPE_IND='P'&#xA;and t1.id_number not in (select id_number from extract.hrhmn_emplterm_dtl)&#x9;&#x9;&#x9;&#x9;and t1.end_date ='1900-01-01 00:00:00.000'&#xA;) as g1 &#xA;inner join &#xA;(SELECT code_descr,code_id  as location&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;  FROM [DWHB].[extract].[hrstc_code]   where code_type like '%Location%'&#x9;&#x9;) as g2&#xA;  on g1.WORK_LOCATION=g2.location&#x9;) as i3 on i2.id_number =i3.id_number  &#xA;&#xA;&#xA;--populate&#x9;Primary_Cost_Centre&#x9; &#xA; update i1&#xA;set i1.Primary_Cost_Centre=g2.seln_code1&#xA;from  conform_finance.lsl_fact as i1&#xA;inner join conform_finance.employee_dim as i2 on i1.employee_key = i2.employee_key&#x9; and i2.current_row_indicator='Y'&#xA;  inner join &#xA;  (&#xA;&#xA;select t1.* from extract.hrsys_usrseln_dtl    as t1&#xA;inner join &#xA;(&#xA;select  entity_key_1, max(last_mod_datei) as  last_mod_datei&#xA;from extract.hrsys_usrseln_dtl &#xA;where &#x9; entity_type ='EPS'&#xA;group by  entity_key_1) as t2&#xA;on t1.entity_key_1 = t2.entity_key_1&#xA;and t1.last_mod_datei=t2.last_mod_datei&#xA;where t1.entity_type ='EPS' &#xA;) as g2&#xA;on i2.id_number =g2.entity_key_1&#xA;&#xA;&#xA;&#xA;--fix location is null&#xA;update &#x9;t1&#xA;set    t1.primary_work_location&#x9; = t2.primary_work_location&#xA;from   conform_finance.lsl_fact as t1&#xA;inner join &#xA;(select    distinct primary_cost_centre,primary_work_location&#xA; from   conform_finance.lsl_fact&#xA; where &#x9;primary_cost_centre is not null &#xA; and   primary_work_location is not null&#xA; ) as t2&#xA; on  t1.primary_cost_centre=t2.primary_cost_centre&#xA; where t1.primary_work_location is null&#xA;&#xA;&#xA;-- update date_of_service&#xA;&#xA;update &#x9;f1&#xA;set f1.Date_of_Service=f2.val_date2&#xA;from  conform_finance.lsl_fact as f1&#xA;inner join&#xA;(&#x9;  select t1.id_number,t1.val_date2 , t3.employee_key&#xA;&#x9;  from  [DWHB].[extract].[HRHMN_USR_FLD] as t1&#xA;&#x9;  inner join &#xA;&#x9;    (&#x9;&#xA;&#x9;&#x9;select id_number, max(last_mod_datei) as last_mod_datei&#xA;&#x9;&#x9;from   [DWHB].[extract].[HRHMN_USR_FLD]&#xA;&#x9;&#x9;group by id_number&#xA;&#x9;&#x9;) as t2 on t1.id_number =t2.id_number and t1.last_mod_datei= t2.last_mod_datei&#xA;&#x9;  inner join conform_finance.employee_dim as t3 on t1.id_number =t3.id_number and t3.current_row_indicator='Y'&#xA;&#x9;&#xA;) as f2&#xA;on f1.employee_key=f2.employee_key&#xA;&#xA;&#xA;&#xA;--Years_of_Completed_Service_asat_calculateday&#xA; update  conform_finance.lsl_fact&#xA; set Years_of_Completed_Service_asat_calculateday =  datediff(day, Date_of_Service,@v_date)&#x9;   /365.25&#x9;;&#xA;&#xA;-- Years_Rounded_Down&#xA;  update  conform_finance.lsl_fact&#xA; set Years_Rounded_Down =  FLOOR(Years_of_Completed_Service_asat_calculateday)&#x9;;&#xA;&#xA; --Weeks based on Completed years of Service&#xA;  update  conform_finance.lsl_fact&#xA; set Weeks_basedon_Completed_yearsofService = Years_Rounded_Down * 1.3&#x9;;&#xA;&#xA;&#xA;&#xA;--Current_NonCurrent&#xA;   update  conform_finance.lsl_fact&#xA; set Current_NonCurrent = case when Years_Rounded_Down &gt; 6 then 'Current' else 'Non-Current' end;&#xA;&#xA;&#xA;--c8000or9000&#xA;   update  conform_finance.lsl_fact&#xA; set c8000or9000 = case when Primary_Cost_Centre &gt;'1105' and Primary_Cost_Centre&lt;'1500' then '8000' else '9000' end;&#xA;&#xA;--Weeks as at calculate_date&#xA;&#x9; update f1&#xA;&#x9; set   f1.Weeks_asat_calculateday=isnull(f3.LSL_balance&#x9;,0)&#xA;&#x9; from   conform_finance.lsl_fact as f1&#xA;&#x9; inner join    conform_finance.employee_dim as f2 on f1.employee_key =f2.employee_key and f2.current_row_indicator='Y'&#xA;&#x9; inner join&#xA;&#x9; (&#xA; &#x9;  select t1.id_number, t1.ACCRUAL_HOURS,t1.ACCRUAL_PRORATA,t1.ACCRUAL_TAKEN, t1.ACCRUAL_HOURS+t1.ACCRUAL_PRORATA-t1.ACCRUAL_TAKEN as LSL_balance&#xA;&#x9;  from &#x9;extract.HREEN_EMPLENT_ACCR&#x9;as t1&#xA;&#x9;  inner join &#xA;&#x9;  ( select id_number,max(LAST_MOD_DATEI) as LAST_MOD_DATEI&#xA;&#x9;&#x9;from extract.HREEN_EMPLENT_ACCR&#x9;&#xA;&#x9;&#x9;where  PAY_COMPONENT_REF='1226.0'&#xA;&#x9;&#x9;and LAST_MOD_DATEI&lt;=@v_date&#xA;&#x9;&#x9;group by id_number) as t2&#xA;   &#x9;  on t1.id_number =t2.id_number &#xA;&#x9;   and t1.LAST_MOD_DATEI  =t2.LAST_MOD_DATEI&#xA;&#x9;  where  t1.PAY_COMPONENT_REF='1226.0'&#xA;&#x9;&#x9;and t1.LAST_MOD_DATEI&lt;=@v_date&#xA;&#x9;&#x9;) f3 on f2.id_number&#x9;  =f3. ID_NUMBER and f2.current_row_indicator='Y'&#xA;&#x9;&#x9;--if years rounded down&lt;7 update it same as  Weeks based on Completed years of Service&#xA;&#x9;&#x9; update conform_finance.lsl_fact&#xA;&#x9;&#x9; set Weeks_asat_calculateday = Weeks_basedon_Completed_yearsofService&#xA;&#x9;&#x9; where &#x9; Years_Rounded_Down&lt;7;&#xA;&#xA;&#xA;  --update lsl_averate_hours&#xA;    update f1&#xA;&#x9; set   f1.LSL_Average_Hours=isnull(f3.lsl_averate_hours&#x9;,0)&#xA;&#x9; from   conform_finance.lsl_fact as f1&#xA;&#x9; inner join    conform_finance.employee_dim as f2 on f1.employee_key =f2.employee_key and f2.current_row_indicator='Y'&#xA;&#x9; inner join&#xA;&#x9; (&#xA;   select t1.id_number,t1.val_num1 as lsl_averate_hours&#xA;&#x9;  from  [DWHB].[extract].[HRHMN_USR_FLD] as t1&#xA;&#x9;  inner join &#xA;&#x9;    (&#x9;&#xA;&#x9;&#x9;select id_number, max(last_mod_datei) as last_mod_datei&#xA;&#x9;&#x9;from   [DWHB].[extract].[HRHMN_USR_FLD]&#xA;&#x9;&#x9;group by id_number&#xA;&#x9;&#x9;) as t2 on t1.id_number =t2.id_number and t1.last_mod_datei= t2.last_mod_datei&#xA;&#x9;  inner join conform_finance.employee_dim as t3 on t1.id_number =t3.id_number and t3.current_row_indicator='Y'&#xA;&#x9;  inner join conform.date_dim as t4 on t1.val_date2= t4.full_date &#xA;&#x9;  &#x9;) f3 on f2.id_number&#x9;  =f3. ID_NUMBER and f2.current_row_indicator='Y';&#xA;--hours&#xA;update &#x9; conform_finance.lsl_fact&#xA;set hours = Weeks_asat_calculateday *LSL_Average_Hours; &#xA;&#xA;---------------------------------------------hours rates -------------------------------------------------------&#xA;&#xA;update f1&#xA;set f1.Hourly_Rate=f4.pay_item_rate&#xA;from  conform_finance.lsl_fact as f1&#xA;inner join    conform_finance.employee_dim as f2 on f1.employee_key =f2.employee_key and f2.current_row_indicator='Y'&#xA;inner join    conform_finance.position_dim as f3 on f1.primary_position_key =f3.position_key and f3.current_row_indicator='Y'&#xA;inner join&#xA;(&#xA;&#xA;select&#xA;&#x9;i1.id_number,i1.position_code,max(i1.pay_item_rate) as pay_item_rate &#xA;from &#xA;(&#xA;select id_number,PAY_PERIOD_ENDDATE,pay_item_rate,POSITION_CODE&#xA;from extract.HRPAY_PAYITEMS_DTL&#x9; &#xA;where PAY_COMPONENT_DEF =100 and  pay_component_ref =&#x9; 100&#xA;--and PAY_PERIOD_ENDDATE&gt;='2016-11-21 00:00:00.000'&#xA;and PAY_PERIOD_ENDDATE&lt;=@v_date&#xA;) as i1&#xA;inner join&#xA;(&#xA;select g1.id_number,g1.pay_item_rate,g1.POSITION_CODE,max(g1.PAY_PERIOD_ENDDATE) as PAY_PERIOD_ENDDATE&#xA;from &#xA;(&#xA;select id_number,PAY_PERIOD_ENDDATE,pay_item_rate,POSITION_CODE&#xA;from extract.HRPAY_PAYITEMS_DTL&#x9; &#xA;where PAY_COMPONENT_DEF =100 and  pay_component_ref =&#x9; 100&#xA;--and PAY_PERIOD_ENDDATE&gt;='2016-11-21 00:00:00.000'&#xA;and PAY_PERIOD_ENDDATE&lt;=@v_date&#xA;) as g1&#xA;group by   g1.id_number,g1.pay_item_rate,g1.POSITION_CODE&#xA; ) as i2&#xA; on i1.id_number=i2.id_number and i1.POSITION_CODE=i2.POSITION_CODE and i1.pay_item_rate=i2.pay_item_rate and i1.PAY_PERIOD_ENDDATE=i2.PAY_PERIOD_ENDDATE&#xA;group by i1.id_number,i1.position_code&#xA;&#xA;) as f4 on f2.id_number=f4.ID_NUMBER  &#xA;and f3.position_code=f4.POSITION_CODE&#x9;COLLATE DATABASE_DEFAULT &#xA;-- for some employee if they have&#xA;--case 1:  maternity leave paid&#xA;   update f1&#xA;set f1.Hourly_Rate=f4.pay_item_rate&#xA;from  conform_finance.lsl_fact as f1&#xA;inner join    conform_finance.employee_dim as f2 on f1.employee_key =f2.employee_key and f2.current_row_indicator='Y'&#xA;inner join    conform_finance.position_dim as f3 on f1.primary_position_key =f3.position_key and f3.current_row_indicator='Y'&#xA;inner join&#xA;(&#xA;select id_number,PAY_PERIOD_ENDDATE,pay_item_rate,POSITION_CODE&#xA;from extract.HRPAY_PAYITEMS_DTL&#x9; &#xA;where PAY_COMPONENT_DEF =500 &#xA;--and PAY_PERIOD_ENDDATE&gt;='2016-11-21 00:00:00.000'&#xA;and PAY_PERIOD_ENDDATE&lt;=@v_date &#xA;) as f4 on f2.id_number=f4.ID_NUMBER  &#xA;and f3.position_code=f4.POSITION_CODE&#x9;COLLATE DATABASE_DEFAULT &#xA;where f1.Hourly_Rate is null&#xA;&#xA;&#xA;--case2: cannot up and don't map position key&#xA;update f1&#xA;set f1.Hourly_Rate=f4.pay_item_rate&#xA;from  conform_finance.lsl_fact as f1&#xA;inner join    conform_finance.employee_dim as f2 on f1.employee_key =f2.employee_key and f2.current_row_indicator='Y'&#xA;inner join    conform_finance.position_dim as f3 on f1.primary_position_key =f3.position_key and f3.current_row_indicator='Y'&#xA;inner join&#xA;(&#xA;&#xA;select&#xA;&#x9;i1.id_number,i1.position_code,max(i1.pay_item_rate) as pay_item_rate &#xA;from &#xA;(&#xA;select id_number,PAY_PERIOD_ENDDATE,pay_item_rate,POSITION_CODE&#xA;from extract.HRPAY_PAYITEMS_DTL&#x9; &#xA;where PAY_COMPONENT_DEF =100 and  pay_component_ref =&#x9; 100&#xA;--and PAY_PERIOD_ENDDATE&gt;='2016-11-21 00:00:00.000'&#xA;and PAY_PERIOD_ENDDATE&lt;=@v_date&#xA;) as i1&#xA;inner join&#xA;(&#xA;select g1.id_number,g1.pay_item_rate,g1.POSITION_CODE,max(g1.PAY_PERIOD_ENDDATE) as PAY_PERIOD_ENDDATE&#xA;from &#xA;(&#xA;select id_number,PAY_PERIOD_ENDDATE,pay_item_rate,POSITION_CODE&#xA;from extract.HRPAY_PAYITEMS_DTL&#x9; &#xA;where PAY_COMPONENT_DEF =100 and  pay_component_ref =&#x9; 100&#xA;--and PAY_PERIOD_ENDDATE&gt;='2016-11-21 00:00:00.000'&#xA;and PAY_PERIOD_ENDDATE&lt;=@v_date&#xA;) as g1&#xA;group by   g1.id_number,g1.pay_item_rate,g1.POSITION_CODE&#xA; ) as i2&#xA; on i1.id_number=i2.id_number and i1.POSITION_CODE=i2.POSITION_CODE and i1.pay_item_rate=i2.pay_item_rate and i1.PAY_PERIOD_ENDDATE=i2.PAY_PERIOD_ENDDATE&#xA;group by i1.id_number,i1.position_code&#xA;&#xA;) as f4 on f2.id_number=f4.ID_NUMBER  &#xA;--and f3.position_code=f4.POSITION_CODE&#x9;COLLATE DATABASE_DEFAULT &#xA;where f1. Hourly_Rate is null &#xA;&#xA;--case3: no pay records when @v_date and move to next pay_period.&#xA;update f1&#xA;set f1.Hourly_Rate=f4.pay_item_rate&#xA;from  conform_finance.lsl_fact as f1&#xA;inner join    conform_finance.employee_dim as f2 on f1.employee_key =f2.employee_key and f2.current_row_indicator='Y'&#xA;inner join    conform_finance.position_dim as f3 on f1.primary_position_key =f3.position_key and f3.current_row_indicator='Y'&#xA;inner join&#xA;(&#xA;&#xA;select&#xA;&#x9;i1.id_number,i1.position_code,max(i1.pay_item_rate) as pay_item_rate &#xA;from &#xA;(&#xA;select id_number,PAY_PERIOD_ENDDATE,pay_item_rate,POSITION_CODE&#xA;from extract.HRPAY_PAYITEMS_DTL&#x9; &#xA;where PAY_COMPONENT_DEF =100 and  pay_component_ref =&#x9; 100&#xA;--and PAY_PERIOD_ENDDATE&gt;='2016-11-21 00:00:00.000'&#xA;and PAY_PERIOD_ENDDATE&lt;=DATEADD(day,28,@v_date)&#xA;) as i1&#xA;inner join&#xA;(&#xA;select g1.id_number,g1.pay_item_rate,g1.POSITION_CODE,max(g1.PAY_PERIOD_ENDDATE) as PAY_PERIOD_ENDDATE&#xA;from &#xA;(&#xA;select id_number,PAY_PERIOD_ENDDATE,pay_item_rate,POSITION_CODE&#xA;from extract.HRPAY_PAYITEMS_DTL&#x9; &#xA;where PAY_COMPONENT_DEF =100 and  pay_component_ref =&#x9; 100&#xA;--and PAY_PERIOD_ENDDATE&gt;='2016-11-21 00:00:00.000'&#xA;and PAY_PERIOD_ENDDATE&lt;=DATEADD(day,28,@v_date)&#xA;) as g1&#xA;group by   g1.id_number,g1.pay_item_rate,g1.POSITION_CODE&#xA; ) as i2&#xA; on i1.id_number=i2.id_number and i1.POSITION_CODE=i2.POSITION_CODE and i1.pay_item_rate=i2.pay_item_rate and i1.PAY_PERIOD_ENDDATE=i2.PAY_PERIOD_ENDDATE&#xA;group by i1.id_number,i1.position_code&#xA;&#xA;) as f4 on f2.id_number=f4.ID_NUMBER  &#xA;and f3.position_code=f4.POSITION_CODE&#x9;COLLATE DATABASE_DEFAULT &#xA;where f1. Hourly_Rate is null &#xA;&#xA;&#xA;&#xA;--case4: no pay records when @v_date and move to next pay_period.&#xA;update f1&#xA;set f1.Hourly_Rate=f4.pay_item_rate&#xA;from  conform_finance.lsl_fact as f1&#xA;inner join    conform_finance.employee_dim as f2 on f1.employee_key =f2.employee_key and f2.current_row_indicator='Y'&#xA;inner join    conform_finance.position_dim as f3 on f1.primary_position_key =f3.position_key and f3.current_row_indicator='Y'&#xA;inner join&#xA;(&#xA;&#xA;select&#xA;&#x9;i1.id_number,i1.position_code,max(i1.pay_item_rate) as pay_item_rate &#xA;from &#xA;(&#xA;select id_number,PAY_PERIOD_ENDDATE,pay_item_rate,POSITION_CODE&#xA;from extract.HRPAY_PAYITEMS_DTL&#x9; &#xA;where PAY_COMPONENT_DEF =100 and  pay_component_ref =&#x9; 100&#xA;--and PAY_PERIOD_ENDDATE&gt;='2016-11-21 00:00:00.000'&#xA;and PAY_PERIOD_ENDDATE&lt;=DATEADD(day,56,@v_date)&#xA;) as i1&#xA;inner join&#xA;(&#xA;select g1.id_number,g1.pay_item_rate,g1.POSITION_CODE,max(g1.PAY_PERIOD_ENDDATE) as PAY_PERIOD_ENDDATE&#xA;from &#xA;(&#xA;select id_number,PAY_PERIOD_ENDDATE,pay_item_rate,POSITION_CODE&#xA;from extract.HRPAY_PAYITEMS_DTL&#x9; &#xA;where PAY_COMPONENT_DEF =100 and  pay_component_ref =&#x9; 100&#xA;--and PAY_PERIOD_ENDDATE&gt;='2016-11-21 00:00:00.000'&#xA;and PAY_PERIOD_ENDDATE&lt;=DATEADD(day,56,@v_date)&#xA;) as g1&#xA;group by   g1.id_number,g1.pay_item_rate,g1.POSITION_CODE&#xA; ) as i2&#xA; on i1.id_number=i2.id_number and i1.POSITION_CODE=i2.POSITION_CODE and i1.pay_item_rate=i2.pay_item_rate and i1.PAY_PERIOD_ENDDATE=i2.PAY_PERIOD_ENDDATE&#xA;group by i1.id_number,i1.position_code&#xA;&#xA;) as f4 on f2.id_number=f4.ID_NUMBER  &#xA;and f3.position_code=f4.POSITION_CODE&#x9;COLLATE DATABASE_DEFAULT &#xA;where f1. Hourly_Rate is null &#xA;-----------------------------------------------------------------------------------------------------------------------------------------------&#xA;-- Liability&#xA;update &#x9; conform_finance.lsl_fact &#xA;set Liability= hours * Hourly_Rate&#xA;&#xA;-- Probability %&#xA; --update &#x9; conform_finance.lsl_fact &#xA; --set Probability=@v_Probability;&#xA;&#xA;   update &#x9; conform_finance.lsl_fact &#xA;&#x9;&#x9;&#x9;&#x9; set Probability=&#xA;&#x9;&#x9;&#x9;&#x9;  case Years_Rounded_Down&#xA;&#x9;&#x9;&#x9;&#x9;  when 6 then &#x9;0.87&#xA;&#x9;&#x9;&#x9;&#x9;  when 5 then &#x9;0.5&#xA;&#x9;&#x9;&#x9;      when 4 then &#x9;0.12&#xA;&#x9;&#x9;&#x9;      when 3 then &#x9;0.12&#xA;&#x9;&#x9;&#x9;      when 2 then &#x9;0.12&#xA;&#x9;&#x9;&#x9;&#x9;  when 1 then &#x9;0.12&#xA;&#x9;&#x9;&#x9;&#x9;  when 0 then 0.12&#xA;&#x9;&#x9;     &#x9;  else 1&#xA;&#x9;&#x9;&#x9;&#x9;  end;&#xA;&#xA;-- Revised Liability based on probability&#xA;   update &#x9; conform_finance.lsl_fact &#xA;   set Revised_Liability_based_on_probability= Liability* Probability;&#xA;&#xA;&#xA;--Liability at Entitlement Wages growth 2% until entitlement)&#xA;update &#x9; conform_finance.lsl_fact &#xA;   set Liability_at_Entitlement_Wagesgrowth = &#xA;     case Years_Rounded_Down&#xA;&#x9; when 6  then   Revised_Liability_based_on_probability * 1.02  &#xA;&#x9; when 5  then   Revised_Liability_based_on_probability * 1.0404&#xA;&#x9; when 4  then   Revised_Liability_based_on_probability * 1.061208&#xA;&#x9; when 3  then   Revised_Liability_based_on_probability * 1.08243216&#xA;     when 2  then   Revised_Liability_based_on_probability * 1.1040808032&#xA;&#x9; when 1  then   Revised_Liability_based_on_probability * 1.126162419264&#xA;&#x9; else Revised_Liability_based_on_probability&#xA;&#x9; end;&#xA;&#xA;---NPV_of_Liability&#xA; update &#x9; conform_finance.lsl_fact &#xA;   set NPV_of_Liability = &#xA;     case &#xA;&#x9; when Years_Rounded_Down &gt; 6 then  Revised_Liability_based_on_probability&#xA;&#x9; else &#xA;&#x9; (&#xA;&#x9; case 7-Years_Rounded_Down&#xA;&#x9; when 6  then   Revised_Liability_based_on_probability * 0.814773&#xA;&#x9; when 5  then   Revised_Liability_based_on_probability * 0.851&#xA;&#x9; when 4  then   Revised_Liability_based_on_probability * 0.886307&#xA;&#x9; when 3  then   Revised_Liability_based_on_probability * 0.919727&#xA;     when 2  then   Revised_Liability_based_on_probability * 0.950204&#xA;&#x9; when 1  then   Revised_Liability_based_on_probability * 0.976959&#xA;&#x9; end&#xA;&#x9; )&#xA;&#x9; end;&#xA;&#xA;--@v_casual_factor&#xA;update  conform_finance.lsl_fact&#xA;set  Casual_Factor=@v_casual_factor&#x9;  ;&#xA;&#xA;--NPV after casual factor&#xA;update  conform_finance.lsl_fact&#xA;set  NPV_after_casual_factor=NPV_of_Liability * (@v_casual_factor)&#x9;  ;&#xA;&#xA;&#xA;--Add Super @ 9.5%&#xA;update  conform_finance.lsl_fact&#xA;set  Add_Super=NPV_after_casual_factor * (@v_Super)&#x9;  ;&#xA;&#xA;&#xA;--Ave WC Rate&#xA;update  conform_finance.lsl_fact&#xA;set  Ave_WC_Rate=(NPV_after_casual_factor + Add_Super ) * (@v_Ave_WC_Rate)&#x9;  ;&#xA;&#xA;--LY Ave Workcover rate&#xA;update  conform_finance.lsl_fact&#xA;set  LY_Ave_Workcover_rate=(NPV_after_casual_factor + Add_Super ) * (@v_LY_Ave_Workcover_rate)&#x9;  ;&#xA;&#xA;&#xA;--&#x9;2016/2017 WorkCover %&#xA;update f1&#xA;set f1.WorkCover_20162017=convert(decimal(14,6),f4.units) /100&#xA;from  conform_finance.lsl_fact as f1&#xA;inner join    conform_finance.employee_dim as f2 on f1.employee_key =f2.employee_key and f2.current_row_indicator='Y'&#xA;inner join    conform_finance.position_dim as f3 on f1.primary_position_key =f3.position_key and f3.current_row_indicator='Y'&#xA;inner join&#x9;  extract.employee_workcover_rate as f4 on f2.Id_Number =rtrim(f4.Id_Number) and f3.position_code=rtrim(f4.position_code) and f4.active_indicator='Y';&#xA;&#xA; --fix some null workcover&#xA; --some employee has no data in T1 export file.&#xA;update f1&#xA;set f1.WorkCover_20162017=convert(decimal(14,6),f4.units) /100&#xA;from  conform_finance.lsl_fact as f1&#xA;inner join    conform_finance.employee_dim as f2 on f1.employee_key =f2.employee_key and f2.current_row_indicator='Y'&#xA;--inner join    conform_finance.position_dim as f3 on f1.primary_position_key =f3.position_key and f3.current_row_indicator='Y'&#xA;inner join&#x9;  extract.employee_workcover_rate as f4 on f2.Id_Number =rtrim(f4.Id_Number) and f4.active_indicator='Y'&#xA;where f1.WorkCover_20162017 is null&#xA;&#xA;&#xA;--Add Workcover&#xA;update t1&#xA;set&#x9;t1.Add_Workcover= (t1.NPV_after_casual_factor + t1.Add_Super ) * &#x9; t1.WorkCover_20162017&#xA;from   conform_finance.lsl_fact as t1&#x9; ;&#xA;&#xA;&#xA;--delete employee whose service_date is later than calculation date&#xA;delete from  conform_finance.lsl_fact&#xA;where Years_of_Completed_Service_asat_calculateday&lt;0&#xA;&#xA;&#xA;&#xA;end;&#xA;&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT\Truncate table"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{77eeaf71-86f2-4bcc-9a1a-8dd11c4e8a55}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate table"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource=" truncate table  dwhf_finance.finance.kpi_fact;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{b1dc7cea-aec2-4509-a8e6-026e968b384c}"
              DTS:From="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT\EST - Write Job Start info"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT\Truncate table" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{7a2cb6e0-c7af-4273-a76f-7a2ada6a9e4f}"
              DTS:From="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT\Truncate table"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT\LSL_fact" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{B7EB0210-FA64-41A5-90BA-33C27A35A41F}"
              DTS:From="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT\LSL_fact"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT\EST - Write Job Finish info" />
          </DTS:PrecedenceConstraints>
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{f003c5e1-537b-48b7-ae40-b80e37b6b1f0}"
              DTS:EventID="244"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{f7c3766e-2d48-4361-b5c9-9c5fb3ba1eef}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{693dc729-0b53-4323-97f4-fc7059b9eaed}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="SD1 - RECONCILE_INVOICE_FACT">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT\EST - Write Job Finish info"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{68a4f867-dd8c-4882-bbba-20a63e6745ba}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EST - Write Job Finish info"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="INSERT INTO [management].ETL_PROCESS_FACT&#xA;SELECT  &#xA;(SELECT DATE_KEY FROM management.DATE_DIM WHERE CONVERT(DATE,FULL_DATE)=CONVERT(DATE,GETDATE()) )&#xA;,(SELECT batch_key FROM management.BATCH_DIM WHERE BATCH_TYPE='batch')&#xA;, T2.TABLE_KEY&#xA;,2&#xA;,GETDATE() ,&#xA;4,&#xA;'Finish updating FACT table'&#xA;FROM  management.TABLE_DIM T2&#xA;WHERE T2.[SCHEMA]+'.'+T2.TABLE_NAME='conform_finance.reconcile_invoice_fact'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT\EST - Write Job Start info"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{6c5c4a95-1f48-431a-8728-ab6fbc2520b6}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="EST - Write Job Start info"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="INSERT INTO [management].ETL_PROCESS_FACT&#xA;SELECT  &#xA;(SELECT DATE_KEY FROM management.DATE_DIM WHERE CONVERT(DATE,FULL_DATE)=CONVERT(DATE,GETDATE()) )&#xA;,(SELECT batch_key FROM management.BATCH_DIM WHERE BATCH_TYPE='batch')&#xA;, T2.TABLE_KEY&#xA;,1&#xA;,GETDATE() ,&#xA;4,&#xA;'Start to update FACT table'&#xA;FROM  management.TABLE_DIM T2&#xA;WHERE T2.[SCHEMA]+'.'+T2.TABLE_NAME='conform_finance.reconcile_invoice_fact'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT\reconcicle_billedpercentage_fact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{eb5289ee-c0e0-46f8-be93-9562e96bc35c}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="reconcicle_billedpercentage_fact"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="/*--------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;                                     Purpose: ETL for children_disability_billedpercentage_fact&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Developer: Jerry Shen&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Version: V1.0 10/10/2017 Created by Jerry Shen&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Note:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  1. excelue: autopay employee??&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  2. billing started from 18/12/2016 PPE?&#xA;&#xA;---------------------------------------------------------------------------------------------------------------------------------------------------------------------*/&#xA;use dwhb &#xA;&#xA;&#xA;&#xA;&#xA;---------------------------------------Step1: get client billed information with employee information --------------------------------------------------------------------------------&#xA;       --get billed hours.&#xA;&#x9;   declare @client_service_hours TABLE&#xA;&#x9;   (client_id varchar(8),&#xA;&#x9;    provider_id varchar(8),&#xA;&#x9;&#x9;visit_date datetime,&#xA;&#x9;&#x9;visit_hours decimal(12,4),&#xA;&#x9;&#x9;travel_hours decimal(12,4)&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;insert into @client_service_hours&#xA;&#x9;   select t1.client_id, &#xA;&#x9;          t1.provider_id, &#xA;&#x9;&#x9;&#x9;  t1.activity_date, &#xA;&#x9;&#x9;&#x9;  convert(decimal(12,4),isnull(t1.activity_duration,0))/60.0000, &#xA;&#x9;&#x9;&#x9;  convert(decimal(12,4),isnull(t1.travel_duration,0))/60.0000&#xA;       from extract_comcare.activity_work_table as t1&#xA;       where t1.client_id in &#xA;      (      select &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;    t2.client_id&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;from extract_comcare.FB_Client_CB_Transaction as t1&#xA;&#x9;&#x9;&#x9;left join extract_comcare.FB_Client_Contract_Billing t2 on t1.Client_CB_ID=t2.Client_CB_ID&#xA;&#x9;&#x9;&#x9;left join extract_comcare.FC_Funder_Contract t3 on t2.Funder_Contract_ID=t3.Funder_Contract_ID&#xA;&#x9;&#x9;&#x9;left join extract_comcare.person as t4 on t1.Person_ID=t4.Person_ID&#xA;&#x9;&#x9;&#x9;where t3.Funder_Contract_ID in (25,26,27,28,29,31)&#xA;&#x9;&#x9;&#x9;and t3.Funding_Care_Model_ID=6&#xA;&#x9;&#x9;&#x9;and t1.Fee_Hold_Reason_Code IS NULL&#xA;   )&#xA;&#xA;&#x9;--inner join extract_comcare.provider as t2 on t1.provider_id = t2.provider_id &#xA;&#x9;--inner join extract_comcare.provider_contract  as t3 on t2.provider_id = t3.provider_id and t3.organisation_id =7 and t3.effective_date_to is not null&#xA;   and  t1.authorisation_date is not NULL&#xA;&#x9;   &#xA;&#xA;&#x9;    --get billed amount&#xA;&#x9;&#x9;   declare @client_service_amount TABLE&#xA;&#x9;   (client_id varchar(8),&#xA;&#x9;    provider_id varchar(8),&#xA;&#x9;&#x9;employee_no varchar(8),&#xA;&#x9;&#x9;visit_date datetime,&#xA;&#x9;&#x9;bill_end_date datetime,&#xA;&#x9;&#x9;cost_centre varchar(4),&#xA;&#x9;&#x9;amount decimal(12,4),&#xA;&#x9;&#x9;units decimal(12,4),&#xA;&#x9;&#x9;service_hours decimal(12,4),&#xA;&#x9;   Funding_Care_Model_ID int,&#xA;&#x9;&#x9;funder_contract_id int&#xA;&#x9;&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;insert into @client_service_amount&#xA;&#x9;&#x9; select &#xA;&#x9;&#x9;&#x9;t2.client_id,&#xA;&#x9;&#x9;&#x9;t1.provider_id,&#xA;&#x9;&#x9;&#x9;null,&#xA;&#x9;&#x9;&#x9;t1.visit_date,&#xA;&#x9;&#x9;&#x9;&#x9;t1.Billing_Period_To,&#xA;&#x9;&#x9;    substring(t1.gl_account_code,3,4),&#xA;&#x9;    &#x9;ISNULL(t1.amount,0),&#xA;&#x9;&#x9;&#x9;isnull(t1.units,0),&#xA;&#x9;&#x9;&#x9;0,&#xA;&#x9;&#x9;&#x9;t3.Funding_Care_Model_ID,&#xA;&#x9;&#x9;&#x9;t3.funder_contract_id&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;from extract_comcare.FB_Client_CB_Transaction as t1&#xA;&#x9;&#x9;&#x9;left join extract_comcare.FB_Client_Contract_Billing t2 on t1.Client_CB_ID=t2.Client_CB_ID&#xA;&#x9;&#x9;&#x9;left join extract_comcare.FC_Funder_Contract t3 on t2.Funder_Contract_ID=t3.Funder_Contract_ID&#xA;&#x9;&#x9;&#x9;left join extract_comcare.person as t4 on t1.Person_ID=t4.Person_ID&#xA;&#x9;&#x9;&#x9;where t1.Fee_Hold_Reason_Code IS NULL&#xA;&#x9;&#x9;&#x9;and t3.Funder_Contract_ID in (25,26,27,28,29,31)&#xA;&#x9;&#x9;&#x9;and t3.Funding_Care_Model_ID=6&#xA;&#x9;   &#xA;&#x9;   update t1&#xA;&#x9;   set t1.service_hours=t2.visit_hours+t2.travel_hours&#xA;&#x9;   from @client_service_amount as t1&#xA;&#x9;   inner join @client_service_hours as t2&#xA;&#x9;   on t1.client_id=t2.client_id&#xA;&#x9;   and t1.provider_id=t2.provider_id&#xA;&#x9;   and t1.visit_date=t2.visit_date;&#xA;&#xA;&#xA;&#x9;   --update cost centre if is it NULL basing on client's funding_care_modle_id and funder_contract_id&#xA;&#x9;   update t1&#xA;&#x9;   set t1.cost_centre= SUBSTRING(t2.billing_gl_account_code,3,4)&#xA;&#x9;   from @client_service_amount as t1&#xA;&#x9;   inner join extract_comcare.FC_Funder_Contract_GL_Mapping as t2&#xA;&#x9;   on t1.Funding_Care_Model_ID=t2.Funding_Care_Model_ID&#xA;&#x9;   and t1.Funder_Contract_ID=t2.Funder_Contract_ID&#xA;&#x9;   and  (len(t1.cost_centre)=0 or t1.cost_centre='NULL' or t1.cost_centre is null)&#xA;&#xA;&#xA;&#x9;   --fix cost centre is not wrong issue&#xA;&#x9;     update t1&#xA;&#x9;   set t1.cost_centre= SUBSTRING(t2.billing_gl_account_code,3,4)&#xA;&#x9;   from @client_service_amount as t1&#xA;&#x9;   inner join extract_comcare.FC_Funder_Contract_GL_Mapping as t2&#xA;&#x9;   on t1.Funding_Care_Model_ID=t2.Funding_Care_Model_ID&#xA;&#x9;   and t1.Funder_Contract_ID=t2.Funder_Contract_ID&#xA;       and t1.cost_centre not in ('3607','3609','3225','3611','3608','3235')&#xA;&#xA;&#xA;&#xA;&#x9;   --get employee_no&#xA;&#x9;   update t1 &#xA;&#x9;   set t1.employee_no=t2.employee_no&#xA;&#x9;   from @client_service_amount as t1&#xA;&#x9;   inner join extract_comcare.provider as t2&#xA;&#x9;   on t1.provider_id = t2.provider_id &#xA;&#xA;&#xA;&#xA;&#x9;   --get client summry basing for employee&#xA;&#x9;      declare @employee_baseing_client_service TABLE&#xA;&#x9;   (&#xA;&#x9;&#x9;employee_no varchar(8),&#xA;&#x9;&#xA;&#x9;&#x9;bill_end_date datetime,&#xA;&#x9;&#x9;cost_centre varchar(4),&#xA;&#x9;&#x9;amount decimal(12,4),&#xA;&#x9;&#x9;units decimal(12,4),&#xA;&#x9;&#x9;service_hours decimal(12,4),&#xA;&#x9;&#x9;paid_hours decimal(25,4),&#xA;        paid_amount decimal(25,4)&#xA;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;insert into  @employee_baseing_client_service &#xA;&#x9;&#x9;select &#xA;&#x9;&#x9;employee_no,&#xA;&#x9;&#x9;bill_end_date,&#xA;&#x9;&#x9;cost_centre,&#xA;&#x9;&#x9;sum(amount),&#xA;&#x9;&#x9;sum(units),&#xA;&#x9;&#x9;sum(service_hours),&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;0&#xA;&#x9;&#x9;from @client_service_amount&#xA;&#x9;&#x9;group by employee_no,&#xA;&#x9;&#x9;bill_end_date,&#xA;&#x9;&#x9;cost_centre&#xA;&#x9;  &#xA;&#x9;&#xA;&#xA;&#x9;--select * from @employee_baseing_client_service&#xA;&#x9; --  select * from  @client_service_amount&#xA;&#xA;--select employee_no,cost_centre,bill_end_date,sum(amount) from @client_service_amount group by employee_no,cost_centre,bill_end_date&#xA;&#xA;--select bill_end_date,cost_centre,count(*) from  @client_service_amount group by bill_end_date,cost_centre&#xA;&#xA;&#xA;&#xA;&#xA;---------------------------------------Step1: get employee payment information --------------------------------------------------------------------------------&#xA;--note: payroll employee costs are not right.......&#xA;--use client costing to map.&#xA;&#xA;declare @employee_payment_detail TABLE&#xA;(&#xA;ID_NUMBER int,&#xA;PAY_PERIOD_ENDDATE datetime,&#xA; paid_hours decimal(25,4),&#xA; paid_amount decimal(25,4)&#xA; )&#xA;&#xA;&#xA;insert into @employee_payment_detail&#xA;SELECT &#xA;  ID_NUMBER,&#xA;  PAY_PERIOD_ENDDATE, &#xA;  sum(NUMBER_UNITS) as paid_hours,&#xA;  sum(PAY_ITEM_AMOUNT) as paid_amount&#xA;  FROM [az-sqlbi01].[DWHB].[extract].[HRPAY_PAYITEMS_DTL]&#xA;  where ID_NUMBER in (&#xA;      select distinct t2.employee_no&#xA;&#x9;&#x9;from  extract_comcare.provider as t2 &#xA;    &#x9;inner join extract_comcare.provider_contract  as t3 &#xA;&#x9;&#x9;on t2.provider_id = t3.provider_id &#xA;&#x9;&#x9;and t3.organisation_id =7 &#xA;&#x9;&#x9;and t2.employee_no is not NULL&#xA;      )&#xA;&#xA;  and PAY_COMPONENT_DEF=100&#xA;  and PAY_PERIOD_ENDDATE&gt; '2016-12-04 00:00:00.000'&#xA;  and PAY_PERIOD_ENDDATE&lt;= (select max(bill_end_date) from @employee_baseing_client_service)&#xA;  and  datename(WEEKDAY,PAY_PERIOD_ENDDATE) ='Sunday'&#xA;  and PAY_PERIOD_UNIT='H'&#xA;  and document_type&lt;&gt;'G'&#xA; group by ID_NUMBER, PAY_PERIOD_ENDDATE&#xA;&#xA;&#xA;&#xA;  --join together&#xA;  update t1&#xA;  set t1.paid_amount=t2.paid_amount, t1.paid_hours=t2.paid_hours&#xA;  from  @employee_baseing_client_service as t1&#xA;  inner join @employee_payment_detail as t2&#xA;  on t1.employee_no=t2.ID_NUMBER&#xA;  and t1.bill_end_date=t2.PAY_PERIOD_ENDDATE&#xA;&#xA;  ---insert some records which don't &#xA;     insert into @employee_baseing_client_service&#x9;&#xA;     select t1.id_number,&#xA;&#x9;  t1.PAY_PERIOD_ENDDATE,&#xA;&#x9;  null,&#xA;&#x9;  0,&#xA;&#x9;  0,&#xA;&#x9;  0,&#xA;&#x9;  t1.paid_hours,&#xA;&#x9;  t1.paid_amount&#xA;&#x9;from @employee_payment_detail as t1&#xA;&#x9;inner join&#xA;&#xA;&#x9;(&#xA;&#xA;&#x9;select distinct  id_number,PAY_PERIOD_ENDDATE&#xA;&#x9;from @employee_payment_detail&#xA;&#x9;where PAY_PERIOD_ENDDATE&gt; '2016-12-04 00:00:00.000'&#xA;    and  datename(WEEKDAY,PAY_PERIOD_ENDDATE) ='Sunday'&#xA;&#x9;and PAY_PERIOD_ENDDATE&lt;=(select max(bill_end_date) from @employee_baseing_client_service)&#xA;    and ID_NUMBER in (select distinct employee_no from @employee_baseing_client_service)&#xA;&#x9;except&#xA;&#x9;select&#xA;&#x9;distinct employee_no,bill_end_date&#xA;&#x9;from @employee_baseing_client_service&#xA;&#x9;) as t2&#xA;&#x9;on t1.ID_NUMBER=t2.ID_NUMBER&#xA;&#x9;and t1.PAY_PERIOD_ENDDATE=t2.PAY_PERIOD_ENDDATE&#xA;&#x9;--update costing.&#xA;&#x9;update t1&#xA;&#x9;set t1.cost_centre=t2.cost_centre&#xA;&#x9;from   @employee_baseing_client_service as t1&#xA;&#x9;inner join &#xA;&#x9;(select distinct employee_no, cost_centre&#xA;&#x9; from @employee_baseing_client_service&#xA;&#x9; where cost_centre is not null) as t2&#xA;&#x9; on t1.employee_no=t2.employee_no&#xA;&#x9; and t1.cost_centre is null&#xA;&#xA; -- select * from @employee_baseing_client_service&#xA;&#xA; -- select distinct employee_no from @employee_baseing_client_service&#xA;&#xA;-- select * from @employee_baseing_client_service&#xA;&#xA;&#xA;--select *  from @employee_payment_detail&#xA;--where PAY_PERIOD_ENDDATE&lt;=(select max(bill_end_date) from @employee_baseing_client_service)&#xA;--and ID_NUMBER in (select distinct employee_no from @employee_baseing_client_service)&#xA;&#xA;---------------------------------------Step3: final table for report --------------------------------------------------------------------------------&#xA;&#x9;declare @report TABLE&#xA;&#x9;(Pay_period_end_date datetime,&#xA;&#x9; Paid_cost_centre varchar(4),&#xA;&#x9; paid_amount decimal(25,4),&#xA;&#x9; paid_hours  decimal(25,4),&#xA;&#x9; bill_end_date datetime,&#xA;&#x9; bill_cost_centre varchar(4),&#xA;&#x9; bill_amount  decimal(25,4),&#xA;&#x9; bill_hours  decimal(25,4),&#xA;&#x9; cost_descrption varchar(50));&#xA;&#xA;&#xA;&#x9; insert into @report&#xA; &#x9;select t1.bill_end_date,&#xA;&#x9;       t1.cost_centre,&#xA;&#x9;&#x9;   t1.paid_amount,&#xA;&#x9;&#x9;   t1.paid_hours,&#xA;&#x9;       t1.bill_end_date,&#xA;&#x9;&#x9;   t1.cost_centre,&#xA;&#x9;&#x9;   t1.amount,&#xA;&#x9;&#x9;   case &#xA;&#x9;&#x9;   when t1.units &gt;= t1.service_hours then t1.units&#xA;&#x9;&#x9;   else t1.service_hours&#xA;&#x9;&#x9;   end,&#xA;&#x9;&#x9;    --t1.units ,&#xA;&#x9;&#x9;   null&#xA;&#x9;from &#x9; @employee_baseing_client_service as t1&#xA;&#x9;--where t1.employee_no is not NULL&#xA;&#xA;&#x9;&#xA;&#xA;&#x9;update @report &#xA;&#x9;set cost_descrption =&#xA;&#x9;  case Paid_cost_centre&#xA;&#x9;  when '3225' then '3225 - Children''s Accomodation Support'&#xA;&#x9;  when '3235' then '3235 - Children''s Community Day Activities'&#xA;&#x9;  when '3609' then '3609 - Children''s in home care'&#xA;&#x9;  when '3607' then  '3607 - OATS'&#xA;&#x9;  when '3608' then   '3608 - MT Gambier NDIS Case Co-ord'&#xA;&#x9;  when '3611' then   '3611 - Metro NDIS Case Co-ord'&#xA;&#x9;  else Paid_cost_centre&#xA;&#x9;  end;&#xA;&#xA;&#xA;&#x9;--  update @report &#xA;&#x9;--set cost_descrption =&#xA;&#x9;--  case bill_cost_centre&#xA;&#x9;--  when '3225' then '3225 - Children''s Accomodation Support'&#xA;&#x9;--  when '3235' then '3235 - Children''s Community Day Activities'&#xA;&#x9;--  when '3609' then '3609 - Children''s in home care'&#xA;&#x9;--  when '3607' then  '3607 - OATS'&#xA;&#x9;--  when '3608' then   '3608 - MT Gambier NDIS Case Co-ord'&#xA;&#x9;--  when '3611' then   '3611 - Metro NDIS Case Co-ord'&#xA;&#x9;--  else bill_cost_centre&#xA;&#x9;--  end&#xA;&#x9;--  where cost_descrption is NULL&#xA;&#xA;&#xA;&#x9;--  --update other wrong cost centre&#xA;&#x9;--  update t1&#xA;&#x9;--  set t1.cost_descrption = acc_comp2+' - '+t2.ACC_COMP2_SCESCR&#xA;&#x9;--  from @report as t1&#xA;&#x9;--  inner join &#xA;&#x9;--  (select distinct acc_comp2, ACC_COMP2_SCESCR&#xA; --      from conform_finance.cost_centre_dim &#xA; --       where current_row_indicator='Y'&#xA;&#x9;--&#x9;) as t2&#xA;&#x9;--&#x9;on t1.cost_descrption = t2.ACC_COMP2 and len(t1.cost_descrption)=4 &#xA;&#xA;&#xA;&#xA;&#x9;--  update @report&#xA;&#x9;--  set cost_descrption='None'&#xA;&#x9;--  where cost_descrption is NULL or len(cost_descrption)&lt;=3&#xA;&#xA;&#x9;--   update @report&#xA;&#x9;--  set Pay_period_end_date=bill_end_date&#xA;&#x9;--  where Pay_period_end_date is NULL&#xA;&#xA;&#xA;&#x9;  --report final&#xA;&#x9;  declare @report_final TABLE&#xA;&#x9;  (Pay_period_end_date datetime,&#xA;&#x9;  pay_end_date_key int,&#xA;&#x9; cost_centre varchar(50),&#xA;&#x9; paid_amount decimal(25,4),&#xA;&#x9; paid_hours  decimal(25,4),&#xA;&#x9; bill_amount  decimal(25,4),&#xA;&#x9; bill_hours  decimal(25,4),&#xA;&#x9; paid_aount_percentage  decimal(25,4),&#xA;&#x9; paid_hours_percentage decimal(25,4)&#xA;)&#xA;&#xA;   insert into @report_final&#xA;   select &#xA;   Pay_period_end_date,&#xA;   (  select date_key from conform_finance.date_dim where full_date ='1800-01-01 00:00:00.000'),&#xA;   cost_descrption,&#xA;   sum(paid_amount),&#xA;   sum(paid_hours),&#xA;   sum(bill_amount),&#xA;   sum(bill_hours),&#xA;   0.0000,&#xA;   0.0000&#xA;   from @report&#xA;   group by   Pay_period_end_date,&#xA;   cost_descrption&#xA;&#xA;&#xA;   update @report_final&#xA;   set paid_aount_percentage= bill_amount /paid_amount&#xA;   where paid_amount &lt;&gt;0;&#xA;&#xA;    update @report_final&#xA;   set paid_hours_percentage= bill_hours /paid_hours&#xA;   where paid_hours &lt;&gt;0;&#xA;&#xA;&#xA;   update t1&#xA;   set t1.pay_end_date_key=t2.date_key&#xA;   from @report_final as t1&#xA;   inner join conform_finance.date_dim as t2&#xA;   on t1.Pay_period_end_date=t2.full_date&#xA;&#xA;&#xA;   --&#xA;&#x9;--  select * from @report_final&#xA;&#xA;&#xA;---------------------------------------Step4: populate fact table--------------------------------------------------------------------------------&#xA;&#x9;  truncate table conform_finance.RECONCILE_BILLEDPERCENTAGE_FACT;&#xA;&#x9;  insert into conform_finance.RECONCILE_BILLEDPERCENTAGE_FACT&#xA;&#x9;  select&#xA;&#x9;  pay_end_date_key,&#xA;&#x9;  cost_centre,&#xA;&#x9;  paid_hours,&#xA;&#x9;  paid_amount,&#xA;&#x9;  bill_hours,&#xA;&#x9;  bill_amount,&#xA;&#x9;  paid_hours_percentage,&#xA;&#x9;  paid_aount_percentage&#xA;&#xA;&#x9;  from @report_final&#xA;&#x9;  where cost_centre in (&#xA;&#x9;    '3225 - Children''s Accomodation Support',&#xA;&#x9;&#x9;'3235 - Children''s Community Day Activities',&#xA;&#x9;&#x9;'3607 - OATS',&#xA;&#x9;&#x9;'3608 - MT Gambier NDIS Case Co-ord',&#xA;&#x9;&#x9;'3609 - Children''s in home care',&#xA;&#x9;&#x9;'3611 - Metro NDIS Case Co-ord')&#xA;&#xA;&#xA;&#x9;  truncate table  dwhf_finance.finance.RECONCILE_BILLEDPERCENTAGE_FACT;&#xA;&#x9;  insert into  dwhf_finance.finance.RECONCILE_BILLEDPERCENTAGE_FACT&#xA;&#x9;  select * from conform_finance.RECONCILE_BILLEDPERCENTAGE_FACT&#xA;&#xA;&#xA;&#xA;&#x9;--  select * from dwhf_finance.finance.RECONCILE_BILLEDPERCENTAGE_FACT;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT\reconcicle_unbilledservice_fact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{69047990-b76a-4d5c-a642-67904e28d8ec}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="reconcicle_unbilledservice_fact"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="/*--------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;                                     Purpose: ETL for children_disability_billed_hours&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Developer: Jerry Shen&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Version: V1.0 3/10/2017 Created by Jerry Shen&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Note:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   1.Question: some service activity_duration &lt;&gt; Schedule_duration, but we charge as  Schedule_duration  ...DC Day Activities&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;      eg. select * from @provider_client_service_CD where client_id ='10076349' order by activity_date asc &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   2.Question: providers include: timesheet employee and auto pay ??&#xA;---------------------------------------------------------------------------------------------------------------------------------------------------------------------*/&#xA;use dwhb &#xA;&#xA;---------provider_service for children disability --------------------------------------------------------------------------------------------------------------------&#xA;  declare @provider_client_service_CD TABLE&#xA;   ([provider_id] [int] NULL,&#xA;&#x9;[client_id] [int] NULL,&#xA;&#x9;[activity_date] [datetime] NULL,&#xA;&#x9;[task_type_code] [varchar](8) NULL,&#xA;&#x9;[activity_start_time] [datetimeoffset](7) NULL,&#xA;&#x9;[activity_end_time] [datetimeoffset](7) NULL,&#xA;&#x9;[units_of_service] [numeric](10, 2) NULL,&#xA;&#x9;[activity_duration] [smallint] NULL,&#xA;&#x9;[travel_duration] [smallint] NULL,&#xA;&#x9;[schedule_duration] [smallint] NULL,&#xA;&#x9;[authorisation_date] [datetimeoffset](7) NULL,&#xA;&#x9;[classn_shift_centre] [varchar](50) NULL,&#xA;&#x9;[date_extract_for_payroll] [datetimeoffset](7) NULL,&#xA;&#x9;[date_upload_to_comcare] [datetime] NULL,&#xA;&#x9;[provider_contract_type_code] [tinyint]  NULL,&#xA;&#x9;est_visit_charge [numeric](10, 2) NULL,&#xA;&#x9; billing_funding_prog_code varchar(10), -- from client billed hours&#xA;&#x9; billing_funding_prog_code_desc varchar(100),&#x9; -- from client billed hours&#xA;     billing_rate decimal(28,5),-- from client billed hours&#xA;&#x9; billing_unit decimal(28,5),-- from client billed hours&#xA;&#x9; billing_amount decimal(28,5),-- from client billed hours&#xA;&#x9; billing_visit_date date,-- from client billed hours&#xA;&#x9; billing_comments varchar(500),-- from client billed hours,&#xA;&#x9; billing_period varchar(50),&#xA;&#x9; direct_balance_flag varchar(2),&#xA;&#x9; second_balance_flag varchar(2),&#xA;&#x9; final_balance_flag varchar(2)&#xA;&#xA;   &#xA;   );&#xA;   &#xA;&#xA;   insert into @provider_client_service_CD&#xA;   select t1.provider_id,&#xA;       t1.client_id,&#xA;&#x9;   t1.activity_date,&#xA;&#x9;   t1.task_type_code,&#xA;&#x9;   t1.activity_start_time,&#xA;&#x9;   t1.activity_end_time,&#xA;&#x9;   t1.units_of_service,&#xA;&#x9;   t1.activity_duration,&#xA;&#x9;   t1.travel_duration,&#xA;&#x9;   t1.[schedule_duration],&#xA;&#x9;   t1.authorisation_date,&#xA;&#x9;   t1.classn_shift_centre,&#xA;&#x9;   t1.date_extract_for_payroll,&#xA;&#x9;   t1.date_upload_to_comcare,&#xA;&#x9;   t3.provider_contract_type_code,&#xA;&#x9;   ISNULL(t1.est_visit_charge,0.0),&#xA;&#x9;   NULL,&#xA;&#x9;   NULL,&#xA;&#x9;   0,&#xA;&#x9;   0,&#xA;&#x9;   0,&#xA;&#x9;   NULL&#x9;,&#xA;&#x9;   NULL,&#xA;&#x9;   NULL,&#xA;&#x9;   NULL,&#xA;&#x9;   NULL,&#xA;&#x9;   NULL&#xA;from extract_comcare.activity_work_table as t1&#xA;inner join extract_comcare.provider as t2 on t1.provider_id = t2.provider_id &#xA;inner join extract_comcare.provider_contract  as t3 on t2.provider_id = t3.provider_id and t3.organisation_id =7&#xA;where t1.authorisation_date is not null and t1.date_upload_to_comcare is not null&#xA;and t1.client_id is not NULL&#xA;&#xA;--find manually input actual service records which have no activity_work_table record&#xA;--actual_service where date_upload_from_AWT is NULL &#xA;  insert into @provider_client_service_CD&#xA;  select       t1.provider_id,&#xA;&#x9;&#x9;       t1.client_id,&#xA;&#x9;&#x9;&#x9;   t1.visit_date,&#xA;&#x9;&#x9;&#x9;   t1.task_type_code,&#xA;&#x9;&#x9;&#x9;   t1.visit_time,&#xA;&#x9;&#x9;&#x9;   null,&#xA;&#x9;&#x9;&#x9;   t1.visit_duration,&#xA;&#x9;&#x9;&#x9;   t1.visit_duration,&#xA;&#x9;&#x9;&#x9;   t1.travel_duration,&#xA;&#x9;&#x9;&#x9;   t1.[scheduled_duration],&#xA;&#x9;&#x9;&#x9;   null,&#xA;&#x9;&#x9;&#x9;   null,&#xA;&#x9;&#x9;&#x9;   null,&#xA;&#x9;&#x9;&#x9;   null,&#xA;&#x9;&#x9;&#x9;   t5.provider_contract_type_code,&#xA;&#x9;&#x9;&#x9;   ISNULL(value_costed,0.0),&#xA;&#x9;&#x9;&#x9;    NULL,&#xA;&#x9;&#x9;&#x9;   NULL,&#xA;&#x9;&#x9;&#x9;   0,&#xA;&#x9;&#x9;&#x9;   0,&#xA;&#x9;&#x9;&#x9;   0,&#xA;&#x9;&#x9;&#x9;   NULL&#x9;,&#xA;&#x9;&#x9;&#x9;   NULL,&#xA;&#x9;&#x9;&#x9;   NULL,&#xA;&#x9;&#x9;&#x9;   NULL,&#xA;&#x9;&#x9;&#x9;   NULL,&#xA;&#x9;&#x9;&#x9;   NULL&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;from extract_comcare.actual_service as t1&#xA;&#x9;&#x9;&#x9;left join extract_comcare.FB_Client_Contract_Billing t2 on t1.client_id=t2.client_id&#xA; &#x9;left join extract_comcare.FC_Funder_Contract t3 on t2.Funder_Contract_ID=t3.Funder_Contract_ID&#xA;&#x9;inner join extract_comcare.provider as t4 on t1.provider_id = t4.provider_id &#xA;    inner join extract_comcare.provider_contract  as t5 on t4.provider_id = t5.provider_id and t5.organisation_id =7&#xA;&#x9;where t3.Funder_Contract_ID in (25,26,27,28,29,31)&#xA;&#x9;and t3.Funding_Care_Model_ID=6&#xA;&#x9;and t1.date_upload_from_AWT is NULL &#xA;--&#x9;and t1.billed_date is null&#xA;&#xA;----------------------client billed hours---------------------------------------------------------------------------------&#xA;  declare @client_billed_service_CD TABLE&#xA;   (&#xA;    funding_prog_code varchar(10),&#xA;&#x9;funding_prog_code_desc varchar(100),&#x9; &#xA;    client_id int,&#xA;&#x9;provider_id int,&#xA;&#x9;rate decimal(28,5),&#xA;&#x9;unit decimal(28,5),&#xA;&#x9;amount decimal(28,5),&#xA;&#x9;visit_date date,&#xA;&#x9;comments varchar(500),&#xA;&#x9;period varchar(30)&#xA;   );&#xA;&#xA;insert into @client_billed_service_CD&#xA; select &#xA;    t3.funder_contract_id,&#xA;&#x9;t3.Description,&#xA;&#x9;t2.client_id,&#xA;&#x9;t1.provider_id,&#xA;&#x9;ISNULL(t1.Rate_Used,0),&#xA;&#x9;ISNULL(t1.Units,0),&#xA;&#x9;ISNULL(t1.amount,0),&#xA;&#x9;t1.Visit_Date,&#xA;&#x9;--05/12/2016 to 18/12/2016&#xA;&#x9;t1.comments,&#xA;&#x9;convert(varchar,t1.Billing_Period_From,103) +' to '+convert(varchar,t1.Billing_Period_To,103) &#xA;&#x9;from extract_comcare.FB_Client_CB_Transaction as t1&#xA;&#x9;left join extract_comcare.FB_Client_Contract_Billing t2 on t1.Client_CB_ID=t2.Client_CB_ID&#xA;&#x9;left join extract_comcare.FC_Funder_Contract t3 on t2.Funder_Contract_ID=t3.Funder_Contract_ID&#xA;&#x9;left join extract_comcare.person as t4 on t1.Person_ID=t4.Person_ID&#xA;&#x9;where t1.Fee_Hold_Reason_Code IS NULL&#xA;&#x9;and t3.Funder_Contract_ID in (25,26,27,28,29,31)&#xA;&#x9;and t3.Funding_Care_Model_ID=6&#xA;&#xA;-------------------------join two tables-------------------------------------------------------------------------------&#xA; update t1&#xA; set &#xA;      t1.billing_funding_prog_code= t2.funding_prog_code,&#xA;&#x9; t1.billing_funding_prog_code_desc = t2.funding_prog_code_desc,&#xA;     t1.billing_rate =t2.rate,&#xA;&#x9; t1.billing_unit =t2.unit,&#xA;&#x9; t1.billing_amount =t2.amount,&#xA;&#x9; t1.billing_visit_date =t2.visit_date,&#xA;&#x9; t1.billing_comments = t2.comments,&#xA;&#x9; t1.billing_period=t2.period&#xA;&#xA; from  @provider_client_service_CD as t1&#xA; inner join  @client_billed_service_CD as t2&#xA; on t1.client_id= t2.client_id&#xA; and t1.provider_id = t2.provider_id  &#xA; and t1.activity_date = t2.visit_date&#xA;&#xA; --some transcation's provider will be changed. and cannot map so use charged_cost to mapp&#xA;  update t1&#xA; set &#xA;      t1.billing_funding_prog_code= t2.funding_prog_code,&#xA;&#x9; t1.billing_funding_prog_code_desc = t2.funding_prog_code_desc,&#xA;     t1.billing_rate =t2.rate,&#xA;&#x9; t1.billing_unit =t2.unit,&#xA;&#x9; t1.billing_amount =t2.amount,&#xA;&#x9; t1.billing_visit_date =t2.visit_date,&#xA;&#x9; t1.billing_comments = t2.comments,&#xA;&#x9; t1.billing_period=t2.period&#xA;&#xA; from  @provider_client_service_CD as t1&#xA; inner join  @client_billed_service_CD as t2&#xA; on t1.client_id= t2.client_id&#xA;-- and t1.provider_id = t2.provider_id  &#xA; and t1.activity_date = t2.visit_date&#xA; and t1.est_visit_charge=t2.amount&#xA; where t1.billing_funding_prog_code is NULL and t1.billing_funding_prog_code_desc is NULL and t1.billing_comments is NULL&#xA;&#xA;&#xA;&#xA; --process adjustment billing : no provider&#xA; --added by JS at 12/10/2017&#xA; insert into @provider_client_service_CD&#xA; select &#xA; NULL,&#xA; client_id,&#xA; visit_date,&#xA; NULL,&#xA;  NULL,&#xA; NULL,&#xA;  NULL,&#xA; NULL,&#xA;  NULL,&#xA; NULL,&#xA;  NULL,&#xA; NULL,&#xA;  NULL,&#xA; NULL,&#xA;  NULL,&#xA;  0.0,&#xA; funding_prog_code,&#xA; funding_prog_code_desc,&#xA; rate,&#xA; unit,&#xA; amount,&#xA; visit_date,&#xA; comments,&#xA; period,&#xA; NULL,&#xA; NULL,&#xA; NULL&#xA; from @client_billed_service_CD &#xA; WHERE provider_id is NULL&#xA;&#xA; -------------------------------update balance flag---------------------------------------------------------------------&#xA;&#x9; --use activity_duration&#xA;&#x9; update @provider_client_service_CD&#xA;&#x9; set direct_balance_flag ='Y'&#xA;&#x9; where convert(decimal(10,2),activity_duration) /60.00 =billing_unit;&#xA;&#xA;&#x9; --use shedule duration&#xA;&#x9;  update @provider_client_service_CD&#xA;&#x9; set second_balance_flag ='Y'&#xA;&#x9; where direct_balance_flag is NULL&#xA;&#x9; and convert(decimal(10,2),schedule_duration) /60.00 =billing_unit;&#xA;&#xA;&#x9; --update final_balance_flag&#xA;&#x9;  update @provider_client_service_CD&#xA;&#x9; set final_balance_flag ='Y'&#xA;&#x9; where direct_balance_flag='Y' or second_balance_flag='Y'&#xA;&#xA;&#x9; -------------------- quick update by js at 12/10/2017---------------------------&#xA;&#x9;   update @provider_client_service_CD&#xA;&#x9; set final_balance_flag ='Y'&#xA;&#x9; where billing_unit&lt;&gt;0 and activity_duration&lt;&gt;0&#xA;&#x9; --------------------------------------------------------------------------------&#xA;&#xA;&#xA;&#xA;&#x9;  update @provider_client_service_CD&#xA;&#x9; set final_balance_flag ='N'&#xA;&#x9; where final_balance_flag is NULL&#xA;&#xA;&#xA;&#xA;&#x9; ---adjustment transaction&#xA;&#x9;   update @provider_client_service_CD&#xA;&#x9; set final_balance_flag ='AD'&#xA;&#x9; where provider_id is NULL&#xA;&#xA;&#xA;--- populate fact table&#xA;&#xA;-- create table RECONCILE_UNBILLEDSERVICE_FACT&#xA;--(&#xA;--notbilled_key&#x9;&#x9;int&#x9;identity(1,1) not null,&#xA;--provider_id&#x9;&#x9;int&#x9;,&#xA;--provider_name&#x9;varchar(50),&#xA;--provider_contract_type&#x9;&#x9;varchar(10),&#xA;--client_id&#x9;&#x9;int&#x9;,&#xA;--client_name&#x9; varchar(50),&#xA;--service_date_key&#x9;int&#x9;,&#xA;--service_type_code&#x9;&#x9;varchar(50),&#xA;--service_name&#x9;&#x9;varchar(50),&#xA;--service_start_time&#x9;&#x9;time,&#x9;&#xA;--service_end_time&#x9;&#x9;time,&#x9;&#xA;--service_duration&#x9;decimal(6,2),&#xA;--travel_duration&#x9;decimal(6,2),&#xA;--schedule_duration&#x9;decimal(6,2),&#xA;--billing_funding_prog&#x9;&#x9;varchar(50),&#xA;--billing_rate&#x9;decimal(10,5),&#xA;--billing_unit&#x9;&#x9;decimal(10,5),&#xA;--billing_amount&#x9;&#x9;decimal(10,5),&#xA;--billing_visit_date_key&#x9;&#x9;int&#x9;,&#xA;--billing_comments&#x9;&#x9;varchar(500),&#xA;--billing_period&#x9;&#x9;varchar(50),&#xA;--unbilled_flag&#x9;&#x9;varchar(2),&#xA;--)&#xA;&#xA;&#xA;truncate table conform_finance.RECONCILE_UNBILLEDSERVICE_FACT;&#xA;&#xA;insert into conform_finance.RECONCILE_UNBILLEDSERVICE_FACT&#xA;select &#xA;provider_id,&#xA;null,&#xA;case provider_contract_type_code&#xA;when '1' then 'payroll'&#xA;when '2' then 'autopay'&#xA;when '3'  then 'contract'&#xA;else  NULL&#xA;end,&#xA;&#xA;client_id,&#xA;null,&#xA;&#xA;d1.date_key,&#xA;t1.task_type_code,&#xA;null,&#xA;&#xA;convert(time,t1.activity_start_time),&#xA;convert(time,t1.activity_end_time),&#xA;&#xA;isnull(convert(decimal(10,4),t1.activity_duration) / 60.0000,0.0000),&#xA;isnull(convert(decimal(10,4),t1.travel_duration) / 60.0000,0.0000),&#xA;isnull(convert(decimal(10,4),t1.schedule_duration) / 60.0000,0.0000),&#xA;&#xA;t1.billing_funding_prog_code_desc,&#xA;t1.billing_rate,&#xA;t1.billing_unit,&#xA;t1.billing_amount,&#xA;t1.billing_visit_date,&#xA;t1.billing_comments,&#xA;t1.billing_period,&#xA;&#xA;case t1.final_balance_flag&#xA;when 'Y' then 'N'&#xA;When 'N' then 'Y'&#xA;else t1.final_balance_flag&#xA;end,&#xA;t1.est_visit_charge&#xA;&#xA;from @provider_client_service_CD as t1&#xA;left join conform_finance.date_dim as d1  on t1.activity_date=d1.full_date&#xA;&#xA;&#xA;--update names&#xA;--provider&#xA;update t1&#xA;set t1.provider_name =t2.given_names +' '+t2.Last_name&#xA;from conform_finance.RECONCILE_UNBILLEDSERVICE_FACT as t1&#xA;inner join extract_comcare.person  as t2&#xA;on t1.provider_id = t2.person_id &#xA;&#xA;&#xA;update t1&#xA;set t1.client_name =t2.given_names +' '+t2.Last_name&#xA;from conform_finance.RECONCILE_UNBILLEDSERVICE_FACT as t1&#xA;inner join extract_comcare.person  as t2&#xA;on t1.client_id = t2.person_id &#xA;&#xA;&#xA;--update service_name&#xA;update t1&#xA;set t1.service_name =t2.description&#xA;from conform_finance.RECONCILE_UNBILLEDSERVICE_FACT as t1&#xA;inner join extract_comcare.task_type   as t2&#xA;on t1.service_type_code = t2.task_type_code &#xA;&#xA;&#xA;--update final flag&#xA;update conform_finance.RECONCILE_UNBILLEDSERVICE_FACT&#xA;set unbilled_flag='N'&#xA;where unbilled_flag='Y'&#xA;and billing_unit&lt;&gt;0 and (service_duration+travel_duration+schedule_duration)&lt;&gt;0&#xA;&#xA;&#xA;&#xA;------------------------do some checks for adjustment billing added by JS at 2/11/2017-----------------------------------------------------------&#xA;------------------------if they have an adjustment billing whin same period, client is same and amount is same. Put the unbilled flag from Y to N&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;-------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#xA;&#xA;---delivery to front &#xA;truncate table dwhf_finance.finance.RECONCILE_UNBILLEDSERVICE_FACT;&#xA;insert into dwhf_finance.finance.RECONCILE_UNBILLEDSERVICE_FACT&#xA;select * from conform_finance.RECONCILE_UNBILLEDSERVICE_FACT;&#xA;&#xA; -------------------------------------get temp table---------------------------------------------------------------------&#xA; --select * from  conform_finance.RECONCILE_UNBILLEDSERVICE_FACT where client_id ='10076349'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT\Reconcile_invoice_fact"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{d7a1cc1e-b9e4-43a3-913c-e6c6ffd7dca2}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Reconcile_invoice_fact"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{BF90892F-2F5D-47CF-A2FA-4F3850A04535}"
                  SQLTask:SqlStatementSource="/*--------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;                                     Purpose: ETL for reconcile_invocie_fact&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Developer: Jerry Shen&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Version: V1.0 04/09/2017 Created by Jerry Shen&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Note:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;      1. Start with Children Disability program first.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  2. need new extract comcare tables:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   Actual_Service_Charge_Item&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   FC_Contract_Area_Product&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   Funding_Program&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  3. changed from comcare.FB_Client_CB_Transaction tables because some items missing in service charge table,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;      e.g: Additional Charges (Austin Turner)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    from [devsql-1\dev].comcaredev.dbo.FB_Client_CB_Transaction as t1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;left join [devsql-1\dev].comcaredev.dbo.FB_Client_Contract_Billing t2 on t1.Client_CB_ID=t2.Client_CB_ID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;left join [devsql-1\dev].comcaredev.dbo.FC_Funder_Contract t3 on t2.Funder_Contract_ID=t3.Funder_Contract_ID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;left join [devsql-1\dev].comcaredev.dbo.person as t4 on t1.Person_ID=t4.Person_ID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  4. Change T1 source from R1 to %ACT to get invoice details by JS at 25/09/2017.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  5. Added cost centre inforamtion by JS at 28/09/2017&#xA;---------------------------------------------------------------------------------------------------------------------------------------------------------------------*/&#xA;   use dwhb;&#xA;&#xA;&#xA;   --invocie temp table&#xA;    declare @client_invocie TABLE&#xA;   (accnbri varchar(32),&#xA;    pdatei datetime,&#xA;&#x9;amt1 numeric(14,2),&#xA;&#x9;narr1 varchar(40),&#xA;&#x9;narr2 varchar(40),&#xA;&#x9;narr3 varchar(40),&#xA;&#x9;user_fld1 varchar(40),&#xA;&#x9;period_start_date date,&#xA;&#x9;period_end_date date,&#xA;&#x9;cc_service_duration decimal(28,5),&#xA;&#x9;cc_service_cost  decimal(28,5),&#xA;&#x9;balance_flag varchar(1),&#xA;&#x9;glcode varchar(15),&#xA;&#x9;doc_ref1 varchar(20)&#xA;   &#xA;   );&#xA; --  insert into  @client_invocie&#xA; --  (accnbri,pdatei,amt1,narr1,narr2,narr3,user_fld1,cc_service_duration,cc_service_cost)&#xA; --  select accnbri,pdatei,amt1,narr1,narr2,narr3,USER_FLD1,0,0&#xA;&#x9;--from extract.GLF_LDG_ACC_TRANS&#xA;&#x9;--where ldg_name ='R1'&#xA;&#x9;--and doc_type in ('ARINV','ARINVCCDS')&#xA;&#x9;----and NARR1='10069826'&#xA;&#x9;--and len(NARR1)=8&#xA;&#x9;--and USER_FLD1 in ('DSIS','DSDA','DSOR','DSCC','DSOATS') -- children disability program category&#xA;&#xA;&#x9;&#xA;&#x9;--------------------------------------------------------------------------------------------------&#xA;&#x9;---changed by JS at 25/09/2017: t1 source from R1 to %ACT to get invoice details.&#xA;&#x9;--step1: get invocice details including GL_Codes and DOC_REF1 (link to AR. R1)&#xA;&#x9;insert into  @client_invocie&#xA;&#x9;(accnbri,pdatei,amt1,narr1,narr2,narr3,user_fld1,cc_service_duration,cc_service_cost,glcode,doc_ref1)&#xA;&#x9;select '',DOC_DATEI1,amt1*(-1),narr1,narr2,narr3,USER_FLD1,0,0,accnbri,DOC_REF1&#xA;&#x9;from extract.GLF_LDG_ACC_TRANS&#xA;&#x9;where ldg_name like '%ACT' and len(ACCNBRI)=15 and  len(doc_ref1)&gt;0&#xA;&#x9;and doc_type in ('ARINV','ARINVCCDS')&#xA;&#x9;and len(NARR1)=8&#xA;     -- -- children disability program category&#xA;&#x9;and  (USER_FLD1 in ('DSIS','DSDA','DSOR','DSCC','DSOATS')  or (accnbri like '%3611%') )-- get 3611 - Metro NDIS Case Co-ord because no USDR_FLD1 for this) &#xA;&#xA;&#x9;print 'finish populate @client_invoice'&#xA;&#xA;&#x9;--step2: get AR debtor id&#xA;&#x9; declare @tmp_accnbri TABLE&#xA;&#x9; (&#xA;&#x9; accnbri varchar(32),&#xA;&#x9; DOC_REF1 varchar(20)&#xA;&#x9; &#xA;&#x9; )&#xA;&#x9; insert into @tmp_accnbri&#xA;&#x9;  select distinct accnbri,DOC_REF1&#xA;&#x9;&#x9;from extract.GLF_LDG_ACC_TRANS&#xA;&#x9;&#x9;where ldg_name ='R1'&#xA;&#x9;&#x9;and doc_type in ('ARINV','ARINVCCDS')&#xA;&#x9;&#x9;and len(NARR1)=8&#xA;&#x9;--&#x9;and USER_FLD1 in ('DSIS','DSDA','DSOR','DSCC','DSOATS') -- children disability program category&#xA;&#x9;print 'finish populate @@tmp_accnbri'&#xA;&#xA;&#xA;&#x9;update t1&#xA;&#x9;set  t1.accnbri= t2.ACCNBRI&#xA;&#x9;from  @client_invocie as t1&#xA;&#x9;inner join @tmp_accnbri as t2 &#x9;on t1.doc_ref1=t2.DOC_REF1 COLLATE DATABASE_DEFAULT&#xA;&#xA;&#x9;print 'finish update @client_invocie ';&#xA;&#x9;--------------------------------------------------------------------------------------------------&#xA;&#x9;&#xA;&#xA;&#x9;--update p_start_date and p_end_date&#xA;&#x9;update  @client_invocie&#xA;&#x9;set period_start_date = convert(date,left(narr3,10),103),&#xA;&#x9;    period_end_date= convert(date,right(narr3,10),103)&#xA;&#x9;where len(narr3)=24&#xA;&#xA;&#x9;----process comcare data from Actual_Service_Charge_Item&#xA;&#x9;-- declare @client_actual_service TABLE&#xA; --  (&#xA; --   funding_prog_code varchar(10),&#xA;&#x9;--funding_prog_code_desc varchar(100),&#x9; &#xA; --   client_id int,&#xA;&#x9;--rate decimal(28,5),&#xA;&#x9;--unit decimal(28,5),&#xA;&#x9;--amount decimal(28,5),&#xA;&#x9;--visit_date date,&#xA;&#x9;--period varchar(30)&#xA; --  );&#xA;&#xA;&#xA; --&#x9; insert into  @client_actual_service&#xA;&#x9;-- select t3.Funding_Prog_Code,t3.Description , &#xA; --    t1.client_id,t1.rate,t1.unit,t1.amount,t1.Visit_Date,null&#xA; --    from extract_comcare.Actual_Service_Charge_Item as t1&#xA; --    inner join extract_comcare.FC_Contract_Area_Product  as t2 on t1.FC_Product_ID=t2.FC_Product_ID&#xA; --    inner join extract_comcare.Funding_Program as t3 on t2.Funding_Prog_Code=t3.Funding_Prog_Code and t3.funding_prog_code in (115,116,117,118,119,120,121,122,123)&#xA; --  --  where t1.client_id ='10069826' &#xA;&#xA;&#xA;&#xA;&#x9;----update period based on invocie period: start_date and end_date&#xA;&#x9;--update t1&#xA;&#x9;--set t1.period=t2.narr3&#xA;&#x9;--from @client_actual_service as t1&#xA;&#x9;--join @client_invocie as t2&#xA;&#x9;--on t1.client_id=t2.narr1&#xA;&#x9;--and t1.visit_date between t2.period_start_date and t2.period_end_date&#xA;&#x9;&#xA;&#x9;--changed by Jerry Shen at 20/09/2017&#xA;&#x9;--from transaction table instead of Actual_Service_Charge_Item&#xA;    declare @client_actual_service TABLE&#xA;   (&#xA;    funding_prog_code varchar(10),&#xA;&#x9;funding_prog_code_desc varchar(100),&#x9; &#xA;    client_id int,&#xA;&#x9;rate decimal(28,5),&#xA;&#x9;unit decimal(28,5),&#xA;&#x9;amount decimal(28,5),&#xA;&#x9;visit_date date,&#xA;&#x9;period varchar(30)&#xA;   );&#xA;&#xA;   insert into  @client_actual_service&#xA;   select &#xA;    t3.funder_contract_id,&#xA;&#x9;t3.Description,&#xA;&#x9;t2.client_id,&#xA;&#x9;ISNULL(t1.Rate_Used,0),&#xA;&#x9;ISNULL(t1.Units,0),&#xA;&#x9;ISNULL(t1.amount,0),&#xA;&#x9;convert(date,t1.Visit_Date),&#xA;&#x9;--05/12/2016 to 18/12/2016&#xA;&#x9;convert(varchar,t1.Billing_Period_From,103) +' to '+convert(varchar,t1.Billing_Period_To,103) &#xA;&#x9;from extract_comcare.FB_Client_CB_Transaction as t1&#xA;&#x9;left join extract_comcare.FB_Client_Contract_Billing t2 on t1.Client_CB_ID=t2.Client_CB_ID&#xA;&#x9;left join extract_comcare.FC_Funder_Contract t3 on t2.Funder_Contract_ID=t3.Funder_Contract_ID&#xA;&#x9;left join extract_comcare.person as t4 on t1.Person_ID=t4.Person_ID&#xA;&#x9;where t1.Fee_Hold_Reason_Code IS NULL&#xA;&#x9;and t3.Funder_Contract_ID in (25,26,27,28,29,31)&#xA;&#x9;and t3.Funding_Care_Model_ID=6&#xA;&#xA;&#x9;&#x9;print 'finish populate @client_actual_service'&#xA;&#x9;&#x9;--------------------------------------------------------------------------------------------------&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;--join two tables&#xA;&#xA;&#x9;/*-------------------------------------------------&#xA;&#x9;DC Individualised Services,      DSIS       25&#xA;&#x9;DC Day Activities               ,DSDA                26&#xA;&#x9;DC Overnight Respite,            DSOR              27&#xA;&#x9;DC Case Coordination Mt Gambier,  DSCC        28&#xA;&#x9;DC OATS,                          DSOATS                             29&#xA;&#x9;Case Coordination NDIS                     31&#xA;&#x9;----------------------------------------------------*/&#xA;&#xA;&#xA;&#x9;update t1&#xA;&#x9;set t1.cc_service_duration = t2.visit_duration,&#xA;&#x9;    t1.cc_service_cost =  t2.value_costed&#xA;&#x9;from @client_invocie as t1&#xA;&#x9;inner join &#xA;&#x9; (select client_id,period,funding_prog_code,unit as visit_duration, amount as value_costed&#xA;&#x9;   from @client_actual_service&#x9;  &#xA;&#x9; ) as t2&#xA;&#xA;&#x9;on t1.narr1=t2.client_id&#xA;&#x9;and t1.narr3=t2.period&#xA;&#x9;and t1.amt1=t2.value_costed&#xA;&#x9;and t1.user_fld1='DSOATS' and T2.funding_prog_code='29';&#xA;&#xA;&#x9;print 'finish join tables for 29'&#xA;&#xA;&#x9;update t1&#xA;&#x9;set t1.cc_service_duration = t2.visit_duration,&#xA;&#x9;    t1.cc_service_cost =  t2.value_costed&#xA;&#x9;from @client_invocie as t1&#xA;&#x9;inner join &#xA;&#x9; (select client_id,period,funding_prog_code,unit as visit_duration, amount as value_costed&#xA;&#x9;   from @client_actual_service&#x9;  &#xA;&#x9; ) as t2&#xA;&#xA;&#x9;on t1.narr1=t2.client_id&#xA;&#x9;and t1.narr3=t2.period&#xA;&#x9;and t1.amt1=t2.value_costed&#xA;&#x9;and t1.user_fld1='DSIS' and T2.funding_prog_code in ('25');&#xA;&#x9;print 'finish join tables for 25'&#xA;&#xA;&#x9;update t1&#xA;&#x9;set t1.cc_service_duration = t2.visit_duration,&#xA;&#x9;    t1.cc_service_cost =  t2.value_costed&#xA;&#x9;from @client_invocie as t1&#xA;&#x9;inner join &#xA;&#x9; (select client_id,period,funding_prog_code,unit as visit_duration, amount as value_costed&#xA;&#x9;   from @client_actual_service&#x9;  &#xA;&#x9; ) as t2&#xA;&#xA;&#x9;on t1.narr1=t2.client_id&#xA;&#x9;and t1.narr3=t2.period&#xA;&#x9;and t1.amt1=t2.value_costed&#xA;&#x9;and t1.user_fld1='DSDA' and T2.funding_prog_code in ('26');&#xA;&#x9;print 'finish join tables for 26'&#xA;&#xA;&#x9;update t1&#xA;&#x9;set t1.cc_service_duration = t2.visit_duration,&#xA;&#x9;    t1.cc_service_cost =  t2.value_costed&#xA;&#x9;from @client_invocie as t1&#xA;&#x9;inner join &#xA;&#x9; (select client_id,period,funding_prog_code,unit as visit_duration, amount as value_costed&#xA;&#x9;   from @client_actual_service&#x9;  &#xA;&#x9; ) as t2&#xA;&#xA;&#x9;on t1.narr1=t2.client_id&#xA;&#x9;and t1.narr3=t2.period&#xA;&#x9;and t1.amt1=t2.value_costed&#xA;&#x9;and t1.user_fld1='DSOR' and T2.funding_prog_code in ('27');&#xA;&#x9;print 'finish join tables for 27'&#xA;&#xA;&#x9;update t1&#xA;&#x9;set t1.cc_service_duration = t2.visit_duration,&#xA;&#x9;    t1.cc_service_cost =  t2.value_costed&#xA;&#x9;from @client_invocie as t1&#xA;&#x9;inner join &#xA;&#x9; (select client_id,period,funding_prog_code,unit as visit_duration, amount as value_costed&#xA;&#x9;   from @client_actual_service&#x9;  &#xA;&#x9; ) as t2&#xA;&#xA;&#x9;on t1.narr1=t2.client_id&#xA;&#x9;and t1.narr3=t2.period&#xA;&#x9;and t1.amt1=t2.value_costed&#xA;&#x9;and t1.user_fld1='DSCC' and T2.funding_prog_code in ('28');&#xA;&#x9;&#xA;&#x9;print 'finish join tables for 28'&#xA;&#x9;&#xA;&#x9;update t1&#xA;&#x9;set t1.cc_service_duration = t2.visit_duration,&#xA;&#x9;    t1.cc_service_cost =  t2.value_costed&#xA;&#x9;from @client_invocie as t1&#xA;&#x9;inner join &#xA;&#x9; (select client_id,period,funding_prog_code,unit as visit_duration, amount as value_costed&#xA;&#x9;   from @client_actual_service&#x9;&#xA;&#x9; ) as t2&#xA;&#xA;&#x9;on t1.narr1=t2.client_id&#xA;&#x9;and t1.narr3=t2.period&#xA;&#x9;and t1.amt1=t2.value_costed&#xA;&#x9;and len(t1.user_fld1)=0 and T2.funding_prog_code in ('31');&#xA;&#xA;&#x9;print 'finish join tables for 31'&#xA;&#xA;&#xA;&#xA;&#x9;--update balance flag&#xA;&#x9;update @client_invocie&#xA;&#x9;set balance_flag= (case when amt1 = cc_service_cost then 'Y' else 'N' end);&#xA;&#xA;&#xA;&#xA;&#x9;--populate fact temp table&#xA;&#x9;declare @tmp_RECONCILE_INVOICE_FACT Table&#xA;&#x9;(reconcile_invocie_key&#x9; [int] IDENTITY(1,1) NOT NULL,&#xA;&#x9;account_key int,&#xA;&#x9;Accnbri&#x9;int,&#xA;&#x9;Client_id&#x9;&#x9;int,&#xA;&#x9;Portfolio_key&#x9;int,&#xA;&#x9;Service_key&#x9;int,&#xA;&#x9;Program_key int,&#xA;&#x9;ComCare_service_type varchar(20),&#xA;&#x9;Invocie_date datetime,&#xA;&#x9;Invocie_date_key&#x9;&#x9;int,&#xA;&#x9;Invocie_Amount decimal(14,2),&#xA;&#x9;Invoice_Period&#x9;varchar(40),&#xA;    Period_start_date date,&#xA;&#x9;Period_start_date_key int,&#xA;&#x9;Period_end_date date,&#xA;&#x9;period_end_date_key int,&#xA;&#x9;Invoice_Description&#x9;&#x9;varchar(40),&#xA;&#x9;ComCare_serviced_hours decimal(28,5),&#xA;&#x9;ComCare_service_charges&#x9;decimal(28,5),&#xA;&#x9;Balance_flag&#x9;&#x9;varchar(1),&#xA;&#x9;glcode varchar(15),&#xA;&#x9;costing varchar(4),&#xA;&#x9;costing_desc varchar(50));&#xA;&#xA;&#x9;insert into  @tmp_RECONCILE_INVOICE_FACT&#xA;&#x9;select &#xA;&#x9;       (select account_key from conform_finance.account_dim where current_row_indicator='Y' and account_name ='No Account'), -- defualt no account key&#xA;&#x9;       t1.accnbri,&#xA;&#x9;       t1.narr1,&#xA;&#x9;&#x9;   (select portfolio_key from conform_finance.portfolio_dim where portfolio_name='Community Services' and current_row_indicator='Y'),&#xA;&#x9;&#x9;   (select service_stream_key from conform_finance.service_stream_dim where service_stream_name ='Community Inclusion' and current_row_indicator='Y'),&#xA;&#x9;&#x9;   (select program_key from conform_finance.program_dim where program_name ='Children''s Disability Services' and current_row_indicator='Y'),&#xA;&#x9;&#x9;   t1.user_fld1,&#xA;&#x9;&#x9;   t1.pdatei,&#xA;&#x9;&#x9;   t2.date_key,&#xA;&#x9;&#x9;   t1.amt1,&#xA;&#x9;&#x9;   t1.narr3,&#xA;&#x9;&#x9;   t1.Period_start_date,&#xA;&#x9;&#x9;   (select date_key from conform_finance.date_dim where display_date='01/01/1800'),&#xA;&#x9;&#x9;   t1.Period_end_date,&#xA;&#x9;&#x9;   (select date_key from conform_finance.date_dim where display_date='01/01/1800'),&#xA;&#x9;&#x9;   t1.narr2,&#xA;&#x9;&#x9;   t1.cc_service_duration,&#xA;&#x9;&#x9;   t1.cc_service_cost,&#xA;&#x9;&#x9;   t1.balance_flag,&#xA;&#x9;&#x9;   t1.glcode,&#xA;&#x9;&#x9;   substring(t1.glcode,3,4),&#xA;&#x9;&#x9;   ''&#xA;&#x9;from  @client_invocie as t1&#xA;&#x9;inner join conform_finance.date_dim as t2&#xA;&#x9;on t1.pdatei=t2.full_date&#xA;&#xA;&#x9;print 'finish populate  @tmp_RECONCILE_INVOICE_FACT'&#xA;&#xA;&#xA;&#x9;--account key&#xA;&#xA;&#x9;update t1&#xA;&#x9;set t1.account_key=t2.account_key&#xA;&#x9;from @tmp_RECONCILE_INVOICE_FACT as t1&#xA;&#x9;inner join [conform_finance].[account_dim] as t2&#xA;&#x9;on t1.Accnbri=t2.account_number and t2.current_row_indicator='Y'&#xA;&#xA;&#x9;print 'finish update account_key'&#xA;&#xA;&#xA;&#xA;&#x9;--update period start_date and end_date_key&#xA;    update t1&#xA;&#x9;set t1.Period_start_date_key=t2.date_key&#xA;&#x9;from @tmp_RECONCILE_INVOICE_FACT as t1&#xA;&#x9;inner join [conform_finance].[date_dim] as t2&#xA;&#x9;on convert(date,t1.Period_start_date)=convert(date,t2.full_date);&#xA;&#xA;&#x9;    update t1&#xA;&#x9;set t1.period_end_date_key=t2.date_key&#xA;&#x9;from @tmp_RECONCILE_INVOICE_FACT as t1&#xA;&#x9;inner join [conform_finance].[date_dim] as t2&#xA;&#x9;on convert(date,t1.Period_end_date)=convert(date,t2.full_date);&#xA;&#xA;&#x9;--update costing description&#xA;&#x9;--notes: &#xA;&#x9;-- Children's disability: 3225 / 3235 / 3609&#xA;&#x9;-- Autism ELC: 3607 / 3608 / 3611&#xA;&#x9;update @tmp_RECONCILE_INVOICE_FACT &#xA;&#x9;set costing_desc =&#xA;&#x9;  case costing&#xA;&#x9;  when '3225' then '3225 - Children''s Accomodation Support'&#xA;&#x9;  when '3235' then '3235 - Children''s Community Day Activities'&#xA;&#x9;  when '3609' then '3609 - Children''s in home care'&#xA;&#x9;  when '3607' then  '3607 - OATS'&#xA;&#x9;  when '3608' then   '3608 - MT Gambier NDIS Case Co-ord'&#xA;&#x9;  when '3611' then   '3611 - Metro NDIS Case Co-ord'&#xA;&#x9;  else 'No Costing'&#xA;&#x9;  end;&#xA;&#xA;&#xA;&#xA;&#x9;--put data into fact table from temp table&#xA;&#xA;&#x9;truncate table  [conform_finance].[RECONCILE_INVOICE_FACT];&#xA;&#x9;insert into  [conform_finance].[RECONCILE_INVOICE_FACT]&#xA;&#x9;select&#xA;&#x9;[account_key],&#xA;&#x9;[Accnbri],&#xA;&#x9;[Client_id] ,&#xA;&#x9;[Portfolio_key] ,&#xA;&#x9;[Service_key],&#xA;&#x9;[Program_key] ,&#xA;&#x9;[ComCare_service_type],&#xA;&#x9;[Invocie_date_key],&#xA;&#x9;[Invocie_Amount] ,&#xA;&#x9;[Invoice_Period] ,&#xA;&#x9;Period_start_date_key,&#xA;&#x9;period_end_date_key,&#xA;&#x9;[Invoice_Description] ,&#xA;&#x9;[ComCare_serviced_hours],&#xA;&#x9;[ComCare_service_charges] ,&#xA;&#x9;[Balance_flag],&#xA; &#x9;glcode,&#xA;&#x9;costing,&#xA;&#x9;costing_desc&#xA;&#x9;from @tmp_RECONCILE_INVOICE_FACT&#xA;&#xA;&#x9;print 'finish populate fact table'&#xA;&#xA;&#x9;--delivery to front&#xA;&#x9;truncate table  dwhf_finance.finance.[RECONCILE_INVOICE_FACT];&#xA;&#x9;insert into  dwhf_finance.finance.[RECONCILE_INVOICE_FACT]&#xA;&#x9;select &#xA;&#x9;[reconcile_invocie_key],&#xA;&#x9;[account_key],&#xA;&#x9;[Accnbri],&#xA;&#x9;[Client_id] ,&#xA;&#x9;[Portfolio_key] ,&#xA;&#x9;[Service_key],&#xA;&#x9;[Program_key] ,&#xA;&#x9;[ComCare_service_type],&#xA;&#x9;[Invocie_date_key],&#xA;&#x9;[Invocie_Amount] ,&#xA;&#x9;[Invoice_Period] ,&#xA;&#x9;Invoice_Period_start_date_key,&#xA;&#x9;Invoice_period_end_date_key,&#xA;&#x9;[Invoice_Description] ,&#xA;&#x9;[ComCare_serviced_hours],&#xA;&#x9;[ComCare_service_charges] ,&#xA;&#x9;[Balance_flag],&#xA;&#x9;glcode,&#xA;&#x9;costing,&#xA;&#x9;cost_centre&#xA;&#x9;from [conform_finance].[RECONCILE_INVOICE_FACT];&#xA;&#xA;&#xA;&#x9;print 'finish populate front table'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{96C6881E-E456-41A1-8B68-F99499FEFFFD}"
              DTS:From="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT\EST - Write Job Start info"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT\Reconcile_invoice_fact" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{65FC7267-51DF-4104-B57B-A42571F290FA}"
              DTS:From="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT\Reconcile_invoice_fact"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT\reconcicle_unbilledservice_fact" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{DEAE30CA-BDB1-44A4-9CEB-7361146CD1E1}"
              DTS:From="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT\reconcicle_unbilledservice_fact"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT\reconcicle_billedpercentage_fact" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{43F21B87-3275-4BBA-B952-CA51EC44CA83}"
              DTS:From="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT\reconcicle_billedpercentage_fact"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT\EST - Write Job Finish info" />
          </DTS:PrecedenceConstraints>
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{57b4a9cb-6841-4b41-80eb-5b1a080bba14}"
              DTS:EventID="244"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{d6cd6db4-abd9-425b-82bb-37e6046eddd8}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - Fact Tables.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{07D11B70-D506-47B9-BB1A-302393AE2DCF}"
          DTS:From="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container - Fact Tables\SD1 - KPI_FACT"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - Fact Tables.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{1DA28F66-10CF-4A2E-8F98-C071CF98A12B}"
          DTS:From="Package\Sequence Container - Fact Tables\SD1 - KPI_FACT"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - Fact Tables.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{6D0B1E55-E98B-407A-A34A-6384C0AF64D7}"
          DTS:From="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - Fact Tables.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{C8E34550-636B-47E2-A0C8-BFB2C88C0D43}"
          DTS:From="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container - Fact Tables.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{F0139C96-BBCC-44FE-8B91-B7538F809593}"
          DTS:From="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Sequence Container - Fact Tables\SD1 - Kypera_Tenancy_Balance_Fact"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{4C7BF364-E443-4B98-BC53-E76B1EED6C7A}"
      DTS:EventID="1701257339"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{2D797829-03FA-4575-A3EE-46AABB4CBEAF}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph" xmlns:mssge="clr-namespace:Microsoft.SqlServer.Graph.Extended;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
        <NodeLayout
          Size="222,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT\EST - Write Job Finish info"
          TopLeft="5.50000000000003,311.5" />
        <NodeLayout
          Size="222,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT\EST - Write Job Start info"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="222,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT\Get new records and update columns"
          TopLeft="5.50000000000003,209.5" />
        <NodeLayout
          Size="222,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT\Truncate table"
          TopLeft="5.50000000000001,107.5" />
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT.PrecedenceConstraints[Constraint]"
          TopLeft="116.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT.PrecedenceConstraints[Constraint 1]"
          TopLeft="116.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT.PrecedenceConstraints[Constraint 2]"
          TopLeft="116.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="233,603"
          Size="233,646"
          Id="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT"
          TopLeft="8.5,116.5" />
        <NodeLayout
          Size="257,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT\EST - Write Job Finish info"
          TopLeft="35.15,273" />
        <NodeLayout
          Size="257,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT\EST - Write Job Start info"
          TopLeft="35.15,28" />
        <NodeLayout
          Size="257,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT\Get new records and update columns"
          TopLeft="35.15,191" />
        <NodeLayout
          Size="257,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT\Truncate table"
          TopLeft="39.15,101" />
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT.PrecedenceConstraints[Constraint]"
          TopLeft="165.65,70">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT.PrecedenceConstraints[Constraint 1]"
          TopLeft="165.65,143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT.PrecedenceConstraints[Constraint 2]"
          TopLeft="163.65,233">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40"
              Start="0,0"
              End="0,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="325,582"
          Size="325,625"
          Id="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT"
          TopLeft="1192.5,130.5" />
        <NodeLayout
          Size="222,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - KPI_FACT\EST - Write Job Finish info"
          TopLeft="5.5,213.5" />
        <NodeLayout
          Size="222,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - KPI_FACT\EST - Write Job Start info"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="222,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - KPI_FACT\Get new records and update columns"
          TopLeft="5.5,117.5" />
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables\SD1 - KPI_FACT.PrecedenceConstraints[Constraint]"
          TopLeft="116.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,70"
              Start="0,0"
              End="0,62.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,62.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables\SD1 - KPI_FACT.PrecedenceConstraints[Constraint 2]"
          TopLeft="116.5,159.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54"
              Start="0,0"
              End="0,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="233,598"
          Size="233,641"
          Id="Package\Sequence Container - Fact Tables\SD1 - KPI_FACT"
          TopLeft="265.5,119.5" />
        <NodeLayout
          Size="257,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - Kypera_Tenancy_Balance_Fact\EST - Write Job Finish info"
          TopLeft="35.15,273" />
        <NodeLayout
          Size="257,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - Kypera_Tenancy_Balance_Fact\EST - Write Job Start info"
          TopLeft="35.15,28" />
        <NodeLayout
          Size="257,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - Kypera_Tenancy_Balance_Fact\Get new records and update columns"
          TopLeft="35.1500000000001,149" />
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables\SD1 - Kypera_Tenancy_Balance_Fact.PrecedenceConstraints[Constraint]"
          TopLeft="163.65,70">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,79"
              Start="0,0"
              End="0,71.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,71.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables\SD1 - Kypera_Tenancy_Balance_Fact.PrecedenceConstraints[Constraint 2]"
          TopLeft="163.65,191">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,82"
              Start="0,0"
              End="0,74.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,74.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="345,579"
          Size="345,622"
          Id="Package\Sequence Container - Fact Tables\SD1 - Kypera_Tenancy_Balance_Fact"
          TopLeft="1553.5,135.5" />
        <NodeLayout
          Size="257,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT\EST - Write Job Finish info"
          TopLeft="5.50000000000006,311.5" />
        <NodeLayout
          Size="257,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT\EST - Write Job Start info"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="248,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT\LSL_fact"
          TopLeft="10,209.5" />
        <NodeLayout
          Size="149,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT\Truncate table"
          TopLeft="5.50000000000003,107.5" />
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT.PrecedenceConstraints[Constraint]"
          TopLeft="134,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-54,60"
              Start="0,0"
              End="-54,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-50,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-50,30"
                    Point2="-54,30"
                    Point3="-54,34" />
                  <mssgle:LineSegment
                    End="-54,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT.PrecedenceConstraints[Constraint 1]"
          TopLeft="80,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="54,60"
              Start="0,0"
              End="54,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="50,30" />
                  <mssgle:CubicBezierSegment
                    Point1="50,30"
                    Point2="54,30"
                    Point3="54,34" />
                  <mssgle:LineSegment
                    End="54,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT.PrecedenceConstraints[Constraint 2]"
          TopLeft="134,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="268,596"
          Size="268,639"
          Id="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT"
          TopLeft="524.5,119.5" />
        <NodeLayout
          Size="257,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT\EST - Write Job Finish info"
          TopLeft="35.5833333333334,385" />
        <NodeLayout
          Size="257,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT\EST - Write Job Start info"
          TopLeft="35.5833333333334,28" />
        <NodeLayout
          Size="257,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT\reconcicle_billedpercentage_fact"
          TopLeft="35.5833333333334,288" />
        <NodeLayout
          Size="255,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT\reconcicle_unbilledservice_fact"
          TopLeft="35.5833333333334,195" />
        <NodeLayout
          Size="257,42"
          Id="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT\Reconcile_invoice_fact"
          TopLeft="35.5833333333334,99" />
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT.PrecedenceConstraints[Constraint]"
          TopLeft="164.083333333333,70">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT.PrecedenceConstraints[Constraint 2]"
          TopLeft="163.583333333333,141">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54"
              Start="0,0"
              End="0,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT.PrecedenceConstraints[Constraint 3]"
          TopLeft="163.583333333333,237">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT.PrecedenceConstraints[Constraint 4]"
          TopLeft="164.083333333333,330">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55"
              Start="0,0"
              End="0,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="326,588"
          Size="326,631"
          Id="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT"
          TopLeft="817.5,125.5" />
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables.PrecedenceConstraints[Constraint]"
          TopLeft="241.5,439.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="24,0"
              Start="0,0"
              End="16.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="16.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-17.054453125,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables.PrecedenceConstraints[Constraint 1]"
          TopLeft="498.5,439.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="26,0"
              Start="0,0"
              End="18.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-16.054453125,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables.PrecedenceConstraints[Constraint 2]"
          TopLeft="792.5,440">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="25,0"
              Start="0,0"
              End="17.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="17.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-16.554453125,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables.PrecedenceConstraints[Constraint 3]"
          TopLeft="1143.5,442">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="49,0"
              Start="0,0"
              End="41.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="41.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-4.554453125,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container - Fact Tables.PrecedenceConstraints[Constraint 4]"
          TopLeft="1517.5,444.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="36,0"
              Start="0,0"
              End="28.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-11.054453125,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Function:  ETL to generate Finance Data Mart Fact Tables&#xA;Notes:&#xA;1.KPI_Fact: not run everyday / run data at 20 every month"
          ParentId="Package\Sequence Container - Fact Tables"
          Size="668,83"
          Id="c0954a75-0b3e-434c-97b4-2e9ef211d5fc"
          TopLeft="233,27">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="15.75"
              Color="#FF000000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="2320,929"
          Size="2320,972"
          Id="Package\Sequence Container - Fact Tables"
          TopLeft="61.833333333333,35.9999999999982" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package\Sequence Container - Fact Tables\SD1 - DEBTOR_FACT.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="264,42"
          Id="{4982DC4A-388C-4508-8541-61BB3B4DB4F7}"
          TopLeft="448,222" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Sequence Container - Fact Tables\SD1 - EXPENSE_FACT.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="264,42"
          Id="{e2f364ba-38db-4c61-bf67-a2c1168c17d5}"
          TopLeft="448,222" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Sequence Container - Fact Tables\SD1 - KPI_FACT.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="264,42"
          Id="{8597932f-99e0-453d-916e-0b829360b04f}"
          TopLeft="448,222" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Sequence Container - Fact Tables\SD1 - Kypera_Tenancy_Balance_Fact.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="264,42"
          Id="{6b6bd610-0825-4584-94a1-37130f3514b6}"
          TopLeft="448,222" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Sequence Container - Fact Tables\SD1 - LSL_FACT.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="264,42"
          Id="{85021bd8-4b57-4618-9d32-dae2c13d88cc}"
          TopLeft="448,222" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Sequence Container - Fact Tables\SD1 - RECONCILE_INVOICE_FACT.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="264,42"
          Id="{8780ea2f-838c-45e7-8292-f02a0823a46b}"
          TopLeft="448,222" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>